/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * Do __not__ import components from this file as server side rendered components
 * may not hydrate due to missing Stencil runtime. Instead, import these components through the generated 'components.ts'
 * file that re-exports all components with the 'use client' directive.
 */
import { BqAccordionGroup as BqAccordionGroupElement, defineCustomElement as defineBqAccordionGroup } from "@beeq/core/dist/components/bq-accordion-group.js";
import { BqAccordion as BqAccordionElement, defineCustomElement as defineBqAccordion } from "@beeq/core/dist/components/bq-accordion.js";
import { BqAlert as BqAlertElement, defineCustomElement as defineBqAlert } from "@beeq/core/dist/components/bq-alert.js";
import { BqAvatar as BqAvatarElement, defineCustomElement as defineBqAvatar } from "@beeq/core/dist/components/bq-avatar.js";
import { BqBadge as BqBadgeElement, defineCustomElement as defineBqBadge } from "@beeq/core/dist/components/bq-badge.js";
import { BqBreadcrumbItem as BqBreadcrumbItemElement, defineCustomElement as defineBqBreadcrumbItem } from "@beeq/core/dist/components/bq-breadcrumb-item.js";
import { BqBreadcrumb as BqBreadcrumbElement, defineCustomElement as defineBqBreadcrumb } from "@beeq/core/dist/components/bq-breadcrumb.js";
import { BqButton as BqButtonElement, defineCustomElement as defineBqButton } from "@beeq/core/dist/components/bq-button.js";
import { BqCard as BqCardElement, defineCustomElement as defineBqCard } from "@beeq/core/dist/components/bq-card.js";
import { BqCheckbox as BqCheckboxElement, defineCustomElement as defineBqCheckbox } from "@beeq/core/dist/components/bq-checkbox.js";
import { BqCol as BqColElement, defineCustomElement as defineBqCol } from "@beeq/core/dist/components/bq-col.js";
import { BqDatePicker as BqDatePickerElement, defineCustomElement as defineBqDatePicker } from "@beeq/core/dist/components/bq-date-picker.js";
import { BqDialog as BqDialogElement, defineCustomElement as defineBqDialog } from "@beeq/core/dist/components/bq-dialog.js";
import { BqDivider as BqDividerElement, defineCustomElement as defineBqDivider } from "@beeq/core/dist/components/bq-divider.js";
import { BqDrawer as BqDrawerElement, defineCustomElement as defineBqDrawer } from "@beeq/core/dist/components/bq-drawer.js";
import { BqDropdown as BqDropdownElement, defineCustomElement as defineBqDropdown } from "@beeq/core/dist/components/bq-dropdown.js";
import { BqEmptyState as BqEmptyStateElement, defineCustomElement as defineBqEmptyState } from "@beeq/core/dist/components/bq-empty-state.js";
import { BqGrid as BqGridElement, defineCustomElement as defineBqGrid } from "@beeq/core/dist/components/bq-grid.js";
import { BqIcon as BqIconElement, defineCustomElement as defineBqIcon } from "@beeq/core/dist/components/bq-icon.js";
import { BqInput as BqInputElement, defineCustomElement as defineBqInput } from "@beeq/core/dist/components/bq-input.js";
import { BqLogo as BqLogoElement, defineCustomElement as defineBqLogo } from "@beeq/core/dist/components/bq-logo.js";
import { BqNotification as BqNotificationElement, defineCustomElement as defineBqNotification } from "@beeq/core/dist/components/bq-notification.js";
import { BqOptionGroup as BqOptionGroupElement, defineCustomElement as defineBqOptionGroup } from "@beeq/core/dist/components/bq-option-group.js";
import { BqOptionList as BqOptionListElement, defineCustomElement as defineBqOptionList } from "@beeq/core/dist/components/bq-option-list.js";
import { BqOption as BqOptionElement, defineCustomElement as defineBqOption } from "@beeq/core/dist/components/bq-option.js";
import { BqPageTitle as BqPageTitleElement, defineCustomElement as defineBqPageTitle } from "@beeq/core/dist/components/bq-page-title.js";
import { BqPanel as BqPanelElement, defineCustomElement as defineBqPanel } from "@beeq/core/dist/components/bq-panel.js";
import { BqProgress as BqProgressElement, defineCustomElement as defineBqProgress } from "@beeq/core/dist/components/bq-progress.js";
import { BqRadioGroup as BqRadioGroupElement, defineCustomElement as defineBqRadioGroup } from "@beeq/core/dist/components/bq-radio-group.js";
import { BqRadio as BqRadioElement, defineCustomElement as defineBqRadio } from "@beeq/core/dist/components/bq-radio.js";
import { BqRow as BqRowElement, defineCustomElement as defineBqRow } from "@beeq/core/dist/components/bq-row.js";
import { BqSelect as BqSelectElement, defineCustomElement as defineBqSelect } from "@beeq/core/dist/components/bq-select.js";
import { BqSideMenuItem as BqSideMenuItemElement, defineCustomElement as defineBqSideMenuItem } from "@beeq/core/dist/components/bq-side-menu-item.js";
import { BqSideMenu as BqSideMenuElement, defineCustomElement as defineBqSideMenu } from "@beeq/core/dist/components/bq-side-menu.js";
import { BqSlider as BqSliderElement, defineCustomElement as defineBqSlider } from "@beeq/core/dist/components/bq-slider.js";
import { BqSpinner as BqSpinnerElement, defineCustomElement as defineBqSpinner } from "@beeq/core/dist/components/bq-spinner.js";
import { BqStatus as BqStatusElement, defineCustomElement as defineBqStatus } from "@beeq/core/dist/components/bq-status.js";
import { BqStepItem as BqStepItemElement, defineCustomElement as defineBqStepItem } from "@beeq/core/dist/components/bq-step-item.js";
import { BqSteps as BqStepsElement, defineCustomElement as defineBqSteps } from "@beeq/core/dist/components/bq-steps.js";
import { BqSwitch as BqSwitchElement, defineCustomElement as defineBqSwitch } from "@beeq/core/dist/components/bq-switch.js";
import { BqTabGroup as BqTabGroupElement, defineCustomElement as defineBqTabGroup } from "@beeq/core/dist/components/bq-tab-group.js";
import { BqTab as BqTabElement, defineCustomElement as defineBqTab } from "@beeq/core/dist/components/bq-tab.js";
import { BqTag as BqTagElement, defineCustomElement as defineBqTag } from "@beeq/core/dist/components/bq-tag.js";
import { BqText as BqTextElement, defineCustomElement as defineBqText } from "@beeq/core/dist/components/bq-text.js";
import { BqTextarea as BqTextareaElement, defineCustomElement as defineBqTextarea } from "@beeq/core/dist/components/bq-textarea.js";
import { BqToast as BqToastElement, defineCustomElement as defineBqToast } from "@beeq/core/dist/components/bq-toast.js";
import { BqTooltip as BqTooltipElement, defineCustomElement as defineBqTooltip } from "@beeq/core/dist/components/bq-tooltip.js";
import { createComponent, createSSRComponent } from '@stencil/react-output-target/runtime';
import React from 'react';
export const BqAccordion = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-accordion',
        elementClass: BqAccordionElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqBlur: 'bqBlur',
            onBqFocus: 'bqFocus',
            onBqOpen: 'bqOpen',
            onBqAfterOpen: 'bqAfterOpen',
            onBqClose: 'bqClose',
            onBqAfterClose: 'bqAfterClose',
            onBqClick: 'bqClick'
        },
        defineCustomElement: defineBqAccordion
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-accordion',
        properties: {
            appearance: 'appearance',
            disabled: 'disabled',
            expanded: 'expanded',
            noAnimation: 'no-animation',
            rotate: 'rotate',
            size: 'size'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqAccordionGroup = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-accordion-group',
        elementClass: BqAccordionGroupElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqAccordionGroup
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-accordion-group',
        properties: {
            appearance: 'appearance',
            expandAll: 'expand-all',
            noAnimation: 'no-animation',
            multiple: 'multiple',
            size: 'size'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqAlert = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-alert',
        elementClass: BqAlertElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqHide: 'bqHide',
            onBqShow: 'bqShow',
            onBqAfterShow: 'bqAfterShow',
            onBqAfterHide: 'bqAfterHide'
        },
        defineCustomElement: defineBqAlert
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-alert',
        properties: {
            autoDismiss: 'auto-dismiss',
            border: 'border',
            disableClose: 'disable-close',
            hideIcon: 'hide-icon',
            open: 'open',
            time: 'time',
            type: 'type',
            sticky: 'sticky'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqAvatar = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-avatar',
        elementClass: BqAvatarElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqAvatar
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-avatar',
        properties: {
            altText: 'alt-text',
            image: 'image',
            label: 'label',
            initials: 'initials',
            shape: 'shape',
            size: 'size'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqBadge = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-badge',
        elementClass: BqBadgeElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqBadge
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-badge',
        properties: {
            backgroundColor: 'background-color',
            textColor: 'text-color',
            size: 'size'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqBreadcrumb = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-breadcrumb',
        elementClass: BqBreadcrumbElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqBreadcrumb
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-breadcrumb',
        properties: { label: 'label' },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqBreadcrumbItem = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-breadcrumb-item',
        elementClass: BqBreadcrumbItemElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqBlur: 'bqBlur',
            onBqFocus: 'bqFocus',
            onBqClick: 'bqClick'
        },
        defineCustomElement: defineBqBreadcrumbItem
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-breadcrumb-item',
        properties: {
            href: 'href',
            target: 'target',
            rel: 'rel'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqButton = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-button',
        elementClass: BqButtonElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqBlur: 'bqBlur',
            onBqFocus: 'bqFocus',
            onBqClick: 'bqClick'
        },
        defineCustomElement: defineBqButton
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-button',
        properties: {
            appearance: 'appearance',
            block: 'block',
            border: 'border',
            disabled: 'disabled',
            download: 'download',
            href: 'href',
            justifyContent: 'justify-content',
            loading: 'loading',
            size: 'size',
            target: 'target',
            type: 'type',
            variant: 'variant'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqCard = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-card',
        elementClass: BqCardElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqCard
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-card',
        properties: {
            type: 'type',
            border: 'border'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqCheckbox = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-checkbox',
        elementClass: BqCheckboxElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqChange: 'bqChange',
            onBqFocus: 'bqFocus',
            onBqBlur: 'bqBlur'
        },
        defineCustomElement: defineBqCheckbox
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-checkbox',
        properties: {
            backgroundOnHover: 'background-on-hover',
            formId: 'form-id',
            formValidationMessage: 'form-validation-message',
            checked: 'checked',
            disabled: 'disabled',
            indeterminate: 'indeterminate',
            name: 'name',
            required: 'required',
            value: 'value'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqCol = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-col',
        elementClass: BqColElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqCol
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-col',
        properties: { size: 'size' },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqDatePicker = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-date-picker',
        elementClass: BqDatePickerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqBlur: 'bqBlur',
            onBqChange: 'bqChange',
            onBqClear: 'bqClear',
            onBqFocus: 'bqFocus'
        },
        defineCustomElement: defineBqDatePicker
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-date-picker',
        properties: {
            autofocus: 'autofocus',
            clearButtonLabel: 'clear-button-label',
            disableClear: 'disable-clear',
            disabled: 'disabled',
            distance: 'distance',
            firstDayOfWeek: 'first-day-of-week',
            form: 'form',
            formValidationMessage: 'form-validation-message',
            locale: 'locale',
            max: 'max',
            min: 'min',
            months: 'months',
            monthsPerView: 'months-per-view',
            name: 'name',
            open: 'open',
            panelHeight: 'panel-height',
            placeholder: 'placeholder',
            placement: 'placement',
            required: 'required',
            skidding: 'skidding',
            showOutsideDays: 'show-outside-days',
            strategy: 'strategy',
            tentative: 'tentative',
            type: 'type',
            validationStatus: 'validation-status',
            value: 'value'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqDialog = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-dialog',
        elementClass: BqDialogElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqCancel: 'bqCancel',
            onBqClose: 'bqClose',
            onBqOpen: 'bqOpen',
            onBqAfterOpen: 'bqAfterOpen',
            onBqAfterClose: 'bqAfterClose'
        },
        defineCustomElement: defineBqDialog
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-dialog',
        properties: {
            border: 'border',
            disableBackdrop: 'disable-backdrop',
            disableCloseEscKeydown: 'disable-close-esc-keydown',
            disableCloseClickOutside: 'disable-close-click-outside',
            footerAppearance: 'footer-appearance',
            hideCloseButton: 'hide-close-button',
            open: 'open',
            size: 'size'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqDivider = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-divider',
        elementClass: BqDividerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqDivider
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-divider',
        properties: {
            dashed: 'dashed',
            orientation: 'orientation',
            strokeColor: 'stroke-color',
            titleAlignment: 'title-alignment',
            strokeDashWidth: 'stroke-dash-width',
            strokeDashGap: 'stroke-dash-gap',
            strokeThickness: 'stroke-thickness',
            strokeBasis: 'stroke-basis',
            strokeLinecap: 'stroke-linecap'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqDrawer = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-drawer',
        elementClass: BqDrawerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqClose: 'bqClose',
            onBqOpen: 'bqOpen',
            onBqAfterOpen: 'bqAfterOpen',
            onBqAfterClose: 'bqAfterClose'
        },
        defineCustomElement: defineBqDrawer
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-drawer',
        properties: {
            enableBackdrop: 'enable-backdrop',
            closeOnClickOutside: 'close-on-click-outside',
            closeOnEsc: 'close-on-esc',
            open: 'open',
            placement: 'placement',
            position: 'position'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqDropdown = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-dropdown',
        elementClass: BqDropdownElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onBqOpen: 'bqOpen' },
        defineCustomElement: defineBqDropdown
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-dropdown',
        properties: {
            disabled: 'disabled',
            distance: 'distance',
            keepOpenOnSelect: 'keep-open-on-select',
            placement: 'placement',
            open: 'open',
            panelHeight: 'panel-height',
            sameWidth: 'same-width',
            skidding: 'skidding',
            strategy: 'strategy'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqEmptyState = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-empty-state',
        elementClass: BqEmptyStateElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqEmptyState
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-empty-state',
        properties: { size: 'size' },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqGrid = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-grid',
        elementClass: BqGridElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqGrid
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-grid',
        properties: {
            fixed: 'fixed',
            noPadding: 'no-padding'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqIcon = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-icon',
        elementClass: BqIconElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onSvgLoaded: 'svgLoaded' },
        defineCustomElement: defineBqIcon
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-icon',
        properties: {
            label: 'label',
            color: 'color',
            name: 'name',
            size: 'size',
            src: 'src',
            weight: 'weight'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqInput = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-input',
        elementClass: BqInputElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqBlur: 'bqBlur',
            onBqChange: 'bqChange',
            onBqClear: 'bqClear',
            onBqFocus: 'bqFocus',
            onBqInput: 'bqInput'
        },
        defineCustomElement: defineBqInput
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-input',
        properties: {
            autocapitalize: 'autocapitalize',
            autocomplete: 'autocomplete',
            autocorrect: 'autocorrect',
            autofocus: 'autofocus',
            clearButtonLabel: 'clear-button-label',
            debounceTime: 'debounce-time',
            disabled: 'disabled',
            disableClear: 'disable-clear',
            form: 'form',
            formValidationMessage: 'form-validation-message',
            inputmode: 'inputmode',
            max: 'max',
            maxlength: 'maxlength',
            min: 'min',
            minlength: 'minlength',
            name: 'name',
            pattern: 'pattern',
            placeholder: 'placeholder',
            readonly: 'readonly',
            required: 'required',
            step: 'step',
            type: 'type',
            validationStatus: 'validation-status',
            value: 'value'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqLogo = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-logo',
        elementClass: BqLogoElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqLogo
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-logo',
        properties: {
            size: 'size',
            type: 'type',
            variant: 'variant'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqNotification = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-notification',
        elementClass: BqNotificationElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqHide: 'bqHide',
            onBqShow: 'bqShow',
            onBqAfterOpen: 'bqAfterOpen',
            onBqAfterClose: 'bqAfterClose'
        },
        defineCustomElement: defineBqNotification
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-notification',
        properties: {
            autoDismiss: 'auto-dismiss',
            border: 'border',
            disableClose: 'disable-close',
            hideIcon: 'hide-icon',
            open: 'open',
            time: 'time',
            type: 'type'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqOption = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-option',
        elementClass: BqOptionElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqBlur: 'bqBlur',
            onBqFocus: 'bqFocus',
            onBqClick: 'bqClick',
            onBqEnter: 'bqEnter'
        },
        defineCustomElement: defineBqOption
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-option',
        properties: {
            hidden: 'hidden',
            disabled: 'disabled',
            value: 'value',
            selected: 'selected'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqOptionGroup = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-option-group',
        elementClass: BqOptionGroupElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqOptionGroup
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-option-group',
        properties: {},
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqOptionList = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-option-list',
        elementClass: BqOptionListElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onBqSelect: 'bqSelect' },
        defineCustomElement: defineBqOptionList
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-option-list',
        properties: { ariaLabel: 'aria-label' },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqPageTitle = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-page-title',
        elementClass: BqPageTitleElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqPageTitle
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-page-title',
        properties: {},
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqPanel = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-panel',
        elementClass: BqPanelElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqPanel
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-panel',
        properties: {
            distance: 'distance',
            placement: 'placement',
            open: 'open',
            sameWidth: 'same-width',
            skidding: 'skidding',
            strategy: 'strategy'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqProgress = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-progress',
        elementClass: BqProgressElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqProgress
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-progress',
        properties: {
            borderShape: 'border-shape',
            enableTooltip: 'enable-tooltip',
            indeterminate: 'indeterminate',
            label: 'label',
            thickness: 'thickness',
            type: 'type',
            value: 'value'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqRadio = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-radio',
        elementClass: BqRadioElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqClick: 'bqClick',
            onBqFocus: 'bqFocus',
            onBqBlur: 'bqBlur',
            onBqKeyDown: 'bqKeyDown'
        },
        defineCustomElement: defineBqRadio
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-radio',
        properties: {
            checked: 'checked',
            disabled: 'disabled',
            backgroundOnHover: 'background-on-hover',
            formId: 'form-id',
            name: 'name',
            required: 'required',
            value: 'value'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqRadioGroup = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-radio-group',
        elementClass: BqRadioGroupElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onBqChange: 'bqChange' },
        defineCustomElement: defineBqRadioGroup
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-radio-group',
        properties: {
            backgroundOnHover: 'background-on-hover',
            debounceTime: 'debounce-time',
            disabled: 'disabled',
            fieldset: 'fieldset',
            name: 'name',
            orientation: 'orientation',
            required: 'required',
            requiredValidationMessage: 'required-validation-message',
            value: 'value'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqRow = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-row',
        elementClass: BqRowElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqRow
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-row',
        properties: {},
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqSelect = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-select',
        elementClass: BqSelectElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqBlur: 'bqBlur',
            onBqClear: 'bqClear',
            onBqFocus: 'bqFocus',
            onBqSelect: 'bqSelect'
        },
        defineCustomElement: defineBqSelect
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-select',
        properties: {
            autofocus: 'autofocus',
            clearButtonLabel: 'clear-button-label',
            debounceTime: 'debounce-time',
            disabled: 'disabled',
            disableClear: 'disable-clear',
            distance: 'distance',
            form: 'form',
            keepOpenOnSelect: 'keep-open-on-select',
            name: 'name',
            maxTagsVisible: 'max-tags-visible',
            multiple: 'multiple',
            open: 'open',
            panelHeight: 'panel-height',
            placeholder: 'placeholder',
            placement: 'placement',
            readonly: 'readonly',
            required: 'required',
            sameWidth: 'same-width',
            skidding: 'skidding',
            strategy: 'strategy',
            validationStatus: 'validation-status',
            value: 'value'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqSideMenu = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-side-menu',
        elementClass: BqSideMenuElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqCollapse: 'bqCollapse',
            onBqSelect: 'bqSelect'
        },
        defineCustomElement: defineBqSideMenu
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-side-menu',
        properties: {
            appearance: 'appearance',
            collapse: 'collapse',
            size: 'size'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqSideMenuItem = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-side-menu-item',
        elementClass: BqSideMenuItemElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqBlur: 'bqBlur',
            onBqFocus: 'bqFocus',
            onBqClick: 'bqClick'
        },
        defineCustomElement: defineBqSideMenuItem
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-side-menu-item',
        properties: {
            active: 'active',
            collapse: 'collapse',
            disabled: 'disabled'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqSlider = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-slider',
        elementClass: BqSliderElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqChange: 'bqChange',
            onBqBlur: 'bqBlur',
            onBqFocus: 'bqFocus'
        },
        defineCustomElement: defineBqSlider
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-slider',
        properties: {
            debounceTime: 'debounce-time',
            disabled: 'disabled',
            enableValueIndicator: 'enable-value-indicator',
            gap: 'gap',
            max: 'max',
            min: 'min',
            name: 'name',
            step: 'step',
            type: 'type',
            value: 'value',
            enableTooltip: 'enable-tooltip',
            tooltipAlwaysVisible: 'tooltip-always-visible'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqSpinner = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-spinner',
        elementClass: BqSpinnerElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqSpinner
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-spinner',
        properties: {
            animation: 'animation',
            textPosition: 'text-position',
            size: 'size'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqStatus = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-status',
        elementClass: BqStatusElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqStatus
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-status',
        properties: { type: 'type' },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqStepItem = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-step-item',
        elementClass: BqStepItemElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onBqClick: 'bqClick' },
        defineCustomElement: defineBqStepItem
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-step-item',
        properties: {
            size: 'size',
            status: 'status',
            type: 'type'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqSteps = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-steps',
        elementClass: BqStepsElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqSteps
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-steps',
        properties: {
            dividerColor: 'divider-color',
            size: 'size',
            type: 'type'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqSwitch = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-switch',
        elementClass: BqSwitchElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqChange: 'bqChange',
            onBqFocus: 'bqFocus',
            onBqBlur: 'bqBlur'
        },
        defineCustomElement: defineBqSwitch
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-switch',
        properties: {
            backgroundOnHover: 'background-on-hover',
            checked: 'checked',
            disabled: 'disabled',
            formValidationMessage: 'form-validation-message',
            fullWidth: 'full-width',
            innerLabel: 'inner-label',
            justifyContent: 'justify-content',
            name: 'name',
            required: 'required',
            reverseOrder: 'reverse-order',
            value: 'value'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqTab = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-tab',
        elementClass: BqTabElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqClick: 'bqClick',
            onBqFocus: 'bqFocus',
            onBqBlur: 'bqBlur',
            onBqKeyDown: 'bqKeyDown'
        },
        defineCustomElement: defineBqTab
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-tab',
        properties: {
            active: 'active',
            controls: 'controls',
            disabled: 'disabled',
            orientation: 'orientation',
            placement: 'placement',
            size: 'size',
            tabId: 'tab-id'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqTabGroup = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-tab-group',
        elementClass: BqTabGroupElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onBqChange: 'bqChange' },
        defineCustomElement: defineBqTabGroup
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-tab-group',
        properties: {
            debounceTime: 'debounce-time',
            disableDivider: 'disable-divider',
            orientation: 'orientation',
            placement: 'placement',
            size: 'size',
            value: 'value'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqTag = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-tag',
        elementClass: BqTagElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqClose: 'bqClose',
            onBqOpen: 'bqOpen',
            onBqBlur: 'bqBlur',
            onBqClick: 'bqClick',
            onBqFocus: 'bqFocus'
        },
        defineCustomElement: defineBqTag
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-tag',
        properties: {
            border: 'border',
            clickable: 'clickable',
            color: 'color',
            disabled: 'disabled',
            hidden: 'hidden',
            removable: 'removable',
            selected: 'selected',
            size: 'size',
            variant: 'variant'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqText = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-text',
        elementClass: BqTextElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqText
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-text',
        properties: {
            backgroundColor: 'background-color',
            textColor: 'text-color',
            size: 'size'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqTextarea = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-textarea',
        elementClass: BqTextareaElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqBlur: 'bqBlur',
            onBqChange: 'bqChange',
            onBqClear: 'bqClear',
            onBqFocus: 'bqFocus',
            onBqInput: 'bqInput'
        },
        defineCustomElement: defineBqTextarea
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-textarea',
        properties: {
            autocapitalize: 'autocapitalize',
            autocomplete: 'autocomplete',
            autocorrect: 'autocorrect',
            autofocus: 'autofocus',
            autoGrow: 'auto-grow',
            debounceTime: 'debounce-time',
            disabled: 'disabled',
            disableResize: 'disable-resize',
            form: 'form',
            formValidationMessage: 'form-validation-message',
            maxlength: 'maxlength',
            name: 'name',
            placeholder: 'placeholder',
            readonly: 'readonly',
            required: 'required',
            rows: 'rows',
            spellcheck: 'spellcheck',
            validationStatus: 'validation-status',
            value: 'value',
            wrap: 'wrap'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqToast = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-toast',
        elementClass: BqToastElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onBqHide: 'bqHide',
            onBqShow: 'bqShow'
        },
        defineCustomElement: defineBqToast
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-toast',
        properties: {
            border: 'border',
            type: 'type',
            placement: 'placement',
            hideIcon: 'hide-icon',
            open: 'open',
            time: 'time'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
export const BqTooltip = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent({
        tagName: 'bq-tooltip',
        elementClass: BqTooltipElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {},
        defineCustomElement: defineBqTooltip
    })
    : /*@__PURE__*/ createSSRComponent({
        tagName: 'bq-tooltip',
        properties: {
            alwaysVisible: 'always-visible',
            distance: 'distance',
            hideArrow: 'hide-arrow',
            placement: 'placement',
            sameWidth: 'same-width',
            displayOn: 'display-on',
            visible: 'visible'
        },
        hydrateModule: import('@beeq/core/dist/hydrate')
    });
//# sourceMappingURL=components.server.js.map