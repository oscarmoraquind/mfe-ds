{"file":"bq-drawer.entry.esm.js","mappings":"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","names":[],"sources":["../../packages/beeq/src/components/drawer/bq-drawer.types.ts","../../packages/beeq/src/components/drawer/scss/bq-drawer.scss?tag=bq-drawer&encapsulation=shadow","../../packages/beeq/src/components/drawer/bq-drawer.tsx"],"sourcesContent":["export const DRAWER_POSITIONS = ['start', 'end'] as const;\nexport type TDrawerPosition = (typeof DRAWER_POSITIONS)[number];\n// !TO BE REMOVED: `placement` is deprecated and it will be removed in the future\nexport const DRAWER_PLACEMENT = ['left', 'right'] as const;\nexport type TDrawerPlacement = (typeof DRAWER_PLACEMENT)[number];\n","/* -------------------------------------------------------------------------- */\n/*                        Drawer styles                        */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-drawer.variables';\n\n:host {\n  @apply invisible #{!important};\n}\n\n:host(.bq-drawer--open) {\n  @apply visible #{!important};\n}\n\n.bq-drawer {\n  @apply fixed z-[--bq-drawer--zIndex] flex flex-col gap-[--bq-drawer--gap] bg-primary shadow-m is-[--bq-drawer--width] max-is-full p-b-[--bq-drawer--paddingY] p-i-[--bq-drawer--paddingX] inset-b-0;\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Method, Prop, State, Watch } from '@stencil/core';\n\nimport { DRAWER_PLACEMENT, DRAWER_POSITIONS, TDrawerPlacement, TDrawerPosition } from './bq-drawer.types';\nimport { enter, hasSlotContent, isNil, leave, validatePropValue } from '../../shared/utils';\n\n/**\n * The Drawer component provides a sliding panel interface commonly used for navigation or presenting additional content without taking up significant screen space.\n *\n * @example How to use it\n * ```html\n * <bq-drawer position=\"end\">\n *   <div class=\"flex gap-xs\" slot=\"title\">Title</div>\n *   <div class=\"...\">\n *     Content\n *   </div>\n *   <div class=\"flex flex-1 justify-center gap-xs\" slot=\"footer\">\n *     <bq-button appearance=\"primary\" block=\"\" size=\"small\">Button</bq-button>\n *     <bq-button appearance=\"link\" block=\"\" size=\"small\">Button</bq-button>\n *   </div>\n * </bq-drawer>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/871139-drawer\n * @status stable\n *\n * @dependency bq-button\n * @dependency bq-icon\n * @dependency bq-divider\n *\n * @attr {boolean} enable-backdrop - If true, the backdrop overlay will be shown when the drawer opens.\n * @attr {boolean} close-on-click-outside - If true, the drawer will not close when clicking outside the panel.\n * @attr {boolean} close-on-esc - If true, the drawer will not close when the [Esc] key is pressed.\n * @attr {boolean} open - If true, the drawer component will be shown.\n * @attr {\"start\" | \"end\"} position - Defines the position of the drawer.\n *\n * @method show - Method to be called to show the drawer component.\n * @method hide - Method to be called to hide the drawer component.\n *\n * @event bqClose - Callback handler to be called when the drawer is closed.\n * @event bqOpen - Callback handler to be called when the drawer is opened.\n * @event bqAfterOpen - Callback handler to be called after the drawer has been opened.\n * @event bqAfterClose - Callback handler to be called after the drawer has been closed.\n *\n * @slot title - The title content of the drawer.\n * @slot - The body content of the drawer.\n * @slot footer - The footer content of the drawer.\n * @slot button-close - The close button content of the drawer.\n * @slot footer-divider - The footer divider content of the drawer.\n *\n * @part backdrop - The `<div>` that holds the backdrop overlay.\n * @part button-close - The BqButton that closes the drawer.\n * @part button-close__btn - The native button used under the hood that closes the drawer.\n * @part button-close__label - The text inside the native button that closes the drawer.\n * @part panel - The `<div>` that holds the drawer entire content.\n * @part header - The `<header>` that holds the icon, title, and close button.\n * @part title - The `<div>` that holds the title content.\n * @part body - The `<main>` that holds the drawer body content.\n * @part footer - The `<footer>` that holds footer content.\n *\n * @cssprop --bq-drawer--backgroundBackdrop - Background color of the backdrop\n * @cssprop --bq-drawer--gap - Gap between the drawer and the viewport\n * @cssprop --bq-drawer--width - Width of the drawer\n * @cssprop --bq-drawer--paddingX - Padding left and right of the drawer\n * @cssprop --bq-drawer--paddingY - Padding top and bottom of the drawer\n * @cssprop --bq-drawer--zIndex - Z-index of the drawer component\n */\n@Component({\n  tag: 'bq-drawer',\n  styleUrl: './scss/bq-drawer.scss',\n  shadow: true,\n})\nexport class BqDrawer {\n  // Own Properties\n  // ====================\n\n  private footerElem: HTMLElement;\n  private drawerElem: HTMLDivElement;\n  private OPEN_CSS_CLASS = 'bq-drawer--open';\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqDrawerElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() private hasFooter = false;\n  @State() hasIcon: boolean = false;\n\n  // Public Property API\n  // ========================\n\n  /** If true, the backdrop overlay will be shown when the drawer opens */\n  @Prop({ reflect: true }) enableBackdrop = false;\n\n  /** If true, the drawer will not close when clicking outside the panel */\n  @Prop({ reflect: true }) closeOnClickOutside = false;\n\n  /** If true, the dialog will not close when the [Esc] key is pressed */\n  @Prop({ reflect: true }) closeOnEsc = false;\n\n  /** If true, the drawer component will be shown */\n  @Prop({ reflect: true, mutable: true }) open: boolean;\n\n  /** @deprecated Defines the position of the drawer */\n  @Prop({ reflect: true, mutable: true }) placement: TDrawerPlacement = 'right';\n\n  /** Defines the position of the drawer */\n  @Prop({ reflect: true, mutable: true }) position: TDrawerPosition = 'end';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('open')\n  async handleOpenChange() {\n    if (!this.open) {\n      await this.handleAfterHide();\n      return;\n    }\n\n    await this.handleAfterShow();\n  }\n\n  /**\n   * !TO BE REMOVED: Delete this `@Watch()` once the deprecated `placement` property is removed\n   * We need to maintain retro-compatibility with the deprecated `placement` property\n   */\n  @Watch('placement')\n  handlePlacementChange() {\n    if (!isNil(this.placement)) {\n      console.warn(\n        `❗️ [bq-drawer]: the 'placement' prop is deprecated and it will be removed in the future. Please use 'position' instead.`,\n      );\n    }\n    validatePropValue(DRAWER_PLACEMENT, 'right', this.el, 'placement');\n    // Sync 'position' property\n    const synPositionMap = {\n      right: 'end',\n      left: 'start',\n    };\n    this.position = (synPositionMap[this.placement] as TDrawerPosition) || this.position;\n  }\n\n  @Watch('position')\n  handlePositionChange() {\n    validatePropValue(DRAWER_POSITIONS, 'start', this.el, 'position');\n    /**\n     * Sync 'placement' property\n     * !TO BE REMOVED: Delete the code below once the deprecated `placement` property is removed\n     */\n    const syncPlacementMap = {\n      end: 'right',\n      start: 'left',\n    };\n    this.placement = (syncPlacementMap[this.position] as TDrawerPlacement) || this.placement;\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Callback handler to be called when the drawer is closed */\n  @Event() bqClose!: EventEmitter;\n\n  /** Callback handler to be called when the drawer is opened */\n  @Event() bqOpen!: EventEmitter;\n\n  /** Callback handler to be called after the drawer has been opened */\n  @Event() bqAfterOpen!: EventEmitter;\n\n  /** Callback handler to be called after the drawer has been closed */\n  @Event() bqAfterClose!: EventEmitter;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.handlePositionChange();\n    // !TO BE REMOVED: Delete this once the deprecated `placement` property is removed\n    this.handlePlacementChange();\n  }\n\n  // Listeners\n  // ==============\n\n  @Listen('mousedown', { target: 'window', capture: true })\n  async handleMouseClick(event: MouseEvent) {\n    if (!this.open) return;\n    if (!this.drawerElem || this.closeOnClickOutside) return;\n    // Skip if the mouse button is not the main button\n    if (event.button !== 0) return;\n\n    const rect = this.drawerElem.getBoundingClientRect();\n    if (event.clientX < rect.left || event.clientX > rect.right) {\n      await this.hide();\n    }\n  }\n\n  @Listen('keydown', { target: 'window', capture: true })\n  async handleKeyDown(event: KeyboardEvent) {\n    if (!this.open) return;\n    if (!this.drawerElem || this.closeOnEsc || !(event.key === 'Escape' || event.key === 'Esc')) return;\n\n    await this.hide();\n  }\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  /** Method to be called to hide the drawer component */\n  @Method()\n  async hide(): Promise<void> {\n    const ev = this.bqClose.emit();\n    if (ev.defaultPrevented) return;\n\n    this.open = false;\n  }\n\n  /** Method to be called to show the drawer component */\n  @Method()\n  async show(): Promise<void> {\n    const ev = this.bqOpen.emit();\n    if (ev.defaultPrevented) return;\n\n    this.open = true;\n  }\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleFooterSlotChange = () => {\n    this.hasFooter = hasSlotContent(this.footerElem, 'footer');\n  };\n\n  private handleAfterHide = async () => {\n    if (!this.drawerElem) return;\n\n    await leave(this.drawerElem);\n    this.handleTransitionEnd();\n  };\n\n  private handleAfterShow = async () => {\n    if (!this.drawerElem) return;\n\n    this.el.classList.add(this.OPEN_CSS_CLASS);\n    await enter(this.drawerElem);\n    this.handleTransitionEnd();\n  };\n\n  private handleTransitionEnd = () => {\n    if (this.open) {\n      this.bqAfterOpen.emit();\n      return;\n    }\n\n    this.bqAfterClose.emit();\n    this.el.classList.remove(this.OPEN_CSS_CLASS);\n  };\n\n  private get isPositionStart() {\n    // !TO BE REMOVED: `placement` is deprecated and will be removed in the future\n    return this.position === 'start' || this.placement === 'left';\n  }\n\n  private get isPositionEnd() {\n    // !TO BE REMOVED: `placement` is deprecated and will be removed in the future\n    return this.position === 'end' || this.placement === 'right';\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <Host>\n        {/* BACKDROP */}\n        {this.enableBackdrop && (\n          <div\n            class={{\n              'fixed inset-0 block bg-[--bq-drawer--backgroundBackdrop] opacity-0 transition-opacity duration-300':\n                true,\n              'pointer-events-none': !this.open,\n              'opacity-60': this.open,\n            }}\n            tabIndex={-1}\n            part=\"backdrop\"\n          />\n        )}\n        {/* DRAWER PANEL */}\n        <div\n          class={{\n            [`bq-drawer transition-all duration-300 ease-in-out ${this.position || this.placement}`]: true,\n            '-start-[--bq-drawer--width]': this.isPositionStart,\n            '-end-[--bq-drawer--width]': this.isPositionEnd,\n            'start-0': this.open && this.isPositionStart,\n            'end-0': this.open && this.isPositionEnd,\n          }}\n          ref={(div) => (this.drawerElem = div)}\n          aria-hidden={!this.open ? 'true' : 'false'}\n          aria-labelledby=\"bq-drawer__title\"\n          aria-modal=\"true\"\n          hidden={!this.open}\n          part=\"panel\"\n          role=\"dialog\"\n        >\n          <header class=\"flex items-center\" part=\"header\">\n            <h2\n              class=\"flex-1 items-center justify-between font-bold leading-regular text-primary\"\n              id=\"bq-drawer__title\"\n              part=\"title\"\n            >\n              <slot name=\"title\" />\n            </h2>\n            <div class=\"flex\" part=\"button-close\">\n              <bq-button\n                class=\"[&::part(button)]:rounded-s [&::part(button)]:border-0 [&::part(button)]:bs-fit [&::part(button)]:p-b-0 [&::part(button)]:p-i-0 [&::part(label)]:inline-flex\"\n                appearance=\"text\"\n                size=\"small\"\n                slot=\"button-close\"\n                exportparts=\"button:button-close__btn,label:button-close__label\"\n                onClick={this.hide.bind(this)}\n              >\n                <slot name=\"button-close\">\n                  <bq-icon name=\"x-bold\" role=\"img\" title=\"Close\" />\n                </slot>\n              </bq-button>\n            </div>\n          </header>\n          <main class=\"block flex-auto overflow-auto\" part=\"body\">\n            <slot />\n          </main>\n          <footer\n            class={{\n              block: true,\n              '!hidden': !this.hasFooter,\n            }}\n            ref={(footerElem) => (this.footerElem = footerElem)}\n            part=\"footer\"\n          >\n            <slot name=\"footer-divider\">\n              <bq-divider class=\"mb-m block\" dashed />\n            </slot>\n            <slot name=\"footer\" onSlotchange={this.handleFooterSlotChange} />\n          </footer>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}