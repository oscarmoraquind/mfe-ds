{"file":"bq-tab.entry.cjs.js","mappings":"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","names":["validatePropValue","TAB_SIZE","TAB_ORIENTATION","TAB_PLACEMENT","hasSlotContent","h"],"sources":["../../packages/beeq/src/components/tab/scss/bq-tab.scss?tag=bq-tab&encapsulation=shadow","../../packages/beeq/src/components/tab/bq-tab.tsx"],"sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                Tab styles                               */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-tab.variables';\n\n:host {\n  @apply inline-block;\n}\n\n.bq-tab {\n  @apply relative flex cursor-pointer items-center justify-center rounded-s disabled:cursor-not-allowed disabled:opacity-60;\n  @apply text-[length:--bq-tab--font-size] font-[--bq-tab--font-weight] leading-[--bq-tab--line-height] [&:not([disabled])]:hover:bg-hover-ui-primary [&:not([disabled])]:hover:text-hover-brand;\n  @apply border-0 bg-transparent focus-visible:focus;\n  @apply transition-[color,background-color,border-color,box-shadow] duration-300;\n\n  &::after {\n    @apply absolute z-[1] block bg-brand opacity-0 content-empty -inset-be-1;\n    @apply transition-opacity duration-300 ease-linear;\n  }\n\n  &--horizontal-start,\n  &--horizontal-end {\n    &::after {\n      /**\n     * This hack will make the underline larger so it fits till the tab bar edges for the first and last tab button,\n     * because the parent container applies some padding to not cut the focus outline style.\n     */\n      @apply -start-xs3 bs-[2px] is-[calc(100%_+_var(--bq-spacing-xs2))];\n    }\n  }\n\n  &--vertical-start {\n    @apply justify-end is-full;\n\n    &::after {\n      @apply -end-xs2 bs-[calc(100%_+_var(--bq-spacing-xs2))] is-[2px];\n    }\n  }\n\n  &--vertical-end {\n    @apply justify-start is-full;\n\n    &::after {\n      @apply -start-xs2 bs-[calc(100%_+_var(--bq-spacing-xs2))] is-[2px];\n    }\n  }\n\n  &[aria-selected='true']::after {\n    @apply opacity-100;\n  }\n\n  &--small {\n    @apply p-b-[--bq-tab--padding-vertical-small] p-i-[--bq-tab--padding-horizontal-small];\n\n    ::slotted(bq-icon) {\n      --bq-icon--size: var(--bq-tab--icon-size-small) #{!important};\n    }\n  }\n\n  &--medium {\n    @apply p-b-[--bq-tab--padding-vertical-medium] p-i-[--bq-tab--padding-horizontal-medium];\n\n    ::slotted(bq-icon) {\n      --bq-icon--size: var(--bq-tab--icon-size-medium) #{!important};\n    }\n  }\n\n  &--large {\n    @apply text-l p-b-[--bq-tab--padding-vertical-large] p-i-[--bq-tab--padding-horizontal-large];\n\n    ::slotted(bq-icon) {\n      --bq-icon--size: var(--bq-tab--icon-size-large) #{!important};\n    }\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Method, Prop, State, Watch } from '@stencil/core';\n\nimport { TAB_ORIENTATION, TAB_PLACEMENT, TAB_SIZE, TTabOrientation, TTabPlacement, TTabSize } from './bq-tab.types';\nimport { hasSlotContent, validatePropValue } from '../../shared/utils';\n\n/**\n * The tab is a user interface element that allows users to navigate between different sections of a page.\n * It should be used inside `<bq-tab-group>` component.\n *\n * @example How to use it\n * ```html\n * <bq-tab tab-id=\"1\" controls=\"panel-1\">Tab 1</bq-tab>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/775321-tabs\n * @status stable\n *\n * @attr {boolean} active - If `true` tab is active\n * @attr {string} controls - The tab panel id that the tab controls\n * @attr {boolean} disabled - If `true` tab is disabled\n * @attr {string} orientation - The direction that tab should be render\n * @attr {string} placement - The placement that tab should be render\n * @attr {string} size - The size of the tab\n * @attr {string} tab-id - The id of the tab\n *\n * @event bqClick - Handler to be called when the tab state changes\n * @event bqFocus - Handler to be called when the tab gets focus\n * @event bqBlur - Handler to be called when the tab loses focus\n * @event bqKeyDown - Handler to be called when the tab key is pressed\n *\n * @method vClick - Simulate a click event on the native `<button>` HTML element used under the hood\n * @method vFocus - Sets focus on the native `<button>` HTML element used under the hood\n * @method vBlur - Remove focus from the native `<button>` HTML element used under the hood\n *\n * @part base - The HTML button used under the hood.\n * @part content - The HTML `<div>` element that holds the content.\n * @part icon - The HTML `<div>` element that holds the icon content.\n * @part text - The HTML `<div>` element that holds the text content.\n * @part underline - The HTML `<div>` element that display active state.\n *\n * @cssprop --bq-tab--font-size - Font size\n * @cssprop --bq-tab--font-weight - Font weight\n * @cssprop --bq-tab--icon-size-large - Icon size for large tab\n * @cssprop --bq-tab--icon-size-medium - Icon size for medium tab\n * @cssprop --bq-tab--icon-size-small - Icon size for small tab\n * @cssprop --bq-tab--label-icon-gap - Gap between label and icon\n * @cssprop --bq-tab--line-height - Line height\n * @cssprop --bq-tab--padding-horizontal-large - Horizontal padding for large tab\n * @cssprop --bq-tab--padding-horizontal-medium - Horizontal padding for medium tab\n * @cssprop --bq-tab--padding-horizontal-small - Horizontal padding for small tab\n * @cssprop --bq-tab--padding-vertical-large - Vertical padding for large tab\n * @cssprop --bq-tab--padding-vertical-medium - Vertical padding for medium tab\n * @cssprop --bq-tab--padding-vertical-small - Vertical padding for small tab\n */\n@Component({\n  tag: 'bq-tab',\n  styleUrl: './scss/bq-tab.scss',\n  shadow: true,\n})\nexport class BqTab {\n  // Own Properties\n  // ====================\n\n  private buttonElement: HTMLButtonElement;\n  private iconElement: HTMLSpanElement;\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqTabElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() tabIndex: number | null = null;\n  @State() hasIcon: boolean = false;\n\n  // Public Property API\n  // ========================\n\n  /** If true tab is active */\n  @Prop({ reflect: true, mutable: true }) active?: boolean;\n\n  /** The tab panel id that the tab controls */\n  @Prop({ reflect: true }) controls!: string;\n\n  /** If true tab is disabled */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** The direction that tab should be render */\n  @Prop({ reflect: true }) orientation?: TTabOrientation = 'horizontal';\n\n  /** The placement that tab should be render */\n  @Prop({ reflect: true }) placement?: TTabPlacement = 'start';\n\n  /** The size of the tab */\n  @Prop({ reflect: true }) size: TTabSize = 'medium';\n\n  /** The id of the tab */\n  @Prop({ reflect: true }) tabId!: string;\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('size')\n  @Watch('orientation')\n  @Watch('placement')\n  checkPropValues() {\n    validatePropValue(TAB_SIZE, 'medium', this.el, 'size');\n    validatePropValue(TAB_ORIENTATION, 'horizontal', this.el, 'orientation');\n    validatePropValue(TAB_PLACEMENT, 'start', this.el, 'placement');\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Handler to be called when the tab state changes */\n  @Event() bqClick: EventEmitter<HTMLBqTabElement>;\n\n  /** Handler to be called when the tab gets focus */\n  @Event() bqFocus: EventEmitter<HTMLBqTabElement>;\n\n  /** Handler to be called when the tab loses focus */\n  @Event() bqBlur: EventEmitter<HTMLBqTabElement>;\n\n  /** Handler to be called when the tab key is pressed */\n  @Event() bqKeyDown: EventEmitter<KeyboardEvent>;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.checkPropValues();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n  /**\n   * Simulate a click event on the native `<button>` HTML element used under the hood.\n   * Use this method instead of the global `element.click()`.\n   */\n  @Method()\n  async vClick() {\n    this.buttonElement?.click();\n  }\n\n  /**\n   * Sets focus on the native `<button>` HTML element used under the hood.\n   * Use this method instead of the global `element.focus()`.\n   */\n  @Method()\n  async vFocus() {\n    this.buttonElement?.focus();\n  }\n\n  /**\n   * Remove focus from the native `<button>` HTML element used under the hood.\n   * Use this method instead of the global `element.blur()`.\n   */\n  @Method()\n  async vBlur() {\n    this.buttonElement?.blur();\n  }\n\n  /**\n   * @internal Sets tabindex on the native `<button>` HTML element used under the hood.\n   * This method is used inside `<bq-tab-group>` to make tab focusable after the active one is focused\n   */\n  @Method()\n  async enableFocus(value: boolean) {\n    this.tabIndex = value ? 0 : null;\n  }\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleClick = () => {\n    this.active = true;\n    this.bqClick.emit(this.el);\n  };\n\n  private handleOnFocus = () => {\n    this.bqFocus.emit(this.el);\n  };\n\n  private handleOnBlur = () => {\n    this.bqBlur.emit(this.el);\n  };\n\n  private handleOnKeyDown = (event: KeyboardEvent) => {\n    this.bqKeyDown.emit(event);\n  };\n\n  private handleIconSlotChange = () => {\n    this.hasIcon = hasSlotContent(this.iconElement, 'icon');\n  };\n\n  private get tabindex(): string {\n    // NOTE: this.active is undefined when is not part of bq-tab-group\n    return `${this.tabIndex ?? -1 + +(this.active ?? 1)}`;\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <button\n        ref={(el) => (this.buttonElement = el)}\n        class={{\n          [`bq-tab bq-tab--${this.size} bq-tab--${this.orientation}-${this.placement}`]: true,\n          'text-brand': this.active,\n          'text-primary': !this.active,\n        }}\n        id={this.tabId}\n        onBlur={this.handleOnBlur}\n        onClick={this.handleClick}\n        onFocus={this.handleOnFocus}\n        onKeyDown={this.handleOnKeyDown}\n        disabled={this.disabled}\n        role=\"tab\"\n        aria-controls={this.controls}\n        aria-disabled={this.disabled ? 'true' : 'false'}\n        aria-selected={this.active ? 'true' : 'false'}\n        tabindex={this.tabindex}\n        part=\"base\"\n      >\n        <div class=\"flex items-center justify-center\" part=\"content\">\n          <div class=\"flex\" ref={(span: HTMLSpanElement) => (this.iconElement = span)} part=\"icon\">\n            <slot name=\"icon\" onSlotchange={this.handleIconSlotChange} />\n          </div>\n          <div class={{ 'line-clamp-1': true, 'ms-[--bq-tab--label-icon-gap]': this.hasIcon }} part=\"text\">\n            <slot />\n          </div>\n        </div>\n      </button>\n    );\n  }\n}\n"],"version":3}