{"file":"bq-breadcrumb.entry.cjs.js","mappings":";;;;;;;;;;AAAA,MAAM,eAAe,GAAG,us3BAAus3B;;MC+Blt3B,YAAY;;;;;;IAIf,OAAO,CAAc;IACrB,QAAQ,CAAc;;;;;;;;IAeL,KAAK,GAAW,aAAa,CAAC;;;;;;;;;;;;;;;;;;;;;IA4B/C,gBAAgB,GAAG;QACzB,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC7C,MAAM,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC;QACzC,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE9C,eAAe,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK;YAClC,MAAM,UAAU,GAAG,KAAK,KAAK,SAAS,GAAG,CAAC,CAAC;YAC3C,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;YAE/D,IAAI,CAAC,aAAa,IAAI,CAAC,UAAU,EAAE;gBACjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aAC5C;YAED,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,UAAU,GAAG,MAAM,GAAG,EAAE,CAAC,CAAC;SAC7D,CAAC,CAAC;KACJ,CAAC;IAEM,gBAAgB,GAAG;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAgB,CAAC;QACpE,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC;QAEzB,OAAO,KAAK,CAAC;KACd,CAAC;IAEF,IAAY,iBAAiB;QAC3B,OAAO,IAAI,CAAC,QAAQ;aACjB,aAAa,CAAkB,wBAAwB,CAAC;aACxD,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAgB,CAAC;KAC1D;IAED,IAAY,eAAe;QACzB,OAAO,IAAI,CAAC,OAAO;aAChB,aAAa,CAAkB,MAAM,CAAC;aACtC,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAkC,CAAC;KACzE;;;;IAMD,MAAM;QACJ,QACEA,QAACC,UAAI,uDACHD,kEAAK,KAAK,EAAC,mBAAmB,gBAAa,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,IAAI,EAAC,YAAY,IAC5GA,mEAAM,YAAY,EAAE,IAAI,CAAC,gBAAgB,GAAS,CAC9C,EACNA,mEAAM,MAAM,uBAAa,MAAM,EAAC,GAAG,EAAE,CAAC,OAAO,MAAM,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,IAAI,EAAC,WAAW,IAC3FA,mEAAM,IAAI,EAAC,WAAW,IACpBA,mEAAM,KAAK,EAAC,uCAAuC,QAAS,CACvD,CACF,CACF,EACP;KACH;;;;;;","names":["h","Host"],"sources":["../../packages/beeq/src/components/breadcrumb/scss/bq-breadcrumb.scss?tag=bq-breadcrumb&encapsulation=shadow","../../packages/beeq/src/components/breadcrumb/bq-breadcrumb.tsx"],"sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                Breadcrumb styles                */\n/* -------------------------------------------------------------------------- */\n\n:host {\n  @apply block;\n}\n","import { Component, Element, h, Host, Prop } from '@stencil/core';\n\n/**\n * The Breadcrumb is used to wraps a series of breadcrumb items to indicate the current page's location within a navigational hierarchy.\n *\n * @example How to use it\n * ```html\n * <bq-breadcrumb label=\"Breadcrumb\">\n *   <bq-breadcrumb-item>Home</bq-breadcrumb-item>\n *   <bq-breadcrumb-item>Men's clothing</bq-breadcrumb-item>\n *   <bq-breadcrumb-item>Shirt</bq-breadcrumb-item>\n *   <bq-breadcrumb-item>Casual shirts</bq-breadcrumb-item>\n * </bq-breadcrumb>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/194fd1-breadcrumb\n * @status stable\n *\n * @attr {string} label - The `aria-label` attribute to describe the type of navigation\n *\n * @slot - The default slot is used to add `bq-breadcrumb-item` items to the breadcrumb.\n * @slot separator - The slot to add a separator between breadcrumb items. Default separator is `/`.\n *\n * @part navigation - The `nav` tag that loads the breadcrumb items\n * @part separator - The container that wraps the separator element\n */\n@Component({\n  tag: 'bq-breadcrumb',\n  styleUrl: './scss/bq-breadcrumb.scss',\n  shadow: true,\n})\nexport class BqBreadcrumb {\n  // Own Properties\n  // ====================\n\n  private navElem: HTMLElement;\n  private spanElem: HTMLElement;\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqBreadcrumbElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  // Public Property API\n  // ========================\n\n  /** The `aria-label` attribute to describe the type of navigation */\n  @Prop({ reflect: true }) label: string = 'Breadcrumbs';\n\n  // Prop lifecycle events\n  // =======================\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleSlotChange = (): void => {\n    const breadcrumbItems = this.breadcrumbItems;\n    const itemCount = breadcrumbItems.length;\n    const separatorElem = this.getSeparatorElem();\n\n    breadcrumbItems.forEach((item, index) => {\n      const isLastItem = index === itemCount - 1;\n      const separatorSlot = item.querySelector('[slot=\"separator\"]');\n\n      if (!separatorSlot && !isLastItem) {\n        item.append(separatorElem.cloneNode(true));\n      }\n\n      item.setAttribute('aria-current', isLastItem ? 'page' : '');\n    });\n  };\n\n  private getSeparatorElem = (): HTMLElement => {\n    const clone = this.separatorFromSlot.cloneNode(true) as HTMLElement;\n    clone.slot = 'separator';\n\n    return clone;\n  };\n\n  private get separatorFromSlot() {\n    return this.spanElem\n      .querySelector<HTMLSlotElement>('slot[name=\"separator\"]')\n      .assignedElements({ flatten: true })[0] as HTMLElement;\n  }\n\n  private get breadcrumbItems(): HTMLBqBreadcrumbItemElement[] {\n    return this.navElem\n      .querySelector<HTMLSlotElement>('slot')\n      .assignedElements({ flatten: true }) as HTMLBqBreadcrumbItemElement[];\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <Host>\n        <nav class=\"flex items-center\" aria-label={this.label} ref={(elem) => (this.navElem = elem)} part=\"navigation\">\n          <slot onSlotchange={this.handleSlotChange}></slot>\n        </nav>\n        <span hidden aria-hidden=\"true\" ref={(element) => (this.spanElem = element)} part=\"separator\">\n          <slot name=\"separator\">\n            <span class=\"flex items-center justify-center is-3\">/</span>\n          </slot>\n        </span>\n      </Host>\n    );\n  }\n}\n"],"version":3}