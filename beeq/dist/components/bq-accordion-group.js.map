{"version":3,"names":["bqAccordionGroupCss","BqAccordionGroupStyle0","BqAccordionGroup","proxyCustomElement","H","appearance","expandAll","noAnimation","multiple","size","checkPropValues","this","bqAccordionElements","forEach","bqAccordionElement","isNil","expanded","onBqClick","event","detail","bqElem","isHTMLElement","el","contains","componentWillLoad","Array","from","querySelectorAll","render","h","key","class","part"],"sources":["../../packages/beeq/src/components/accordion-group/scss/bq-accordion-group.scss?tag=bq-accordion-group&encapsulation=shadow","../../packages/beeq/src/components/accordion-group/bq-accordion-group.tsx"],"sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                Accordion group styles                */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-accordion-group.variables';\n\n:host {\n  @apply block;\n}\n","import { Component, Element, h, Listen, Prop, Watch } from '@stencil/core';\n\nimport { isHTMLElement, isNil } from '../../shared/utils';\nimport { TAccordionAppearance, TAccordionSize } from '../accordion/bq-accordion.types';\n\n/**\n * The accordion group component is a container for multiple accordion elements.\n * It allows to manage the appearance and size of all accordions at once.\n *\n * @example How to use it\n * ```html\n * <bq-accordion-group appearance=\"filled\" size=\"medium\">\n *   <bq-accordion> ... </bq-accordion>\n *   <bq-accordion> ... </bq-accordion>\n *   <bq-accordion> ... </bq-accordion>\n * </bq-accordion-group>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/713eae-accordion\n * @status stable\n *\n * @attr {\"filled\" | \"ghost\"} [appearance=\"filled\"] - The appearance style of accordion to be applied to all accordions\n * @attr {boolean} [expandAll=false] - If true all accordions are expanded\n * @attr {boolean} [no-animation=false] - Animation is set through JS when the browser does not support CSS calc-size() If true, the accordion animation, will be disabled. No animation will be applied.\n * @attr {boolean} [multiple=false] - If true multiple accordions can be expanded at the same time\n * @attr {\"small\" | \"medium\"} [size=\"medium\"] - The size of accordion to be applied to all accordions\n *\n * @slot - The default slot where the bq-accordion elements are placed.\n *\n * @part base - The component's base wrapper.\n *\n * @cssprop --bq-accordion-group--gap - Accordion group distance between elements\n */\n@Component({\n  tag: 'bq-accordion-group',\n  styleUrl: './scss/bq-accordion-group.scss',\n  shadow: true,\n})\nexport class BqAccordionGroup {\n  // Own Properties\n  // ====================\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqAccordionGroupElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  // Public Property API\n  // ========================\n\n  /** The appearance style of accordion to be applied to all accordions */\n  @Prop({ reflect: true, mutable: true }) appearance: TAccordionAppearance = 'filled';\n\n  /** If true all accordions are expanded */\n  @Prop({ reflect: true }) expandAll: boolean;\n\n  /**\n   * Animation is set through JS when the browser does not support CSS calc-size()\n   * If true, the accordion animation, will be disabled. No animation will be applied.\n   */\n  @Prop({ reflect: true }) noAnimation: boolean = false;\n\n  /** If true multiple accordions can be expanded at the same time */\n  @Prop({ reflect: true }) multiple: boolean = false;\n\n  /** The size of accordion to be applied to all accordions */\n  @Prop({ reflect: true, mutable: true }) size: TAccordionSize = 'medium';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('appearance')\n  @Watch('expandAll')\n  @Watch('noAnimation')\n  @Watch('size')\n  checkPropValues() {\n    this.bqAccordionElements.forEach((bqAccordionElement) => {\n      // NOTE: if expandAll is nil we will keep accordion default state\n      if (!isNil(this.expandAll)) {\n        bqAccordionElement.expanded = this.expandAll;\n      }\n      bqAccordionElement.appearance = this.appearance;\n      bqAccordionElement.noAnimation = this.noAnimation;\n      bqAccordionElement.size = this.size;\n    });\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  @Listen('bqClick', { passive: true })\n  onBqClick(event: CustomEvent<HTMLBqAccordionElement>) {\n    const { detail: bqElem } = event;\n    // Make sure the event is coming from a bq-accordion element and its a child of the bq-accordion-group\n    if (!isHTMLElement(bqElem, 'bq-accordion') || !this.el.contains(bqElem)) return;\n    // We keep default behavior if multiple accordion can be expanded\n    if (this.multiple) return;\n\n    this.bqAccordionElements.forEach((bqAccordionElement) => {\n      if (bqAccordionElement === event.detail) return;\n\n      bqAccordionElement.expanded = false;\n    });\n  }\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.checkPropValues();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private get bqAccordionElements(): HTMLBqAccordionElement[] {\n    return Array.from(this.el.querySelectorAll('bq-accordion'));\n  }\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <div class=\"flex flex-col gap-[--bq-accordion-group--gap]\" part=\"base\">\n        <slot />\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;kJAAA,MAAMA,EAAsB,0h4BAC5B,MAAAC,EAAeD,E,MCqCFE,EAAgBC,EAAA,MAAAD,UAAAE,E,uFAiBaC,WAAmC,SAGlDC,UAMAC,YAAuB,MAGvBC,SAAoB,MAGLC,KAAuB,SAS/D,eAAAC,GACEC,KAAKC,oBAAoBC,SAASC,IAEhC,IAAKC,EAAMJ,KAAKL,WAAY,CAC1BQ,EAAmBE,SAAWL,KAAKL,S,CAErCQ,EAAmBT,WAAaM,KAAKN,WACrCS,EAAmBP,YAAcI,KAAKJ,YACtCO,EAAmBL,KAAOE,KAAKF,IAAI,G,CASvC,SAAAQ,CAAUC,GACR,MAAQC,OAAQC,GAAWF,EAE3B,IAAKG,EAAcD,EAAQ,kBAAoBT,KAAKW,GAAGC,SAASH,GAAS,OAEzE,GAAIT,KAAKH,SAAU,OAEnBG,KAAKC,oBAAoBC,SAASC,IAChC,GAAIA,IAAuBI,EAAMC,OAAQ,OAEzCL,EAAmBE,SAAW,KAAK,G,CAQvC,iBAAAQ,GACEb,KAAKD,iB,CAkBP,uBAAYE,GACV,OAAOa,MAAMC,KAAKf,KAAKW,GAAGK,iBAAiB,gB,CAM7C,MAAAC,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,gDAAgDC,KAAK,QAC9DH,EAAA,QAAAC,IAAA,6C","ignoreList":[]}