{"file":"bq-date-picker.js","mappings":"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","names":["BqDatePicker"],"sources":["../../packages/beeq/src/components/date-picker/bq-date-picker.types.ts","../../packages/beeq/src/components/date-picker/scss/bq-date-picker.scss?tag=bq-date-picker&encapsulation=shadow","../../packages/beeq/src/components/date-picker/bq-date-picker.tsx"],"sourcesContent":["export type DaysOfWeek = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport const DATE_PICKER_TYPE = ['single', 'multi', 'range'] as const;\nexport type TDatePickerType = (typeof DATE_PICKER_TYPE)[number];\n","/* -------------------------------------------------------------------------- */\n/*                        Date picker styles                                  */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-date-picker.variables';\n\n:host {\n  @apply block is-full;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                                    Label                                   */\n/* -------------------------------------------------------------------------- */\n\n.bq-date-picker__label {\n  @apply flex flex-grow items-center gap-[--bq-date-picker--gap] m-be-[--bq-date-picker--label-margin-bottom];\n  @apply text-[length:--bq-date-picker--label-text-size] text-[color:--bq-date-picker--label-text-color];\n}\n\n/* -------------------------------------------------------------------------- */\n/*                         Date picker input group control                    */\n/* -------------------------------------------------------------------------- */\n\n.bq-date-picker__control {\n  @apply flex items-center transition-[border-color,box-shadow] is-full;\n  // Border\n  @apply rounded-[--bq-date-picker--border-radius] border-[length:--bq-date-picker--border-width] border-[color:--bq-date-picker--border-color];\n  // Padding\n  @apply pe-[--bq-date-picker--padding-end] ps-[--bq-date-picker--padding-start] p-b-[--bq-date-picker--paddingY];\n  // Text\n  @apply select-none text-[length:--bq-date-picker--text-size] text-[color:--bq-date-picker--text-color] placeholder:text-[color:--bq-date-picker--text-placeholder-color];\n  // Hover\n  @apply [&:not(.disabled):not(:focus-within)]:hover:border-hover-brand;\n\n  border-style: var(--bq-date-picker--border-style);\n\n  // Focus\n  &:not(.disabled):focus-within {\n    --bq-ring-width: 1px;\n    --bq-ring-offset-width: 0;\n\n    @apply focus border-[color:--bq-focus];\n  }\n\n  // Enable clear button whenever the input group control is hovered or has focus\n  &:not(.disabled):hover,\n  &:not(.disabled):focus-within {\n    .bq-date-picker__control--clear {\n      @apply inline-block;\n    }\n  }\n}\n\n.bq-date-picker__control.disabled {\n  @apply cursor-not-allowed opacity-60;\n}\n\n/* ------------------------------- Validation ------------------------------- */\n\n.bq-date-picker__control.validation-error {\n  @apply border-danger [&:not(.disabled):not(:focus-within)]:hover:border-hover-danger;\n\n  &:not(.disabled):focus-within {\n    --bq-ring-color-focus: theme(stroke.danger);\n\n    @apply border-active-danger;\n  }\n}\n\n.bq-date-picker__control.validation-success {\n  @apply border-success [&:not(.disabled):not(:focus-within)]:hover:border-hover-success;\n\n  &:not(.disabled):focus-within {\n    --bq-ring-color-focus: theme(stroke.success);\n\n    @apply border-active-success;\n  }\n}\n\n.bq-date-picker__control.validation-warning {\n  @apply border-warning [&:not(.disabled):not(:focus-within)]:hover:border-hover-warning;\n\n  &:not(.disabled):focus-within {\n    --bq-ring-color-focus: theme(stroke.warning);\n\n    @apply border-active-warning;\n  }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Native HTML Input                             */\n/* -------------------------------------------------------------------------- */\n\n.bq-date-picker__control--input {\n  @apply flex-auto cursor-inherit select-none appearance-none bg-inherit font-inherit text-[length:inherit] text-inherit;\n  @apply border-none min-bs-[--bq-date-picker--icon-size] min-is-0 p-b-0 p-i-0 m-b-0 m-i-0 focus:outline-none focus-visible:outline-none;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                                Clear button                                */\n/* -------------------------------------------------------------------------- */\n\n.bq-date-picker__control--clear::part(button) {\n  // Since the clear button is inside the input group control,\n  // we need to reset the focus ring styles\n  --bq-ring-width: initial;\n  --bq-ring-offset-width: initial;\n  --bq-ring-color-focus: initial;\n\n  @apply rounded-xs border-none bs-auto p-b-0 p-i-0;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Prefix and suffix                             */\n/* -------------------------------------------------------------------------- */\n\n.bq-date-picker__control--prefix,\n.bq-date-picker__control--suffix {\n  @apply pointer-events-none flex items-center text-[color:--bq-date-picker--text-color];\n}\n\n.bq-date-picker__control--prefix {\n  @apply me-[--bq-date-picker--gap];\n}\n\n.bq-date-picker__control--suffix {\n  @apply ms-[--bq-date-picker--gap];\n}\n\n/* -------------------------------------------------------------------------- */\n/*                         Slotted and internal icons                         */\n/* -------------------------------------------------------------------------- */\n\nbq-icon,\n::slotted(bq-icon) {\n  --bq-icon--size: var(--bq-date-picker--icon-size) !important;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                         Customize Cally date picker                         */\n/* -------------------------------------------------------------------------- */\n\ncalendar-date,\ncalendar-range,\ncalendar-multi {\n  &::part(header) {\n    @apply justify-center gap-s;\n  }\n\n  &::part(heading) {\n    @apply p-b-xs2 p-i-xs;\n  }\n\n  &::part(button) {\n    @apply rounded-s border-0 bg-transparent transition-colors duration-200 p-b-xs2 p-i-xs2;\n    @apply focus-visible:focus hover:bg-hover-ui-primary;\n  }\n\n  &::part(container) {\n    @apply bg-[--bq-date-picker--background-color] p-b-0 p-i-0;\n  }\n}\n\ncalendar-month {\n  /* stylelint-disable-next-line custom-property-pattern */\n  --color-accent: var(--bq-ui--brand);\n\n  &::part(button) {\n    @apply flex items-center justify-center rounded-s bg-transparent font-default text-primary transition-colors duration-200 ease-in-out p-b-0 p-i-0;\n    @apply size-[--bq-date-picker--day-size] focus-visible:focus enabled:hover:bg-hover-secondary disabled:cursor-not-allowed;\n  }\n\n  &::part(button day disallowed) {\n    @apply cursor-not-allowed bg-transparent #{!important};\n  }\n\n  &::part(button day selected) {\n    @apply rounded-s bg-[--bq-date-picker--range-background-color] text-alt enabled:hover:bg-hover-ui-brand;\n  }\n\n  &::part(button day selected range-inner) {\n    @apply rounded-none bg-[--bq-date-picker--range-inner-background-color] text-primary hover:text-alt;\n  }\n\n  &::part(button day outside) {\n    @apply cursor-pointer text-secondary opacity-100;\n  }\n\n  &::part(today) {\n    @apply rounded-s border-[length:--bq-date-picker--currentDate-border-width] border-[color:--bq-date-picker--currentDate-border-color];\n\n    border-style: var(--bq-date-picker--border-style);\n  }\n\n  &::part(today selected) {\n    @apply text-alt;\n  }\n\n  &::part(today range-inner) {\n    @apply rounded-none;\n  }\n\n  &::part(today range-start) {\n    @apply rounded-s rounded-es-none;\n  }\n\n  &::part(today range-end) {\n    @apply rounded-s rounded-ee-none;\n  }\n\n  &::part(range-start) {\n    @apply rounded-ee-none rounded-se-none;\n  }\n\n  &::part(range-end) {\n    @apply rounded-es-none rounded-ss-none;\n  }\n\n  &::part(range-start range-end) {\n    @apply rounded-s;\n  }\n}\n","import {\n  AttachInternals,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { CalendarDate } from 'cally';\n\nimport { DATE_PICKER_TYPE, DaysOfWeek, TDatePickerType } from './bq-date-picker.types';\nimport { Placement } from '../../services/interfaces';\nimport {\n  hasSlotContent,\n  isClient,\n  isDefined,\n  isEventTargetChildOfElement,\n  isHTMLElement,\n  isNil,\n  validatePropValue,\n} from '../../shared/utils';\nimport { TInputValidation } from '../input/bq-input.types';\n\n/**\n * The Date Picker is a intuitive UI element component allows users to select dates from a visual calendar interface, providing an intuitive way to input date information.\n *\n * @example How to use it\n * ```html\n * <bq-date-picker\n *   first-day-of-week=\"1\"\n *   locale=\"en-GB\"\n *   months-per-view=\"single\"\n *   months=\"2\"\n *   name=\"bq-date-picker\"\n *   placeholder=\"Enter your date\"\n *   placement=\"bottom-end\"\n *   show-outside-days=\"false\"\n *   type=\"range\"\n *   validation-status=\"none\"\n *   value=\"2024-05-25\"\n * >\n *   <label class=\"flex flex-grow items-center\" slot=\"label\">\n *     Date picker label\n *   </label>\n * </bq-date-picker>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/5793a9-date-picker\n * @status stable\n *\n * @dependency bq-button\n * @dependency bq-dropdown\n * @dependency bq-icon\n *\n * @attr {boolean} autofocus - If `true`, the Date picker input will be focused on component render.\n * @attr {string} clear-button-label - The clear button aria label.\n * @attr {boolean} disable-clear - If `true`, the clear button won't be displayed.\n * @attr {boolean} disabled - Indicates whether the Date picker input is disabled or not.\n * @attr {number} distance - Represents the distance (gutter or margin) between the Date picker panel and the input element.\n * @attr {0 | 1 | 2 | 3 | 4 | 5 | 6} first-day-of-week - The first day of the week, where Sunday is 0, Monday is 1, etc.\n * @attr {Intl.DateTimeFormatOptions} format-options - The options to use when formatting the displayed value. Details: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options\n * @attr {string} form - The ID of the form that the Date picker input belongs to.\n * @attr {string} form-validation-message - The native form validation message (mandatory if `required` is set).\n * @attr {function} is-date-disallowed - A function that takes a date and returns true if the date should not be selectable.\n * @attr {Intl.LocalesArgument} locale - The locale for formatting dates. If not set, will use the browser's locale. Details: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument\n * @attr {string} max - The latest date that can be selected.\n * @attr {string} min - The earliest date that can be selected.\n * @attr {number} months - Number of months to show when range is `true`.\n * @attr {string} name - The Date picker input name.\n * @attr {boolean} open - If `true`, the Date picker panel will be visible.\n * @attr {string} panel-height - When set, it will override the height of the Date picker panel.\n * @attr {\"top\" | \"right\" | \"bottom\" | \"left\" | \"top-start\" | \"top-end\" | \"right-start\" | \"right-end\" | \"bottom-start\" | \"bottom-end\" | \"left-start\" | \"left-end\"} placement - Position of the Date picker panel.\n * @attr {boolean} required - Indicates whether or not the Date picker input is required to be filled out before submitting the form.\n * @attr {number} skidding - Represents the skidding between the Date picker panel and the input element.\n * @attr {boolean} show-outside-days - Whether to show days outside the month.\n * @attr {string} strategy - Defines the strategy to position the Date picker panel.\n * @attr {string} tentative - The date that is tentatively selected, e.g. the start of a range selection.\n * @attr {\"single\" | \"multi\" | \"range\"} type - It defines how the calendar will behave, allowing single date selection, range selection, or multiple date selection.\n * @attr {\"error\" | \"none\" | \"success\" | \"warning\"} validation-status - The validation status of the Select input.\n * @attr {string} value - The select input value represents the currently selected date or range and can be used to reset the field to a previous value.\n *\n * @method clear - Clears the selected value.\n *\n * @event bqBlur - Callback handler emitted when the input loses focus.\n * @event bqChange - Callback handler emitted when the input value has changed and the input loses focus.\n * @event bqClear - Callback handler emitted when the input value has been cleared.\n * @event bqFocus - Callback handler emitted when the input has received focus.\n *\n * @part base - The component's base wrapper.\n * @part button - The native HTML button used under the hood in the clear button.\n * @part calendar__button - Any button used in the calendar-month component.\n * @part calendar__button - Any button within the calendar-range component.\n * @part calendar__container - The calendar-range container for the entire component.\n * @part calendar__day - The buttons corresponding to each day in the calendar-month grid.\n * @part calendar__disabled - A button that is disabled due to min/max on the calendar-range component.\n * @part calendar__disallowed - Any day that has been disallowed via isDateDisallowed.\n * @part calendar__head - The calendar-month table's header row.\n * @part calendar__header - The calendar-range container for the heading and buttons.\n * @part calendar__heading - The calendar-month heading container that labels the month.\n * @part calendar__heading - The calendar-range heading containing the month and year.\n * @part calendar__next - The next page button on the calendar-range component.\n * @part calendar__outside - Any days which are outside the current month.\n * @part calendar__previous - The previous page button on the calendar-range component.\n * @part calendar__range-end - The day at the end of a date range.\n * @part calendar__range-inner - Any days between the start and end of a date range.\n * @part calendar__range-start - The day at the start of a date range.\n * @part calendar__selected - Any days which are selected.\n * @part calendar__table - The calendar-month <table> element.\n * @part calendar__td - The calendar-month table's body cells.\n * @part calendar__th - The calendar-month table's header cells.\n * @part calendar__today - The Today's day.\n * @part calendar__tr - Any row within the table on the calendar-month component.\n * @part calendar__week - The calendar-month table's body rows.\n * @part clear-btn - The clear button.\n * @part control - The input control wrapper.\n * @part input - The native HTML input element used under the hood.\n * @part label - The label slot container.\n * @part panel - The date picker panel container\n * @part prefix - The prefix slot container.\n * @part suffix - The suffix slot container.\n *\n * @cssprop --bq-date-picker--background-color - Date picker background color.\n * @cssprop --bq-date-picker--border-color - Date picker border color.\n * @cssprop --bq-date-picker--border-color-disabled - Date picker border color when disabled.\n * @cssprop --bq-date-picker--border-color-focus - Date picker border color on focus.\n * @cssprop --bq-date-picker--border-radius - Date picker border radius.\n * @cssprop --bq-date-picker--border-style - Date picker border style.\n * @cssprop --bq-date-picker--border-width - Date picker border width.\n * @cssprop --bq-date-picker--currentDate-border-color - Date picker border color for current date.\n * @cssprop --bq-date-picker--currentDate-border-width - Date picker border width for current date.\n * @cssprop --bq-date-picker--day-size - Date picker button day size.\n * @cssprop --bq-date-picker--gap - Gap between Date picker content and prefix/suffix.\n * @cssprop --bq-date-picker--icon-size - Icon size to use in prefix/suffix and clear button.\n * @cssprop --bq-date-picker--label-margin-bottom - Date picker label margin bottom.\n * @cssprop --bq-date-picker--label-text-color - Date picker label text color.\n * @cssprop --bq-date-picker--label-text-size - Date picker label text size.\n * @cssprop --bq-date-picker--padding-end - Date picker padding end.\n * @cssprop --bq-date-picker--padding-start - Date picker padding start.\n * @cssprop --bq-date-picker--paddingY - Date picker padding top and bottom.\n * @cssprop --bq-date-picker--range-background-color - Background color for the selected date range in the date picker.\n * @cssprop --bq-date-picker--range-inner-background-color - Background color for the selected dates inside the date range in the date picker.\n * @cssprop --bq-date-picker--text-color - Date picker text color.\n * @cssprop --bq-date-picker--text-placeholder-color - Date picker placeholder text color.\n * @cssprop --bq-date-picker--text-size - Date picker text size.\n */\n@Component({\n  tag: 'bq-date-picker',\n  styleUrl: './scss/bq-date-picker.scss',\n  formAssociated: true,\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class BqDatePicker {\n  // Own Properties\n  // ====================\n\n  private callyElem?: InstanceType<typeof CalendarDate>;\n  private inputElem?: HTMLInputElement;\n  private labelElem?: HTMLElement;\n  private prefixElem?: HTMLElement;\n  private suffixElem?: HTMLElement;\n\n  private fallbackInputId = 'date-picker';\n\n  // Export parts of the calendar-month component\n  private readonly COMMON_EXPORT_PARTS =\n    'calendar__heading,calendar__table,calendar__tr,calendar__head,calendar__week,calendar__th,calendar__td';\n  private readonly BUTTON_EXPORT_PARTS =\n    'calendar__button,calendar__day,calendar__selected,calendar__today,calendar__disallowed,calendar__outside,calendar__range-start,calendar__range-end,calendar__range-inner';\n\n  // Reference to host HTML element\n  // ===================================\n\n  @AttachInternals() internals: ElementInternals;\n  @Element() el!: HTMLBqDatePickerElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() focusedDate: string;\n  @State() displayDate: string;\n  @State() hasLabel = false;\n  @State() hasPrefix = false;\n  @State() hasRangeEnd = false;\n  @State() hasSuffix = false;\n  @State() hasValue = false;\n\n  // Public Property API\n  // ========================\n\n  /** If `true`, the Date picker input will be focused on component render */\n  @Prop({ reflect: true }) autofocus: boolean;\n\n  /** The clear button aria label */\n  @Prop({ reflect: true }) clearButtonLabel? = 'Clear value';\n\n  /** If `true`, the clear button won't be displayed */\n  @Prop({ reflect: true }) disableClear? = false;\n\n  /**\n   * Indicates whether the Date picker input is disabled or not.\n   * If `true`, the Date picker is disabled and cannot be interacted with.\n   */\n  @Prop({ mutable: true }) disabled?: boolean = false;\n\n  /** Represents the distance (gutter or margin) between the Date picker panel and the input element. */\n  @Prop({ reflect: true }) distance?: number = 8;\n\n  /** The first day of the week, where Sunday is 0, Monday is 1, etc */\n  @Prop({ reflect: true }) firstDayOfWeek?: DaysOfWeek = 1;\n\n  /** The options to use when formatting the displayed value.\n   * Details: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options\n   */\n  @Prop() formatOptions: Intl.DateTimeFormatOptions = {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n  };\n\n  /** The ID of the form that the Date picker input belongs to. */\n  @Prop({ reflect: true }) form?: string;\n\n  /** The native form validation message (mandatory if `required` is set) */\n  @Prop({ mutable: true }) formValidationMessage?: string;\n\n  /** A function that takes a date and returns true if the date should not be selectable */\n  @Prop({ reflect: true }) isDateDisallowed?: (date: Date) => boolean;\n\n  /** The locale for formatting dates. If not set, will use the browser's locale.\n   * Details: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument\n   */\n  @Prop({ reflect: true }) locale: Intl.LocalesArgument = 'en-GB';\n\n  /** The latest date that can be selected */\n  @Prop({ reflect: true }) max?: string;\n\n  /** The earliest date that can be selected */\n  @Prop({ reflect: true }) min?: string;\n\n  /** Number of months to show when range is `true` */\n  @Prop({ reflect: true }) months: number;\n\n  /**\n   * Specifies how the next/previous buttons should navigate the calendar.\n   * - single: The buttons will navigate by a single month at a time.\n   * - months: The buttons will navigate by the number of months displayed per view.\n   */\n  @Prop({ reflect: true }) monthsPerView: 'single' | 'months' = 'single';\n\n  /** The Date picker input name. */\n  @Prop({ reflect: true }) name!: string;\n\n  /** If `true`, the Date picker panel will be visible. */\n  @Prop({ reflect: true, mutable: true }) open?: boolean = false;\n\n  /** When set, it will override the height of the Date picker panel. */\n  @Prop({ reflect: true, mutable: true }) panelHeight?: string = 'auto';\n\n  /** The Date picker input placeholder text value */\n  @Prop({ reflect: true }) placeholder?: string;\n\n  /** Position of the Date picker panel */\n  @Prop({ reflect: true }) placement?: Placement = 'bottom-end';\n\n  /** Indicates whether or not the Date picker input is required to be filled out before submitting the form. */\n  @Prop({ reflect: true }) required?: boolean;\n\n  /** Represents the skidding between the Date picker panel and the input element. */\n  @Prop({ reflect: true }) skidding?: number = 0;\n\n  /** Whether to show days outside the month */\n  @Prop({ reflect: true }) showOutsideDays: boolean = false;\n\n  /** Defines the strategy to position the Date picker panel */\n  @Prop({ reflect: true }) strategy?: 'fixed' | 'absolute' = 'fixed';\n\n  /** The date that is tentatively selected e.g. the start of a range selection  */\n  @Prop({ reflect: true, mutable: true }) tentative?: string;\n\n  /** It defines how the calendar will behave, allowing single date selection, range selection, or multiple date selection */\n  @Prop({ reflect: true }) type: TDatePickerType = 'single';\n\n  /**\n   * The validation status of the Select input.\n   *\n   * @remarks\n   * This property is used to indicate the validation status of the select input. It can be set to one of the following values:\n   * - `'none'`: No validation status is set.\n   * - `'error'`: The input has a validation error.\n   * - `'warning'`: The input has a validation warning.\n   * - `'success'`: The input has passed validation.\n   */\n  @Prop({ reflect: true }) validationStatus: TInputValidation = 'none';\n\n  /** The select input value represents the currently selected date or range and can be used to reset the field to a previous value.\n   * All dates are expected in ISO-8601 format (YYYY-MM-DD). */\n  @Prop({ reflect: true, mutable: true }) value: string;\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('value')\n  handleValueChange() {\n    const { formatDisplayValue, internals, value } = this;\n\n    internals.setFormValue(!isNil(value) ? `${value}` : undefined);\n    this.updateFormValidity();\n\n    if (Array.isArray(value)) {\n      this.hasValue = value.some((val) => val.length > 0);\n      return;\n    }\n\n    this.hasValue = isDefined(value);\n    this.displayDate = formatDisplayValue(value);\n\n    this.setFocusedDate();\n  }\n\n  @Watch('type')\n  checkPropValues() {\n    validatePropValue(DATE_PICKER_TYPE, 'single', this.el, 'type');\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Callback handler emitted when the input loses focus */\n  @Event() bqBlur!: EventEmitter<HTMLBqDatePickerElement>;\n\n  /**\n   * Callback handler emitted when the input value has changed and the input loses focus.\n   * This handler is called whenever the user finishes typing or pasting text into the input field and then clicks outside of the input field.\n   */\n  @Event() bqChange!: EventEmitter<{ value: string; el: HTMLBqDatePickerElement }>;\n\n  /** Callback handler emitted when the input value has been cleared */\n  @Event() bqClear!: EventEmitter<HTMLBqDatePickerElement>;\n\n  /** Callback handler emitted when the input has received focus */\n  @Event() bqFocus!: EventEmitter<HTMLBqDatePickerElement>;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  async connectedCallback() {\n    if (!isClient()) return;\n\n    await import('cally');\n  }\n\n  componentWillLoad() {\n    this.handleValueChange();\n  }\n\n  formAssociatedCallback() {\n    this.updateFormValidity();\n  }\n\n  formResetCallback() {\n    if (isNil(this.value)) return;\n\n    this.clear();\n  }\n\n  // Listeners\n  // ==============\n\n  @Listen('bqOpen', { capture: true })\n  handleOpenChange(ev: CustomEvent<{ open: boolean }>) {\n    if (!ev.composedPath().includes(this.el)) return;\n\n    this.open = ev.detail.open;\n    this.setFocusedDate();\n  }\n\n  @Listen('click', { target: 'body', capture: true })\n  handleClickOutside(ev: MouseEvent) {\n    const { open, type, hasRangeEnd } = this;\n    if (!open || type !== 'range' || ev.button !== 0) return;\n    if (isEventTargetChildOfElement(ev, this.el) || hasRangeEnd) return;\n    if (isEventTargetChildOfElement(ev, this.el)) return;\n\n    if (!hasRangeEnd) {\n      this.tentative = undefined;\n      this.hasRangeEnd = false;\n    }\n  }\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  /**\n   * Clears the selected value.\n   *\n   * @return {Promise<void>}\n   * @memberof BqInput\n   */\n  @Method()\n  async clear(): Promise<void> {\n    if (this.disabled) return;\n\n    this.value = undefined;\n    this.internals.setFormValue(undefined);\n    this.bqClear.emit(this.el);\n  }\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleBlur = () => {\n    if (this.disabled) return;\n\n    this.bqBlur.emit(this.el);\n  };\n\n  private handleFocus = () => {\n    if (this.disabled) return;\n\n    this.bqFocus.emit(this.el);\n  };\n\n  private setFocusedDate = () => {\n    if (!this.callyElem) return;\n    // We need to set the focused date in the calendar component via a ref\n    // because it doesn't work when passed as a prop (the Cally element does not re-render)\n    this.focusedDate = this.value ? this.formatFocusedDate(this.value) : new Date().toLocaleDateString('fr-CA');\n    this.callyElem.focusedDate = this.focusedDate;\n  };\n\n  private handleChange = (ev: Event) => {\n    if (this.disabled) return;\n    if (!isHTMLElement(ev.target, 'input')) return;\n\n    const dateValue = new Date(ev.target.value);\n    if (!isNaN(dateValue.getTime())) {\n      // We need to force the value to respect the format: yyyy-mm-dd, hence the hardcoded locale\n      this.value = dateValue.toLocaleDateString('fr-CA');\n      this.displayDate = this.formatDisplayValue(this.value);\n      this.internals.setFormValue(`${this.value}`);\n      this.bqChange.emit({ value: this.value, el: this.el });\n    }\n  };\n\n  private handleCalendarChange = (ev: Event) => {\n    const { value } = ev.target as unknown as { value: string };\n\n    this.value = value;\n    this.displayDate = this.formatDisplayValue(this.value);\n    this.inputElem.value = this.displayDate;\n    this.inputElem.focus();\n\n    this.internals.setFormValue(`${this.value}`);\n    this.bqChange.emit({ value: this.value, el: this.el });\n\n    this.open = this.type === 'multi';\n  };\n\n  private handleCalendarRangeStart = (ev: CustomEvent) => {\n    this.hasRangeEnd = false;\n    this.tentative = new Date(ev.detail).toLocaleDateString('fr-CA');\n  };\n\n  private handleCalendarRangeEnd = () => {\n    this.hasRangeEnd = true;\n  };\n\n  private handleClearClick = (ev: CustomEvent) => {\n    if (this.disabled) return;\n\n    this.inputElem.value = '';\n    this.value = this.inputElem.value;\n    this.hasRangeEnd = false;\n\n    this.bqClear.emit(this.el);\n    this.bqChange.emit({ value: this.value, el: this.el });\n    this.internals.setFormValue(undefined);\n    this.inputElem.focus();\n\n    ev.stopPropagation();\n  };\n\n  private handleLabelSlotChange = () => {\n    this.hasLabel = hasSlotContent(this.labelElem);\n  };\n\n  private handlePrefixSlotChange = () => {\n    this.hasPrefix = hasSlotContent(this.prefixElem);\n  };\n\n  private handleSuffixSlotChange = () => {\n    this.hasSuffix = hasSlotContent(this.suffixElem);\n  };\n\n  private generateCalendarMonth = (offset?: number, className = ''): JSX.Element => {\n    return (\n      <calendar-month\n        offset={offset}\n        class={className}\n        exportparts={`${this.COMMON_EXPORT_PARTS},${this.BUTTON_EXPORT_PARTS}`}\n      />\n    );\n  };\n\n  /**\n   * Generates an array of JSX.Element representing calendar months.\n   *\n   * If the type of the date picker is 'range' or 'multi' and the number of months is specified,\n   * it generates an array of calendar months with the specified length. Each month will have an offset\n   * and a class name based on its position in the array. The offset is used to determine the month to display,\n   * and the class name is used for responsive design.\n   *\n   * If the type of the date picker is not 'range' or 'multi', or if the number of months is not specified,\n   * it generates an array with a single calendar month.\n   *\n   * @returns {JSX.Element[]} An array of JSX.Element representing calendar months.\n   */\n  private generateCalendarMonths = (): JSX.Element[] => {\n    if (this.type === 'range' || (this.type === 'multi' && this.months)) {\n      return Array.from({ length: this.months }, (_, i) => {\n        const offset = i > 0 ? i : undefined;\n        const className = offset ? 'hidden sm:block' : '';\n        return this.generateCalendarMonth(offset, className);\n      });\n    }\n\n    return [this.generateCalendarMonth()];\n  };\n\n  /**\n   * Extracts and returns the first date part from a given string.\n   * When the type of the date picker is 'range' or 'multi', the first or initial date part of the value\n   * should be the focused date in the calendar.\n   *\n   * @param value - The value to be processed, can be a string.\n   * @returns The extracted last date portion of the value.\n   */\n  private formatFocusedDate = (value: string): string | null => {\n    if (!value) return;\n\n    const dateRegex = /\\b\\d{4}-\\d{2}-\\d{2}\\b/;\n    const match = dateRegex.exec(value);\n    return match ? match[0] : null;\n  };\n\n  private formatDisplayValue = (value: string): string | undefined => {\n    if (!value) return;\n\n    const dateFormatter = new Intl.DateTimeFormat(this.locale, this.formatOptions);\n\n    if (this.type === 'range') {\n      const [start, end] = value.split('/').map((dateStr) => new Date(dateStr));\n      return dateFormatter.formatRange(start, end);\n    }\n\n    if (this.type === 'multi') {\n      const dates = value.split(' ').map((dateStr) => new Date(dateStr));\n      return dates.map((date) => dateFormatter.format(date)).join(', ');\n    }\n\n    return dateFormatter.format(new Date(value));\n  };\n\n  private updateFormValidity = () => {\n    const { formValidationMessage, internals, required, value, inputElem } = this;\n\n    // Clear the validity state\n    internals?.states.clear();\n\n    if (required && (!value || value.toString().trim() === '')) {\n      // Set validity state to invalid\n      internals?.states.add('invalid');\n      internals?.setValidity({ valueMissing: true }, formValidationMessage, inputElem);\n      return;\n    }\n\n    // Set validity state to valid if textarea has value or is not required\n    internals?.states.add('valid');\n    internals?.setValidity({});\n  };\n\n  private get CalendarType() {\n    const componentTypes = {\n      single: 'calendar-date',\n      multi: 'calendar-multi',\n      range: 'calendar-range',\n    } as const;\n\n    // Return the corresponding component type, based on the type prop value\n    return componentTypes[this.type] || componentTypes.single;\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    const CallyCalendar = this.CalendarType;\n    const labelId = `bq-date-picker__label-${this.name || this.fallbackInputId}`;\n\n    return (\n      <div class=\"bq-date-picker\" part=\"base\">\n        {/* Label */}\n        <label\n          id={labelId}\n          class={{ 'bq-date-picker__label': true, '!hidden': !this.hasLabel }}\n          aria-label={this.name || this.fallbackInputId}\n          htmlFor={this.name || this.fallbackInputId}\n          ref={(labelElem: HTMLSpanElement) => (this.labelElem = labelElem)}\n          part=\"label\"\n        >\n          <slot name=\"label\" onSlotchange={this.handleLabelSlotChange} />\n        </label>\n        {/* Select date picker dropdown */}\n        <bq-dropdown\n          class=\"bq-date-picker__dropdown is-full [&::part(panel)]:p-m [&::part(panel)]:is-auto\"\n          disabled={this.disabled}\n          distance={this.distance}\n          open={this.open}\n          panelHeight={this.panelHeight}\n          placement={this.placement}\n          skidding={this.skidding}\n          strategy={this.strategy}\n          exportparts=\"panel\"\n        >\n          {/* Input control group */}\n          <div\n            class={{\n              'bq-date-picker__control': true,\n              [`validation-${this.validationStatus}`]: true,\n              disabled: this.disabled,\n            }}\n            part=\"control\"\n            slot=\"trigger\"\n          >\n            {/* Prefix */}\n            <span\n              class={{ 'bq-date-picker__control--prefix': true, '!hidden': !this.hasPrefix }}\n              ref={(spanElem: HTMLSpanElement) => (this.prefixElem = spanElem)}\n              part=\"prefix\"\n            >\n              <slot name=\"prefix\" onSlotchange={this.handlePrefixSlotChange} />\n            </span>\n            {/* HTML Input */}\n            <input\n              id={this.name || this.fallbackInputId}\n              class=\"bq-date-picker__control--input\"\n              autoComplete=\"off\"\n              autoCapitalize=\"off\"\n              aria-disabled={this.disabled ? 'true' : 'false'}\n              aria-controls={`${this.name}`}\n              aria-haspopup=\"dialog\"\n              disabled={this.disabled}\n              form={this.form}\n              name={this.name}\n              placeholder={this.placeholder}\n              readonly={this.type !== 'single'}\n              ref={(inputElem: HTMLInputElement) => (this.inputElem = inputElem)}\n              required={this.required}\n              spellcheck={false}\n              type=\"text\"\n              value={this.displayDate}\n              part=\"input\"\n              // Events\n              onBlur={this.handleBlur}\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n            />\n            {/* Clear Button */}\n            {this.hasValue && !this.disabled && !this.disableClear && (\n              // The clear button will be visible as long as the input has a value\n              // and the parent group is hovered or has focus-within\n              <bq-button\n                class=\"bq-date-picker__control--clear ms-[--bq-date-picker--gap] hidden\"\n                appearance=\"text\"\n                aria-label={this.clearButtonLabel}\n                size=\"small\"\n                onBqClick={this.handleClearClick}\n                part=\"clear-btn\"\n                exportparts=\"button\"\n              >\n                <slot name=\"clear-icon\">\n                  <bq-icon name=\"x-circle\" class=\"flex\" />\n                </slot>\n              </bq-button>\n            )}\n            {/* Suffix */}\n            <span\n              class=\"bq-date-picker__control--suffix\"\n              ref={(spanElem: HTMLSpanElement) => (this.suffixElem = spanElem)}\n              part=\"suffix\"\n            >\n              <slot name=\"suffix\" onSlotchange={this.handleSuffixSlotChange}>\n                <bq-icon name=\"calendar-blank\" class=\"flex\" />\n              </slot>\n            </span>\n          </div>\n          <CallyCalendar\n            isDateDisallowed={this.isDateDisallowed}\n            locale={this.locale as string}\n            value={this.value}\n            min={this.min}\n            max={this.max}\n            months={this.months}\n            tentative={this.tentative}\n            pageBy={this.monthsPerView}\n            firstDayOfWeek={this.firstDayOfWeek}\n            showOutsideDays={this.showOutsideDays}\n            onChange={this.handleCalendarChange}\n            onRangestart={this.handleCalendarRangeStart}\n            onRangeend={this.handleCalendarRangeEnd}\n            exportparts=\"container:calendar__container,header:calendar__header,button:calendar__button,previous:calendar__previous,next:calendar__next,disabled:calendar__disabled,heading:calendar__heading\"\n            ref={(elem) => (this.callyElem = elem as InstanceType<typeof CalendarDate>)}\n          >\n            <bq-icon color=\"text--primary\" slot=\"previous\" name=\"caret-left\" label=\"Previous\" />\n            <bq-icon color=\"text--primary\" slot=\"next\" name=\"caret-right\" label=\"Next\" />\n\n            <div class=\"flex flex-wrap justify-center gap-[--bq-spacing-m]\">{this.generateCalendarMonths()}</div>\n          </CallyCalendar>\n        </bq-dropdown>\n      </div>\n    );\n  }\n}\n"],"version":3}