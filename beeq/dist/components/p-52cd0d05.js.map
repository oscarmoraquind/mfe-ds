{"version":3,"names":["TAG_SIZE","TAG_COLOR","TAG_VARIANT","iconSize","size","xsmall","small","medium","SIZE","textColor","color","typeError","typeGray","typeInfo","typeSuccess","typeWarning","variantOutline","variantFilled","COLORS","bqTagCss","BqTagStyle0","BqTag","proxyCustomElement","H","prefixElem","hasPrefix","border","clickable","disabled","hidden","removable","selected","variant","checkPropValues","validatePropValue","this","el","bqClose","bqOpen","bqBlur","bqClick","bqFocus","componentWillLoad","hide","handleHide","show","handleShow","isRemovable","ev","emit","defaultPrevented","handleClick","isClickable","handleBlur","handleFocus","handleSlotChange","hasSlotContent","hasCustomColor","isHidden","undefined","includes","render","style","getColorCSSVariable","h","Host","key","class","active","onBlur","onClick","onFocus","tabindex","part","ref","spanElem","name","onSlotchange","appearance"],"sources":["../../packages/beeq/src/components/tag/bq-tag.types.ts","../../packages/beeq/src/components/tag/helper/index.ts","../../packages/beeq/src/components/tag/scss/bq-tag.scss?tag=bq-tag&encapsulation=shadow","../../packages/beeq/src/components/tag/bq-tag.tsx"],"sourcesContent":["export const TAG_SIZE = ['xsmall', 'small', 'medium'] as const;\nexport type TTagSize = (typeof TAG_SIZE)[number];\n\nexport const TAG_COLOR = ['error', 'gray', 'info', 'success', 'warning'] as const;\nexport type TTagColor = (typeof TAG_COLOR)[number];\n\nexport const TAG_VARIANT = ['outline', 'filled'] as const;\nexport type TTagVariant = (typeof TAG_VARIANT)[number];\n\nexport const TAG_BORDER_RADIUS = ['none', 'xs2', 'xs', 's', 'm', 'l', 'full'] as const;\nexport type TTagBorderRadius = (typeof TAG_BORDER_RADIUS)[number];\n","import { TAG_COLOR, TAG_SIZE, TAG_VARIANT, TTagColor, TTagSize, TTagVariant } from '../bq-tag.types';\n\n/**\n * Function to determine the icon size based on the provided tag size.\n *\n * @param {TTagSize} size - The size of the tag.\n * @returns {number} The corresponding icon size. If the provided size does not match any predefined sizes, the function returns the size for 'medium'.\n */\nexport const iconSize = (size: TTagSize): number => {\n  const xsmall = TAG_SIZE[0];\n  const small = TAG_SIZE[1];\n  const medium = TAG_SIZE[2];\n\n  const SIZE = {\n    [xsmall]: 16,\n    [small]: 20,\n    [medium]: 24,\n  };\n\n  return SIZE[size] || SIZE[medium];\n};\n\n/**\n * Function to determine the tag text color scheme for a given tag type.\n *\n * @param {TTagType} color - The color of the tag.\n * @returns {Object} An object containing the color scheme for the given tag type. If the provided type does not match any predefined types, the function returns the color scheme for 'default'.\n */\nexport const textColor = (color: TTagColor): Partial<{ [K in TTagVariant]: string }> => {\n  const typeError = TAG_COLOR[0];\n  const typeGray = TAG_COLOR[1];\n  const typeInfo = TAG_COLOR[2];\n  const typeSuccess = TAG_COLOR[3];\n  const typeWarning = TAG_COLOR[4];\n\n  const variantOutline = TAG_VARIANT[0];\n  const variantFilled = TAG_VARIANT[1];\n\n  const COLORS = {\n    [typeError]: {\n      [variantOutline]: 'text--danger',\n      [variantFilled]: 'text--alt',\n    },\n    [typeGray]: {\n      [variantOutline]: 'text--primary',\n      [variantFilled]: 'text--alt',\n    },\n    [typeInfo]: {\n      [variantOutline]: 'text--brand',\n      [variantFilled]: 'text--alt',\n    },\n    [typeSuccess]: {\n      [variantOutline]: 'text--success',\n      [variantFilled]: 'text--alt',\n    },\n    [typeWarning]: {\n      [variantOutline]: 'text--warning',\n      [variantFilled]: 'text--alt',\n    },\n  };\n\n  return COLORS[color];\n};\n","/* -------------------------------------------------------------------------- */\n/*                        Tag styles                        */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-tag.variables';\n\n:host {\n  @apply relative inline-block;\n}\n\n:host([removable][hidden]) {\n  @apply hidden;\n}\n\n.bq-tag {\n  @apply box-border inline-flex select-none flex-row items-center justify-center bg-[--bq-tag--background-color];\n  @apply gap-[--bq-tag--medium-gap] font-medium leading-regular text-primary p-b-[--bq-tag--medium-padding-y] p-i-[--bq-tag--medium-padding-x];\n  @apply rounded-[--bq-tag--border-radius] border-[length:--bq-tag--border-width] border-[color:--bq-tag--border-color];\n  @apply transition-colors duration-300 ease-in-out;\n\n  border-style: var(--bq-tag--border-style);\n}\n\n/* ---------------------------------- Size ---------------------------------- */\n\n.bq-tag__xsmall,\n.bq-tag__small {\n  @apply gap-[--bq-tag--small-gap] p-b-[--bq-tag--small-padding-y] p-i-[--bq-tag--small-padding-x];\n\n  /* Apply predefined border radius only if the border property have NO VALUE */\n  &:not(.has-border) {\n    @apply rounded-[--bq-tag--small-border-radius];\n  }\n}\n\n/* --------------------------------- Action --------------------------------- */\n\n.bq-tag__default.is-clickable {\n  @apply cursor-pointer;\n  // Focus\n  @apply focus-visible:focus;\n  // Hover\n  @apply hover:enabled:bg-[color-mix(in_srgb,_var(--bq-tag--background-color),_var(--bq-hover)_20%)];\n  // Active/Selected\n  @apply [&.active]:text-alt [&.active]:[--bq-tag--background-color:--bq-ui--brand];\n  // Disabled\n  @apply disabled:cursor-not-allowed disabled:border-none disabled:opacity-60;\n}\n\n/* ------------------------------ Color styles ------------------------------ */\n\n.bq-tag__error {\n  &.bq-tag__filled {\n    @apply bg-ui-danger text-alt;\n  }\n\n  &.bq-tag__outline {\n    @apply bg-ui-danger-alt text-danger [--bq-tag--border-color:--bq-stroke--danger];\n  }\n}\n\n.bq-tag__gray {\n  &.bq-tag__filled {\n    @apply bg-ui-tertiary text-alt;\n  }\n\n  &.bq-tag__outline {\n    @apply bg-ui-primary text-primary [--bq-tag--border-color:--bq-stroke--tertiary];\n  }\n}\n\n.bq-tag__info {\n  &.bq-tag__filled {\n    @apply bg-ui-brand text-alt;\n  }\n\n  &.bq-tag__outline {\n    @apply bg-ui-brand-alt text-brand [--bq-tag--border-color:--bq-stroke--brand];\n  }\n}\n\n.bq-tag__success {\n  &.bq-tag__filled {\n    @apply bg-ui-success text-alt;\n  }\n\n  &.bq-tag__outline {\n    @apply bg-ui-success-alt text-success [--bq-tag--border-color:--bq-tag--border-success];\n  }\n}\n\n.bq-tag__warning {\n  &.bq-tag__filled {\n    @apply bg-ui-warning text-alt;\n  }\n\n  &.bq-tag__outline {\n    @apply border-warning bg-ui-warning-alt text-warning;\n  }\n}\n\n/* ------------------------------ Close button ------------------------------ */\n\n.bq-tag__close::part(button) {\n  @apply pointer-events-none border-0 bs-fit p-b-0 p-i-0;\n}\n\n/* --------------- Apply the right size to the bq-icon prefix --------------- */\n\n.bq-tag__prefix ::slotted(bq-icon) {\n  --bq-icon--size: var(--bq-tag--icon-prefix-size) !important;\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch } from '@stencil/core';\n\nimport { TAG_COLOR, TAG_SIZE, TAG_VARIANT, TTagBorderRadius, TTagColor, TTagSize, TTagVariant } from './bq-tag.types';\nimport { iconSize, textColor } from './helper';\nimport { getColorCSSVariable, hasSlotContent, validatePropValue } from '../../shared/utils';\n\n/**\n * The Tag Component is a UI element used to label and categorize content within an application.\n * Tags are commonly used to label items with keywords or categories, making it easier to find and organize content.\n *\n * @example How to use it\n * ```html\n * <bq-tag color=\"success\" size=\"medium\" variant=\"filled\">Success</bq-tag>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/42f8c9-tag\n * @status stable\n *\n * @dependency bq-button\n * @dependency bq-icon\n *\n * @attr {string} border - The corner radius of the Tag (will override size's predefined border)\n * @attr {boolean} clickable - If `true`, the Tag can be clickable\n * @attr {\"error\" | \"gray\" | \"info\" | \"success\" | \"warning\"} color - The color style of the Tag\n * @attr {boolean} disabled - If `true`, the Tag will be disabled (only if clickable = `true`, no interaction allowed)\n * @attr {boolean} hidden - If `true`, the Tag component will hidden (only if removable = `true`)\n * @attr {boolean} removable - If `true`, the Tag component can be removed\n * @attr {boolean} selected - If `true`, the Tag is selected (only if clickable = `true`)\n * @attr {\"xsmall\" | \"small\" | \"medium\"} size - The size of the Tag component\n * @attr {\"outline\" | \"filled\"} variant - The variant of Tag to apply on top of the variant\n *\n * @method hide - Method to be called to remove the tag component\n * @method show - Method to be called to show the tag component\n *\n * @event bqClose - Callback handler to be called when the tag is close/hidden\n * @event bqOpen - Callback handler to be called when the tag is not open/shown\n * @event bqBlur - Handler to be called when tag loses focus\n * @event bqClick - Handler to be called when tag is clicked\n * @event bqFocus - Handler to be called when tag is focused\n *\n * @slot prefix - The prefix slot to add an icon or any other content before the text\n * @slot - The text content of the tag\n *\n * @part wrapper - The wrapper container `<div>` of the element inside the shadow DOM.\n * @part prefix - The `<span>` tag element that acts as prefix container (when icon exists in front of tag).\n * @part text - The `<div>` element containing the text of the tag component.\n * @part btn-close - The close button element to remove the tag component.\n *\n * @cssprop --bq-tag--background-color - Tag background color\n * @cssprop --bq-tag--border-color - Tag border color\n * @cssprop --bq-tag--border-radius - Tag border radius\n * @cssprop --bq-tag--border-style - Tag border style\n * @cssprop --bq-tag--border-width - Tag border width\n * @cssprop --bq-tag--small-border-radius - Tag small border radius\n * @cssprop --bq-tag--small-gap - Tag small gap between content\n * @cssprop --bq-tag--small-padding-x - Tag small padding horizontal\n * @cssprop --bq-tag--small-padding-y - Tag small padding vertical\n * @cssprop --bq-tag--medium-gap - Tag medium gap between content\n * @cssprop --bq-tag--medium-padding-x - Tag medium padding horizontal\n * @cssprop --bq-tag--medium-padding-y - Tag medium padding vertical\n */\n@Component({\n  tag: 'bq-tag',\n  styleUrl: './scss/bq-tag.scss',\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class BqTag {\n  // Own Properties\n  // ====================\n\n  private prefixElem: HTMLElement;\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqTagElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() private hasPrefix = false;\n\n  // Public Property API\n  // ========================\n\n  /** The corner radius of the Tag (will override size's predefined border) */\n  @Prop({ reflect: true }) border: TTagBorderRadius;\n\n  /** If true, the Tag can be clickable */\n  @Prop({ reflect: true }) clickable: boolean = false;\n\n  /** The color style of the Tag */\n  @Prop({ reflect: true }) color: TTagColor;\n\n  /** If true, the Tag will be disabled (only if clickable = `true`, no interaction allowed) */\n  @Prop({ reflect: true }) disabled?: boolean = false;\n\n  /** If true, the Tag component will hidden (only if removable = `true`) */\n  @Prop({ reflect: true, mutable: true }) hidden: boolean;\n\n  /** If true, the Tag component can be removed */\n  @Prop({ reflect: true }) removable: boolean = false;\n\n  /** If true, the Tag is selected (only if clickable = `true`) */\n  @Prop({ reflect: true, mutable: true }) selected: boolean = false;\n\n  /** The size of the Tag component */\n  @Prop({ reflect: true }) size: TTagSize = 'medium';\n\n  /** The variant of Tag to apply on top of the variant */\n  @Prop({ reflect: true }) variant: TTagVariant = 'filled';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('size')\n  @Watch('variant')\n  checkPropValues() {\n    validatePropValue(TAG_SIZE, 'medium', this.el, 'size');\n    validatePropValue(TAG_VARIANT, 'filled', this.el, 'variant');\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Callback handler to be called when the tag is close/hidden  */\n  @Event() bqClose: EventEmitter;\n\n  /** Callback handler to be called when the tag is not open/shown */\n  @Event() bqOpen: EventEmitter;\n\n  /** Handler to be called when tag loses focus */\n  @Event() bqBlur: EventEmitter<HTMLBqTagElement>;\n\n  /** Handler to be called when tag is clicked */\n  @Event() bqClick: EventEmitter<HTMLBqTagElement>;\n\n  /** Handler to be called when tag is focused */\n  @Event() bqFocus: EventEmitter<HTMLBqTagElement>;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.checkPropValues();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  /** Method to be called to remove the tag component */\n  @Method()\n  async hide(): Promise<void> {\n    this.handleHide();\n  }\n\n  /** Method to be called to show the tag component */\n  @Method()\n  async show(): Promise<void> {\n    this.handleShow();\n  }\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleHide = () => {\n    if (!this.isRemovable) return;\n\n    const ev = this.bqClose.emit(this.el);\n    if (!ev.defaultPrevented) {\n      this.hidden = true;\n    }\n  };\n\n  private handleShow = () => {\n    if (!this.isRemovable) return;\n\n    const ev = this.bqOpen.emit(this.el);\n    if (!ev.defaultPrevented) {\n      this.hidden = false;\n    }\n  };\n\n  private handleClick = () => {\n    // If the tag is not clickable or the tag is disabled, we don't want to handle the click\n    if (!this.isClickable || this.disabled) return;\n\n    // Emit a click event on the element\n    const ev = this.bqClick.emit(this.el);\n    // If the event was not prevented, toggle the clickable state\n    if (!ev.defaultPrevented) {\n      this.selected = !this.selected;\n    }\n  };\n\n  private handleBlur = () => {\n    if (!this.isClickable) return;\n\n    this.bqBlur.emit(this.el);\n  };\n\n  private handleFocus = () => {\n    if (!this.isClickable) return;\n\n    this.bqFocus.emit(this.el);\n  };\n\n  private handleSlotChange = () => {\n    this.hasPrefix = hasSlotContent(this.prefixElem, 'prefix');\n  };\n\n  private get isClickable(): boolean {\n    return this.clickable && !this.color && !this.hasCustomColor && !this.removable;\n  }\n\n  private get isRemovable(): boolean {\n    return this.removable && !this.isClickable;\n  }\n\n  private get isHidden(): boolean {\n    return this.isRemovable && this.hidden;\n  }\n\n  private get hasCustomColor(): boolean {\n    return this.color !== undefined ? !TAG_COLOR.includes(this.color) : false;\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    const style = {\n      '--bq-tag--icon-prefix-size': `${iconSize(this.size)}px`,\n      ...(this.border && { '--bq-tag--border-radius': `var(--bq-radius--${this.border})` }),\n      ...(this.color && { '--bq-tag--background-color': getColorCSSVariable(this.color) ?? this.color }),\n      ...(this.hasCustomColor && { '--bq-text--primary': `var(--bq-text--alt)` }),\n    };\n\n    return (\n      <Host style={style} aria-hidden={this.isHidden ? 'true' : 'false'} hidden={this.isHidden ? 'true' : 'false'}>\n        <button\n          class={{\n            [`bq-tag bq-tag__${this.size}`]: true,\n            [`bq-tag__${this.color || 'default'} bq-tag__${this.variant}`]: !this.hasCustomColor,\n            'is-clickable': this.isClickable,\n            'is-removable': this.removable,\n            // Active/Selected state when clickable\n            active: this.isClickable && this.selected,\n            // Fixed border radius\n            'has-border': !!this.border,\n          }}\n          disabled={this.disabled}\n          onBlur={this.handleBlur}\n          onClick={this.handleClick}\n          onFocus={this.handleFocus}\n          tabindex={this.isClickable ? 0 : -1}\n          part=\"wrapper\"\n        >\n          <span\n            class={{ 'bq-tag__prefix inline-flex': true, '!hidden': !this.hasPrefix }}\n            ref={(spanElem) => (this.prefixElem = spanElem)}\n            part=\"prefix\"\n          >\n            <slot name=\"prefix\" onSlotchange={this.handleSlotChange} />\n          </span>\n          <div\n            class={{\n              'text-xs': this.size === 'xsmall',\n              'text-s': this.size === 'small',\n              'text-m': this.size === 'medium',\n            }}\n            part=\"text\"\n          >\n            <slot />\n          </div>\n          {this.isRemovable && !this.disabled && (\n            <bq-button class=\"bq-tag__close\" appearance=\"text\" size=\"small\" onClick={this.handleHide} part=\"btn-close\">\n              <bq-icon\n                size={iconSize(this.size)}\n                name=\"x-circle\"\n                color={this.color && !this.hasCustomColor ? textColor(this.color)[this.variant] : 'text--primary'}\n              />\n            </bq-button>\n          )}\n        </button>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}