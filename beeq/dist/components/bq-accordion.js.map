{"version":3,"names":["ACCORDION_SIZE","ACCORDION_APPEARANCE","Accordion","el","header","panel","animation","isClosing","isExpanding","animationOptions","duration","easing","constructor","this","querySelector","open","style","height","offsetHeight","window","requestAnimationFrame","expand","close","startHeight","endHeight","cancel","animate","onfinish","onAnimationFinish","oncancel","removeAttribute","endEvent","Event","bubbles","composed","dispatchEvent","bqAccordionCss","BqAccordionStyle0","BqAccordion","proxyCustomElement","H","accordion","prefixElem","suffixElem","detailsElem","hasPrefix","hasSuffix","appearance","disabled","expanded","noAnimation","rotate","size","checkPropValues","validatePropValue","handleExpandedChange","event","bqOpen","emit","bqClose","defaultPrevented","isCssInterpolateSizeSupported","setTimeout","CustomEvent","handleDisabledChange","handleJsAnimation","console","warn","bqBlur","bqFocus","bqAfterOpen","bqAfterClose","bqClick","componentWillLoad","componentDidLoad","onAccordionTransitionEnd","stopPropagation","target","handleClick","preventDefault","handleFocus","handleBlur","handlePrefixSlotChange","hasSlotContent","handleSuffixSlotChange","CSS","supports","render","h","key","class","ref","part","id","onClick","onFocus","onBlur","tabindex","role","element","name","onSlotchange"],"sources":["../../packages/beeq/src/components/accordion/bq-accordion.types.ts","../../packages/beeq/src/components/accordion/helper/index.ts","../../packages/beeq/src/components/accordion/scss/bq-accordion.scss?tag=bq-accordion&encapsulation=shadow","../../packages/beeq/src/components/accordion/bq-accordion.tsx"],"sourcesContent":["export const ACCORDION_SIZE = ['small', 'medium'] as const;\nexport type TAccordionSize = (typeof ACCORDION_SIZE)[number];\n\nexport const ACCORDION_APPEARANCE = ['filled', 'ghost'] as const;\nexport type TAccordionAppearance = (typeof ACCORDION_APPEARANCE)[number];\n","/* -------------------------------------------------------------------------------------- */\n/*   ðŸ’¡ Credits: https://css-tricks.com/how-to-animate-the-details-element-using-waapi    */\n/* -------------------------------------------------------------------------------------- */\n\nexport class Accordion {\n  private el: HTMLDetailsElement;\n  private header: HTMLElement;\n  private panel: HTMLElement;\n  private animation: Animation | null;\n  private isClosing: boolean;\n  private isExpanding: boolean;\n  private animationOptions = {\n    duration: 200,\n    easing: 'ease-in-out',\n  };\n\n  constructor(el: HTMLDetailsElement) {\n    // Store the <details> element\n    this.el = el;\n    // Store the <summary> header element\n    this.header = el.querySelector('summary');\n    // Store the <div class=\"content\"> element\n    this.panel = el.querySelector('.bq-accordion__body');\n    // Store the animation object (so we can cancel it, if needed)\n    this.animation = null;\n    // Store if the element is closing\n    this.isClosing = false;\n    // Store if the element is expanding\n    this.isExpanding = false;\n  }\n\n  public open() {\n    // Check if the element is being closed or is already closed\n    if (!this.isClosing && this.el.open) return;\n    // Apply a fixed height on the element\n    this.el.style.height = `${this.el.offsetHeight}px`;\n    // Force the [open] attribute on the details element\n    this.el.open = true;\n    // Wait for the next frame to call the expand function\n    window.requestAnimationFrame(() => this.expand());\n  }\n\n  public close() {\n    // Check if the element is being opened or is already open\n    if (!this.isExpanding && !this.el.open) return;\n    // Set the element as \"being closed\"\n    this.isClosing = true;\n\n    // Store the current height of the element\n    const startHeight = `${this.el.offsetHeight}px`;\n    // Calculate the height of the <summary> header\n    const endHeight = `${this.header.offsetHeight}px`;\n\n    // If there is already an animation running\n    if (this.animation) {\n      // Cancel the current animation\n      this.animation.cancel();\n    }\n\n    // Start a WAAPI animation\n    this.animation = this.el.animate({ height: [startHeight, endHeight] }, this.animationOptions);\n    // When the animation is complete, call onAnimationFinish()\n    this.animation.onfinish = () => this.onAnimationFinish(false);\n    // If the animation is cancelled, isClosing variable is set to false\n    this.animation.oncancel = () => (this.isClosing = false);\n  }\n\n  // Expands the accordion\n  private expand() {\n    // Set the element as \"being expanding\"\n    this.isExpanding = true;\n    // Get the current fixed height of the element\n    const startHeight = `${this.el.offsetHeight}px`;\n    // Calculate the open height of the element (summary header height + panel body height)\n    const endHeight = `${this.header.offsetHeight + this.panel.offsetHeight}px`;\n\n    // If there is already an animation running\n    if (this.animation) {\n      // Cancel the current animation\n      this.animation.cancel();\n    }\n\n    // Start a WAAPI animation\n    this.animation = this.el.animate({ height: [startHeight, endHeight] }, this.animationOptions);\n    // When the animation is complete, call onAnimationFinish()\n    this.animation.onfinish = () => this.onAnimationFinish(true);\n    // If the animation is cancelled, isExpanding variable is set to false\n    this.animation.oncancel = () => (this.isExpanding = false);\n  }\n\n  // Handles the end of the animation\n  private onAnimationFinish(open: boolean) {\n    // Set the open attribute based on the parameter\n    this.el.open = open;\n    // Clear the stored animation\n    this.animation = null;\n    // Reset isClosing & isExpanding\n    this.isClosing = false;\n    this.isExpanding = false;\n    // Remove the overflow hidden and the fixed height\n    this.el.removeAttribute('style');\n    // Dispatch a custom event based on the open parameter\n    const endEvent = new Event('accordionTransitionEnd', { bubbles: false, composed: true });\n    this.el.dispatchEvent(endEvent);\n  }\n}\n","/* -------------------------------------------------------------------------- */\n/*                              Accordion styles                              */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-accordion.variables';\n\n:host {\n  @apply block;\n}\n\n.bq-accordion:not(.no-animation) {\n  /* -------------------------------------------------------------------- */\n  /* Opt-in the component to animating to/from intrinsic sizing keywords  */\n  /* Details: https://chrome.dev/css-wrapped-2024/#animate-to-height-auto */\n  /* -------------------------------------------------------------------- */\n  @apply supports-[interpolate-size:_allow-keywords]:[interpolate-size:_allow-keywords];\n}\n\n.bq-accordion {\n  &.disabled {\n    @apply cursor-not-allowed opacity-60;\n\n    .bq-accordion__header {\n      @apply pointer-events-none;\n    }\n  }\n\n  &.small .bq-accordion__header {\n    @apply gap-[--bq-accordion--small-gap] pe-[--bq-accordion--small-padding-end] ps-[--bq-accordion--small-padding-start] p-b-[--bq-accordion--small-padding-y];\n    @apply rounded-ee-[--bq-accordion--small-radius] rounded-es-[--bq-accordion--small-radius] rounded-se-[--bq-accordion--small-radius] rounded-ss-[--bq-accordion--small-radius];\n  }\n\n  &.medium .bq-accordion__header {\n    @apply gap-[--bq-accordion--medium-gap] pe-[--bq-accordion--medium-padding-end] ps-[--bq-accordion--medium-padding-start] p-b-[--bq-accordion--medium-padding-y];\n    @apply rounded-ee-[--bq-accordion--medium-radius] rounded-es-[--bq-accordion--medium-radius] rounded-se-[--bq-accordion--medium-radius] rounded-ss-[--bq-accordion--medium-radius];\n  }\n\n  &[open] .bq-accordion__header {\n    @apply border-[length:--bq-accordion--expanded-border-width] border-[color:--bq-accordion--expanded-border-color];\n    @apply rounded-ee-[0px] rounded-es-[0px];\n\n    border-style: var(--bq-accordion--expanded-border-style);\n  }\n\n  &.small .bq-accordion__content {\n    @apply rounded-ee-[--bq-accordion--small-radius] rounded-es-[--bq-accordion--small-radius] rounded-se-[0px] rounded-ss-[0px];\n  }\n\n  &.medium .bq-accordion__content {\n    @apply rounded-ee-[--bq-accordion--medium-radius] rounded-es-[--bq-accordion--medium-radius] rounded-se-[0px] rounded-ss-[0px];\n  }\n\n  &.filled {\n    .bq-accordion__header {\n      @apply bg-[--bq-accordion--filled-collapsed-background] hover:bg-hover-ui-secondary;\n    }\n\n    .bq-accordion__header--text {\n      @apply text-[--bq-accordion--filled-collapsed-text-color];\n    }\n\n    .bq-accordion__content {\n      @apply border-[length:--bq-accordion--panel-filled-border-width] border-[color:--bq-accordion--panel-filled-border-color];\n\n      border-style: var(--bq-accordion--panel-filled-border-style);\n    }\n\n    &[open] .bq-accordion__header {\n      @apply bg-[--bq-accordion--filled-expanded-background] hover:bg-hover-ui-secondary;\n    }\n\n    &[open] .bq-accordion__header--text {\n      @apply text-[--bq-accordion--filled-expanded-text-color];\n    }\n  }\n\n  &.ghost {\n    .bq-accordion__header {\n      @apply bg-[--bq-accordion--ghost-collapsed-background] hover:bg-hover-ui-secondary;\n    }\n\n    .bq-accordion__header--text {\n      @apply text-[--bq-accordion--ghost-collapsed-text-color];\n    }\n\n    .bq-accordion__content {\n      @apply border-[length:--bq-accordion--panel-ghost-border-width] border-[color:--bq-accordion--panel-ghost-border-color];\n\n      border-style: var(--bq-accordion--panel-ghost-border-style);\n    }\n\n    &[open] .bq-accordion__header {\n      @apply bg-[--bq-accordion--ghost-expanded-background] hover:bg-hover-ui-secondary;\n    }\n\n    &[open] .bq-accordion__header--text {\n      @apply text-[--bq-accordion--ghost-expanded-text-color];\n    }\n  }\n\n  &.small.filled .bq-accordion__content {\n    @apply pe-[--bq-accordion--panel-small-filled-padding-end] ps-[--bq-accordion--panel-small-filled-padding-start] p-b-[--bq-accordion--panel-small-filled-padding-y];\n  }\n\n  &.medium.filled .bq-accordion__content {\n    @apply pe-[--bq-accordion--panel-medium-filled-padding-end] ps-[--bq-accordion--panel-medium-filled-padding-start] p-b-[--bq-accordion--panel-medium-filled-padding-y];\n  }\n\n  &.small.ghost .bq-accordion__content {\n    @apply pe-[--bq-accordion--panel-small-ghost-padding-end] ps-[--bq-accordion--panel-small-ghost-padding-start] p-b-[--bq-accordion--panel-small-ghost-padding-y];\n  }\n\n  &.medium.ghost .bq-accordion__content {\n    @apply pe-[--bq-accordion--panel-medium-ghost-padding-end] ps-[--bq-accordion--panel-medium-ghost-padding-start] p-b-[--bq-accordion--panel-medium-ghost-padding-y];\n  }\n}\n\n.bq-accordion::details-content {\n  @apply block overflow-clip transition-all duration-300 ease-in-out bs-0 [transition-behavior:allow-discrete];\n}\n\n.bq-accordion[open]::details-content {\n  @apply bs-auto;\n}\n\n.bq-accordion__header {\n  // Since there's an overflow on the <summary> element, the focus outline is not visible,\n  // so we force it to be inset to avoid the overflow hidden.\n  --bq-ring-offset-width: -2px;\n\n  @apply flex cursor-pointer select-none list-none items-center transition-colors duration-300 ease-in-out focus-visible:focus;\n  @apply border-[length:--bq-accordion--collapsed-border-width] border-[color:--bq-accordion--collapsed-border-color];\n\n  border-style: var(--bq-accordion--collapsed-border-style);\n\n  &::marker,\n  &::-webkit-details-marker {\n    @apply hidden;\n  }\n}\n\n.bq-accordion__header--text {\n  @apply flex-1;\n}\n\n.bq-accordion__header--prefix,\n.bq-accordion__header--suffix {\n  @apply flex items-center justify-center;\n}\n","import { Component, Element, Event, EventEmitter, h, Listen, Prop, State, Watch } from '@stencil/core';\n\nimport { ACCORDION_APPEARANCE, ACCORDION_SIZE, TAccordionAppearance, TAccordionSize } from './bq-accordion.types';\nimport { Accordion } from './helper';\nimport { hasSlotContent, validatePropValue } from '../../shared/utils';\n\n/**\n * The Accordion is a UI component that allows users to toggle between showing and hiding content sections. It provides a collapsible functionality, where only one section can be expanded at a time, while the others remain collapsed.\n *\n * @example How to use it\n * ```html\n * <bq-accordion appearance=\"filled\" size=\"medium\">\n *   <bq-avatar size=\"xsmall\" image=\"/image/url/img.png\" slot=\"prefix\"></bq-avatar>\n *   <h3 slot=\"header\">Header</h3>\n *   <div>Lorem ipsum dolor...</div>\n * </bq-accordion>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/713eae-accordion\n * @status stable\n *\n * @dependency bq-icon\n *\n * @attr {\"filled\" | \"ghost\"} [appearance=\"filled\"] - The appearance style of the Accordion\n * @attr {boolean} [disabled=false] - If true, the Accordion is disabled\n * @attr {boolean} [expanded=false] - If true, the Accordion is expanded\n * @attr {boolean} [no-animation=false] - Animation is set through JS when the browser does not support CSS calc-size() If true, the Accordion animation, will be disabled. No animation will be applied.\n * @attr {boolean} [rotate=false] - If true, the Accordion expand icon is rotate 180deg when expanded\n * @attr {\"small\" | \"medium\"} [size=\"medium\"] - The size of the the Accordion\n *\n * @event bqOpen - Handler to be called when the accordion is opened\n * @event bqAfterOpen - Handler to be called after the accordion is opened\n * @event bqClose - Handler to be called when the accordion is closed\n * @event bqAfterClose - Handler to be called after the accordion is closed\n * @event bqFocus - Handler to be called when the accordion gets focus\n * @event bqClick - Handler to be called when the accordion is clicked\n * @event bqBlur - Handler to be called when the accordion loses focus\n *\n * @slot - The accordion panel content\n * @slot collapse - The accordion collapse icon\n * @slot expand - The accordion expand icon\n * @slot header - The accordion header content\n * @slot prefix - The accordion prefix content (icon or avatar)\n * @slot suffix - The accordion suffix content (icon or avatar)\n *\n * @part base - The `<details>` that holds the accordion content\n * @part header - The `<summary>` that holds the accordion header content\n * @part panel - The `<div>` that holds the accordion panel content\n * @part prefix - The `<div>` that holds the accordion prefix content\n * @part suffix - The `<div>` that holds the accordion suffix content\n * @part text - The `<div>` that holds the accordion header text content\n *\n * @cssprop --bq-accordion--small-padding-y - Accordion small vertical padding\n * @cssprop --bq-accordion--small-padding-start - Accordion small start padding\n * @cssprop --bq-accordion--small-padding-end - Accordion small end padding\n * @cssprop --bq-accordion--small-padding-gap - Accordion small gap distance between suffix, title and prefix\n * @cssprop --bq-accordion--small-radius - Accordion small border radius\n *\n * @cssprop --bq-accordion--medium-padding-y - Accordion medium vertical padding\n * @cssprop --bq-accordion--medium-padding-start - Accordion medium start padding\n * @cssprop --bq-accordion--medium-padding-end - Accordion medium end padding\n * @cssprop --bq-accordion--medium-padding-gap - Accordion medium gap distance between suffix, title and prefix\n * @cssprop --bq-accordion--medium-radius - Accordion medium border radius\n *\n * @cssprop --bq-accordion--collapsed-border-color - Accordion collapsed border color\n * @cssprop --bq-accordion--collapsed-border-style - Accordion collapsed border style\n * @cssprop --bq-accordion--collapsed-border-width - Accordion collapsed border width\n *\n * @cssprop --bq-accordion--expanded-border-color - Accordion expanded border color\n * @cssprop --bq-accordion--expanded-border-style - Accordion expanded border style\n * @cssprop --bq-accordion--expanded-border-width - Accordion expanded border width\n *\n * @cssprop --bq-accordion--filled-collapsed-background - Accordion filled collapsed header background\n * @cssprop --bq-accordion--filled-collapsed-text-color - Accordion filled collapsed header text color\n * @cssprop --bq-accordion--filled-expanded-background - Accordion filled expanded header background\n * @cssprop --bq-accordion--filled-expanded-collapsed-hover - Accordion filled expanded header color on hover\n * @cssprop --bq-accordion--filled-expanded-text-color - Accordion filled expanded header text color\n *\n * @cssprop --bq-accordion--ghost-collapsed-background - Accordion ghost collapsed header background\n * @cssprop --bq-accordion--ghost-collapsed-text-color - Accordion ghost collapsed header text color\n * @cssprop --bq-accordion--ghost-expanded-background - Accordion ghost expanded header background\n * @cssprop --bq-accordion--ghost-expanded-collapsed-hover - Accordion ghost expanded header color on hover\n * @cssprop --bq-accordion--ghost-expanded-text-color - Accordion ghost expanded header text color\n *\n * @cssprop --bq-accordion--panel-filled-border-color - Accordion filled panel border color\n * @cssprop --bq-accordion--panel-filled-border-style - Accordion filled panel border style\n * @cssprop --bq-accordion--panel-filled-border-width - Accordion filled panel border width\n * @cssprop --bq-accordion--panel-small-filled-padding-y - Accordion small filled panel vertical padding\n * @cssprop --bq-accordion--panel-small-filled-padding-start - Accordion small filled panel start padding\n * @cssprop --bq-accordion--panel-small-filled-padding-end - Accordion small filled panel end padding\n * @cssprop --bq-accordion--panel-medium-filled-padding-y - Accordion medium filled panel vertical padding\n * @cssprop --bq-accordion--panel-medium-filled-padding-start - Accordion medium filled panel start padding\n * @cssprop --bq-accordion--panel-medium-filled-padding-end - Accordion medium filled panel end padding\n *\n * @cssprop --bq-accordion--panel-ghost-border-color - Accordion ghost panel border color\n * @cssprop --bq-accordion--panel-ghost-border-style - Accordion ghost panel border style\n * @cssprop --bq-accordion--panel-ghost-border-width - Accordion ghost panel border width\n * @cssprop --bq-accordion--panel-small-ghost-padding-y - Accordion small ghost panel vertical padding\n * @cssprop --bq-accordion--panel-small-ghost-padding-start - Accordion small ghost panel start padding\n * @cssprop --bq-accordion--panel-small-ghost-padding-end - Accordion small ghost panel end padding\n * @cssprop --bq-accordion--panel-medium-ghost-padding-y - Accordion medium ghost panel vertical padding\n * @cssprop --bq-accordion--panel-medium-ghost-padding-start - Accordion medium ghost panel start padding\n * @cssprop --bq-accordion--panel-medium-ghost-padding-end - Accordion medium ghost panel end padding\n */\n@Component({\n  tag: 'bq-accordion',\n  styleUrl: './scss/bq-accordion.scss',\n  shadow: true,\n})\nexport class BqAccordion {\n  // Own Properties\n  // ====================\n\n  private accordion: Accordion;\n  private prefixElem: HTMLDivElement;\n  private suffixElem: HTMLDivElement;\n  private detailsElem: HTMLDetailsElement;\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqAccordionElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() private hasPrefix = false;\n  @State() private hasSuffix = false;\n\n  // Public Property API\n  // ========================\n\n  /** The appearance style of the Accordion */\n  @Prop({ reflect: true, mutable: true }) appearance: TAccordionAppearance = 'filled';\n\n  /** If true, the Accordion is disabled */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /** If true, the Accordion is expanded */\n  @Prop({ reflect: true, mutable: true }) expanded: boolean = false;\n\n  /**\n   * Animation is set through JS when the browser does not support CSS calc-size()\n   * If true, the Accordion animation, will be disabled. No animation will be applied.\n   */\n  @Prop({ reflect: true }) noAnimation: boolean = false;\n\n  /** If true, the Accordion expand icon is rotate 180deg when expanded */\n  @Prop({ reflect: true }) rotate: boolean = false;\n\n  /** The size of the Accordion */\n  @Prop({ reflect: true, mutable: true }) size: TAccordionSize = 'medium';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('size')\n  checkPropValues() {\n    validatePropValue(ACCORDION_SIZE, 'medium', this.el, 'size');\n    validatePropValue(ACCORDION_APPEARANCE, 'filled', this.el, 'appearance');\n  }\n\n  @Watch('expanded')\n  handleExpandedChange() {\n    const event = this.expanded ? this.bqOpen.emit(this.el) : this.bqClose.emit(this.el);\n    if (event.defaultPrevented) {\n      this.expanded = !this.expanded;\n      return;\n    }\n\n    if (this.expanded) {\n      this.accordion?.open();\n    } else {\n      this.accordion?.close();\n    }\n    if (!this.isCssInterpolateSizeSupported) return;\n\n    // NOTE: This is a workaround to trigger the transitionEnd event\n    // when the open/close animation is handled via CSS instead of JS\n    setTimeout(() => {\n      this.el.dispatchEvent(new CustomEvent('accordionTransitionEnd', { bubbles: false, composed: true }));\n    }, 200);\n  }\n\n  @Watch('disabled')\n  handleDisabledChange() {\n    if (!this.disabled) return;\n\n    this.expanded = false;\n  }\n\n  @Watch('noAnimation')\n  handleJsAnimation() {\n    if (this.isCssInterpolateSizeSupported) return;\n\n    console.warn(\n      `[bq-accordion] animating to/from intrinsic sizing keywords (interpolate-size: allow-keywords) is not supported and animation will be set through JS.\n        For vertical layout, consider using the 'noAnimation' prop ('no-animation' attribute) to disable it`,\n    );\n    this.accordion = !this.noAnimation ? new Accordion(this.detailsElem) : null;\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Handler to be called when the accordion loses focus */\n  @Event() bqBlur: EventEmitter<HTMLBqAccordionElement>;\n\n  /** Handler to be called when the accordion gets focus */\n  @Event() bqFocus: EventEmitter<HTMLBqAccordionElement>;\n\n  /** Handler to be called when the accordion is opened */\n  @Event() bqOpen: EventEmitter<HTMLBqAccordionElement>;\n\n  /** Handler to be called after the accordion is opened */\n  @Event() bqAfterOpen: EventEmitter<HTMLBqAccordionElement>;\n\n  /** Handler to be called when the accordion is closed */\n  @Event() bqClose: EventEmitter<HTMLBqAccordionElement>;\n\n  /** Handler to be called after the accordion is closed */\n  @Event() bqAfterClose: EventEmitter<HTMLBqAccordionElement>;\n\n  /** Handler to be called when the accordion is clicked */\n  @Event() bqClick: EventEmitter<HTMLBqAccordionElement>;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.checkPropValues();\n  }\n\n  componentDidLoad() {\n    this.handleJsAnimation();\n    this.handleExpandedChange();\n  }\n\n  // Listeners\n  // ==============\n\n  @Listen('accordionTransitionEnd')\n  onAccordionTransitionEnd(event: CustomEvent) {\n    event.stopPropagation();\n    if (event.target !== this.el) return;\n\n    if (this.expanded) {\n      this.bqAfterOpen.emit(this.el);\n      return;\n    }\n\n    this.bqAfterClose.emit(this.el);\n  }\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (this.disabled) return;\n\n    this.bqClick.emit(this.el);\n    this.expanded = !this.expanded;\n  };\n\n  private handleFocus = () => {\n    if (this.disabled) return;\n\n    this.bqFocus.emit(this.el);\n  };\n\n  private handleBlur = () => {\n    this.bqBlur.emit(this.el);\n  };\n\n  private handlePrefixSlotChange = () => {\n    this.hasPrefix = hasSlotContent(this.prefixElem, 'prefix');\n  };\n\n  private handleSuffixSlotChange = () => {\n    this.hasSuffix = hasSlotContent(this.suffixElem, 'suffix');\n  };\n\n  private get open() {\n    return this.expanded && !this.disabled;\n  }\n\n  private get isCssInterpolateSizeSupported() {\n    return window.CSS?.supports('(interpolate-size: allow-keywords)');\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <details\n        class={{\n          [`bq-accordion overflow-hidden ${this.size} ${this.appearance}`]: true,\n          'no-animation': this.noAnimation,\n          disabled: this.disabled,\n        }}\n        ref={(detailsElem: HTMLDetailsElement) => (this.detailsElem = detailsElem)}\n        open={this.open}\n        part=\"base\"\n      >\n        <summary\n          id=\"bq-accordion__header\"\n          class=\"bq-accordion__header\"\n          onClick={this.handleClick}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          aria-expanded={this.expanded ? 'true' : 'false'}\n          aria-disabled={this.disabled ? 'true' : 'false'}\n          aria-controls=\"bq-accordion__content\"\n          tabindex={this.disabled ? -1 : 0}\n          role=\"button\"\n          part=\"header\"\n        >\n          <div\n            ref={(element) => (this.prefixElem = element)}\n            class={{ 'bq-accordion__header--prefix': true, '!hidden': !this.hasPrefix }}\n            part=\"prefix\"\n          >\n            <slot name=\"prefix\" onSlotchange={this.handlePrefixSlotChange} />\n          </div>\n          <div class=\"bq-accordion__header--text\" part=\"text\">\n            <slot name=\"header\" />\n          </div>\n          <div\n            ref={(element) => (this.suffixElem = element)}\n            class={{ 'bq-accordion__header--suffix': true, '!hidden': !this.hasSuffix }}\n            part=\"suffix\"\n          >\n            <slot name=\"suffix\" onSlotchange={this.handleSuffixSlotChange} />\n          </div>\n          <div\n            class={{\n              'flex items-center justify-center transition-transform duration-300 ease-in-out': true,\n              '!hidden': this.open && !this.rotate,\n              'rotate-180': this.rotate && this.open,\n            }}\n            aria-hidden=\"true\"\n          >\n            <slot name=\"expand\">\n              <bq-icon name=\"plus\" />\n            </slot>\n          </div>\n          <div\n            class={{ 'flex items-center justify-center': true, '!hidden': (!this.open && !this.rotate) || this.rotate }}\n            aria-hidden=\"true\"\n          >\n            <slot name=\"collapse\">\n              <bq-icon name=\"minus\" />\n            </slot>\n          </div>\n        </summary>\n        <div\n          class=\"bq-accordion__body overflow-hidden\"\n          aria-labelledby=\"bq-accordion__header\"\n          role=\"region\"\n          part=\"panel\"\n        >\n          <slot id=\"bq-accordion__content\" class=\"bq-accordion__content block\" />\n        </div>\n      </details>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}