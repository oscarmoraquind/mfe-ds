{"version":3,"names":["TEXT_SIZE","bqTextCss","BqTextStyle0","BqText","proxyCustomElement","H","backgroundColor","undefined","textColor","size","handleSizePropChange","validatePropValue","this","el","componentWillLoad","render","styles","getColorCSSVariable","h","Host","key","style","class","part"],"sources":["../../packages/beeq/src/components/text/bq-text.types.ts","../../packages/beeq/src/components/text/scss/bq-text.scss?tag=bq-text&encapsulation=shadow","../../packages/beeq/src/components/text/bq-text.tsx"],"sourcesContent":["export const TEXT_SIZE = ['xs', 's', 'm', 'l', 'xl', 'xxl', 'xxl2', 'xxl3', 'xxl4', 'xxl5'] as const;\nexport type TTextSize = (typeof TEXT_SIZE)[number];\n","/* -------------------------------------------------------------------------- */\n/*                                Text styles                               */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-text.variables';\n\n:host {\n  @apply inline-block;\n}\n\n.bq-text,\n.bq-text * {\n  @apply bg-[color:--bq-text--background-color] font-[--bq-text--font-weight] text-[color:--bq-text--text-color];\n  @apply rounded-[--bq-text--border-radius] border-[length:--bq-text--border-width] border-[color:--bq-text--border-color];\n\n  border-style: var(--bq-text--border-style);\n  box-shadow: var(--bq-text--box-shadow);\n}\n\n.size {\n  &--xs * {\n    @apply text-[length:var(--bq-text--size-xs)];\n  }\n\n  &--s * {\n    @apply text-[length:var(--bq-text--size-s)];\n  }\n\n  &--m * {\n    @apply text-[length:var(--bq-text--size-m)];\n  }\n\n  &--l * {\n    @apply text-[length:var(--bq-text--size-l)];\n  }\n\n  &--xl * {\n    @apply text-[length:var(--bq-text--size-xl)];\n  }\n\n  &--xxl * {\n    @apply text-[length:var(--bq-text--size-xxl)];\n  }\n\n  &--xxl2 * {\n    @apply text-[length:var(--bq-text--size-xxl2)];\n  }\n\n  &--xxl3 * {\n    @apply text-[length:var(--bq-text--size-xxl3)];\n  }\n\n  &--xxl4 * {\n    @apply text-[length:var(--bq-text--size-xxl4)];\n  }\n\n  &--xxl5 * {\n    @apply text-[length:var(--bq-text--size-xxl5)];\n  }\n}\n\n.digit {\n  @apply min-bs-[--bq-text--size-large] min-is-[--bq-text--size-large];\n}\n","import { Component, Element, h, Host, Prop, Watch } from '@stencil/core';\n\nimport { TEXT_SIZE, TTextSize } from './bq-text.types';\nimport { getColorCSSVariable, validatePropValue } from '../../shared/utils';\n\n/**\n * El componente `bq-text` muestra texto con estilos controlados (tama√±o, color, fondo).\n *\n * @example How to use it\n * ```html\n * <bq-text size=\"medium\" color=\"text--primary\">Hola mundo</bq-text>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/194fd1-text\n * @status stable\n *\n * @attr {string} background-color - text background color. The value should be a valid value of the palette color.\n * @attr {string} text-color - text number color. The value should be a valid value of the palette color.\n * @attr {\"small\" | \"medium\" | \"large\"} size - The size of the text. Relevant if text has no content.\n *\n * @slot - The default slot is used to add content to the text. The content can be a number or a text.\n *\n * @part base - The component's internal wrapper that holds the count.\n * @part number - The component's internal wrapper that holds the slot.\n *\n * @cssprop --bq-text--background-color - The text background color\n * @cssprop --bq-text--box-shadow - The text box shadow\n * @cssprop --bq-text--border-color - The text border color\n * @cssprop --bq-text--border-radius - The text border radius\n * @cssprop --bq-text--border-style - The text border style\n * @cssprop --bq-text--border-width - The text border width\n * @cssprop --bq-text--size-small - The text small size\n * @cssprop --bq-text--size-medium - The text medium size\n * @cssprop --bq-text--size-large - The text large size\n * @cssprop --bq-text--text-color - The text text color\n */\n@Component({\n  tag: 'bq-text',\n  styleUrl: './scss/bq-text.scss',\n  shadow: true,\n})\nexport class BqText {\n  // Own Properties\n  // ====================\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el: HTMLBqTextElement;\n\n  // Public Property API\n  // ========================\n\n  /** text background color. The value should be a valid value of the palette color */\n  @Prop({ mutable: true, reflect: true }) backgroundColor? = undefined;\n\n  /** text number color. The value should be a valid value of the palette color */\n  @Prop({ mutable: true, reflect: true }) textColor? = 'text--alt';\n\n  /** The size of the text. Relevant if text has no content. */\n  @Prop({ reflect: true, mutable: true }) size?: TTextSize = 'm';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('size')\n  handleSizePropChange() {\n    validatePropValue(TEXT_SIZE, 'm', this.el, 'size');\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.handleSizePropChange();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    const styles = {\n      ...(this.backgroundColor && { '--bq-text--background-color': getColorCSSVariable(this.backgroundColor) }),\n      ...(this.textColor && { '--bq-text--text-color': getColorCSSVariable(this.textColor) }),\n    };\n\n    return (\n      <Host style={styles}>\n        <div\n          class={{\n            'bq-text': true,\n            [`size--${this.size}`]: true,\n          }}\n          part=\"base\"\n        >\n          <span class=\"text-xs font-bold leading-small\" part=\"number\">\n            <slot></slot>\n          </span>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;yJAAO,MAAMA,EAAY,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,MAAO,OAAQ,OAAQ,OAAQ,QCApF,MAAMC,EAAY,y59BAClB,MAAAC,EAAeD,E,MCwCFE,EAAMC,EAAA,MAAAD,UAAAE,E,uFAauBC,gBAAmBC,UAGnBC,UAAa,YAGbC,KAAmB,IAM3D,oBAAAC,GACEC,EAAkBX,EAAW,IAAKY,KAAKC,GAAI,O,CAW7C,iBAAAC,GACEF,KAAKF,sB,CAiBP,MAAAK,GACE,MAAMC,EAAS,IACTJ,KAAKN,iBAAmB,CAAE,8BAA+BW,EAAoBL,KAAKN,qBAClFM,KAAKJ,WAAa,CAAE,wBAAyBS,EAAoBL,KAAKJ,aAG5E,OACEU,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAOL,GACXE,EAAA,OAAAE,IAAA,2CACEE,MAAO,CACL,UAAW,KACX,CAAC,SAASV,KAAKH,QAAS,MAE1Bc,KAAK,QAELL,EAAA,QAAAE,IAAA,2CAAME,MAAM,kCAAkCC,KAAK,UACjDL,EAAA,QAAAE,IAAA,+C","ignoreList":[]}