{"file":"bq-breadcrumb-item.js","mappings":";;;;;;;AAAA,MAAM,mBAAmB,GAAG,qkiCAAqkiC;;MCuDpliCA,kBAAgB;;;;;;;;;;;;;;;;IAiBF,IAAI,CAAS;;IAGb,MAAM,CAA0C;;IAGhD,GAAG,GAAW,qBAAqB,CAAC;;;;;;;IAUpD,MAAM,CAA4C;;IAGlD,OAAO,CAA4C;;IAGnD,OAAO,CAA4C;;;;;;;;;;;;;;;;IAqBpD,MAAM,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC3B,CAAC;IAEM,OAAO,GAAG;QAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC5B,CAAC;IAEM,OAAO,GAAG;QAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC5B,CAAC;;;;IAMF,MAAM;QACJ,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,OAAO,GAAG,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC;QAExC,QACE,4DAAK,KAAK,EAAC,mBAAmB,EAAC,IAAI,EAAC,MAAM,IACxC,EAAC,OAAO,qDACN,KAAK,EAAC,iBAAiB,EACvB,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,SAAS,EACpC,GAAG,EAAE,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,qBAAqB,GAAG,SAAS,EAC9D,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,EACxC,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,IAAI,EAAC,MAAM,IAEX,6DAAM,KAAK,EAAC,2BAA2B,EAAC,IAAI,EAAC,SAAS,IACpD,8DAAa,CACR,CACC,EAEV,6DAAM,KAAK,EAAC,sBAAsB,EAAC,IAAI,EAAC,WAAW,IACjD,6DAAM,IAAI,EAAC,WAAW,GAAQ,CACzB,CACH,EACN;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["BqBreadcrumbItem"],"sources":["../../packages/beeq/src/components/breadcrumb-item/scss/bq-breadcrumb-item.scss?tag=bq-breadcrumb-item&encapsulation=shadow","../../packages/beeq/src/components/breadcrumb-item/bq-breadcrumb-item.tsx"],"sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                Breadcrumb item styles                */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-breadcrumb-item.variables';\n\n:host([aria-current='page']) {\n  .breadcrumb-item {\n    @apply text-[color:--bq-breadcrumb-item--text-color-current];\n  }\n}\n\n.breadcrumb-item {\n  @apply border-[length:--bq-breadcrumb-item--border-width] border-[color:--bq-breadcrumb-item--border-color];\n  @apply rounded-[--bq-breadcrumb-item--border-radius] bg-[--bq-breadcrumb-item--background] shadow-[shadow:--bq-breadcrumb-item--box-shadow];\n  @apply pe-[--bq-breadcrumb-item--padding-end] ps-[--bq-breadcrumb-item--padding-start] p-b-[--bq-breadcrumb-item--paddingY];\n  @apply text-[length:--bq-breadcrumb-item--text-size] font-regular leading-[--bq-breadcrumb-item--line-height] text-[color:--bq-breadcrumb-item--text-color];\n  @apply focus-visible:focus hover:text-hover-brand active:outline-none;\n  @apply transition-colors duration-300 ease-in-out;\n  @apply cursor-pointer no-underline;\n\n  border-style: var(--bq-avatar--border-style);\n}\n\n.breadcrumb-separator {\n  @apply flex items-center text-[length:--bq-breadcrumb-item--text-size-separator];\n  @apply pe-[--bq-breadcrumb-item--padding-end-separator] ps-[--bq-breadcrumb-item--padding-start-separator];\n}\n","import { Component, Element, Event, EventEmitter, h, Prop } from '@stencil/core';\n\nimport { isDefined } from '../../shared/utils';\n\n/**\n * The Breadcrumb Item helps users understand their current location within a website or application's hierarchical structure.\n *\n * @example How to use it\n * ```html\n * <bq-breadcrumb-item label=\"Home page\">\n *   <bq-icon name=\"house-line\" size=\"16\"></bq-icon>\n *   Home\n * </bq-breadcrumb-item>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/61d6c0-breadcrumb\n * @status stable\n *\n * @attr {string} href - If set, the breadcrumb item will be rendered as an `<a>` with this `href`, otherwise, a `<button>` will be rendered.\n * @attr {string} target - Where to display the link in the browser context. Relevant only if `href` is set.\n * @attr {string} rel - Where to display the link in the browser context. Relevant only if `href` is set.\n *\n * @event bqFocus - Handler to be called when item is focused\n * @event bqClick - Handler to be called when item is clicked\n * @event bqBlur - Handler to be called when item loses focus\n *\n * @slot - The default slot is used to add content to the breadcrumb item.\n *\n * @part base - The component wrapper container\n * @part content - The `span` tag that wraps the content item\n * @part item - The breadcrumb item wrapper (`button` or `a`)\n * @part separator - The `span` tag that wraps the separator element\n *\n * @cssprop --bq-breadcrumb-item--background - Background color of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--box-shadow - Box shadow of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--border-color - Border color of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--border-style - Border style of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--border-width - Border width of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--border-radius - Border radius of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--line-height - Line height of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--text-color - Text color of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--text-color-current - Text color of the current breadcrumb item (active)\n * @cssprop --bq-breadcrumb-item--text-size - Text size of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--text-size-separator - Text size of the breadcrumb item separator\n * @cssprop --bq-breadcrumb-item--padding-start - Padding start of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--padding-end - Padding end of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--paddingY - Padding top and bottom of the breadcrumb item\n * @cssprop --bq-breadcrumb-item--padding-start-separator - Padding start of the breadcrumb item separator\n * @cssprop --bq-breadcrumb-item--padding-end-separator - Padding end of the breadcrumb item separator\n */\n@Component({\n  tag: 'bq-breadcrumb-item',\n  styleUrl: './scss/bq-breadcrumb-item.scss',\n  shadow: true,\n})\nexport class BqBreadcrumbItem {\n  // Own Properties\n  // ====================\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqBreadcrumbItemElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  // Public Property API\n  // ========================\n\n  /** If set, the breadcrumb item will be rendered as an `<a>` with this `href`, otherwise, a `<button>` will be rendered. */\n  @Prop({ reflect: true }) href: string;\n\n  /** Where to display the link in the browser context. Relevant only if `href` is set. */\n  @Prop({ reflect: true }) target: '_blank' | '_parent' | '_self' | '_top';\n\n  /** Where to display the link in the browser context. Relevant only if `href` is set. */\n  @Prop({ reflect: true }) rel: string = 'noreferrer noopener';\n\n  // Prop lifecycle events\n  // =======================\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Handler to be called when item loses focus */\n  @Event() bqBlur: EventEmitter<HTMLBqBreadcrumbItemElement>;\n\n  /** Handler to be called when item is focused */\n  @Event() bqFocus: EventEmitter<HTMLBqBreadcrumbItemElement>;\n\n  /** Handler to be called when item is clicked */\n  @Event() bqClick: EventEmitter<HTMLBqBreadcrumbItemElement>;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private onBlur = () => {\n    this.bqBlur.emit(this.el);\n  };\n\n  private onFocus = () => {\n    this.bqFocus.emit(this.el);\n  };\n\n  private onClick = () => {\n    this.bqClick.emit(this.el);\n  };\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    const isLink = isDefined(this.href);\n    const TagElem = isLink ? 'a' : 'button';\n\n    return (\n      <div class=\"flex items-center\" part=\"base\">\n        <TagElem\n          class=\"breadcrumb-item\"\n          href={isLink ? this.href : undefined}\n          rel={isLink && this.target ? 'noreferrer noopener' : undefined}\n          target={isLink ? this.target : undefined}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          onClick={this.onClick}\n          part=\"item\"\n        >\n          <span class=\"flex items-center gap-xs2\" part=\"content\">\n            <slot></slot>\n          </span>\n        </TagElem>\n        {/* @internal use only */}\n        <span class=\"breadcrumb-separator\" part=\"separator\">\n          <slot name=\"separator\"></slot>\n        </span>\n      </div>\n    );\n  }\n}\n"],"version":3}