{"version":3,"names":["EMPTY_STATE_SIZE","SIZE_TO_VALUE_MAP","small","medium","large","bqEmptyStateCss","BqEmptyStateStyle0","BqEmptyState","proxyCustomElement","H","bodyElem","footerElem","hasBody","hasFooter","size","checkPropValues","validatePropValue","this","el","componentWillLoad","handleContentSlotChange","hasSlotContent","handleFooterSlotChange","iconSize","render","h","key","class","part","name","exportparts","ref","div","onSlotchange"],"sources":["../../packages/beeq/src/components/empty-state/bq-empty-state.types.ts","../../packages/beeq/src/components/empty-state/scss/bq-empty-state.scss?tag=bq-empty-state&encapsulation=shadow","../../packages/beeq/src/components/empty-state/bq-empty-state.tsx"],"sourcesContent":["export const EMPTY_STATE_SIZE = ['small', 'medium', 'large'] as const;\nexport type TEmptyStateSize = (typeof EMPTY_STATE_SIZE)[number];\n\nexport const SIZE_TO_VALUE_MAP: Record<TEmptyStateSize, number> = {\n  small: 40,\n  medium: 80,\n  large: 180,\n};\n","/* -------------------------------------------------------------------------- */\n/*                        Empty state styles                        */\n/* -------------------------------------------------------------------------- */\n\n:host {\n  @apply relative inline-block;\n}\n","import { Component, Element, h, Prop, State, Watch } from '@stencil/core';\n\nimport { EMPTY_STATE_SIZE, SIZE_TO_VALUE_MAP, TEmptyStateSize } from './bq-empty-state.types';\nimport { hasSlotContent, validatePropValue } from '../../shared/utils';\n\n/**\n * An Empty State is a UI component displayed when there is no data or content available, often used in dynamic or inactive application states.\n *\n * @example How to use it\n * ```html\n * <bq-empty-state size=\"medium\">Title</bq-empty-state>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/673ae0-empty-state/b/09d7b1\n * @status stable\n *\n * @dependency bq-icon\n *\n * @attr {\"large\" | \"medium\" | \"small\"} size - The size of the empty state component\n *\n * @slot thumbnail - The element that wraps the thumbnail element\n * @slot body - The content to be displayed after the thumbnail section\n * @slot footer - The content to be displayed after the body section as footer\n *\n * @part body - The container `<div>` that wraps the alert description content\n * @part footer - The container `<div>` that wraps the alert footer content\n * @part icon - The `<bq-icon>` element used to render a predefined icon size based on the empty state size (small, medium, large)\n * @part thumbnail - The container `<div>` that wraps the thumbnail element\n * @part title - The container `<div>` that wraps the empty state title content\n * @part wrapper - The wrapper container `<div>` of the element inside the shadow DOM\n */\n\n@Component({\n  tag: 'bq-empty-state',\n  styleUrl: './scss/bq-empty-state.scss',\n  shadow: true,\n})\nexport class BqEmptyState {\n  // Own Properties\n  // ====================\n\n  private bodyElem: HTMLDivElement;\n  private footerElem: HTMLDivElement;\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqEmptyStateElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() private hasBody = false;\n  @State() private hasFooter = false;\n\n  // Public Property API\n  // ========================\n\n  /** The size of the empty state component */\n  @Prop({ reflect: true, mutable: true }) size: TEmptyStateSize = 'medium';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('size')\n  checkPropValues() {\n    validatePropValue(EMPTY_STATE_SIZE, 'medium', this.el, 'size');\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.checkPropValues();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleContentSlotChange = () => {\n    this.hasBody = hasSlotContent(this.bodyElem, 'body');\n  };\n\n  private handleFooterSlotChange = () => {\n    this.hasFooter = hasSlotContent(this.footerElem, 'footer');\n  };\n\n  private get iconSize(): number {\n    return SIZE_TO_VALUE_MAP[this.size] || SIZE_TO_VALUE_MAP.medium;\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <div class=\"inline-flex flex-col items-center\" part=\"wrapper\">\n        <div\n          class={{\n            'm-be-m': this.size === 'small',\n            'm-be-xl': this.size === 'medium',\n            'm-be-xxl': this.size === 'large',\n          }}\n          part=\"thumbnail\"\n        >\n          <slot name=\"thumbnail\">\n            <bq-icon size={this.iconSize} name=\"database\" part=\"icon\" exportparts=\"base,svg\" />\n          </slot>\n        </div>\n        <div\n          class={{\n            'font-bold leading-regular text-primary': true,\n            'text-m': this.size === 'small',\n            'text-l': this.size === 'medium',\n            'text-xxl2': this.size === 'large',\n            'm-be-xs': this.size === 'small' && this.hasBody,\n            'm-be-m': this.size === 'medium' && this.hasBody,\n            'm-be-l': this.size === 'large' && this.hasBody,\n          }}\n          part=\"title\"\n        >\n          <slot />\n        </div>\n        <div\n          class={{\n            'font-normal leading-regular': true,\n            'text-s': this.size === 'small',\n            'text-m': this.size === 'medium',\n            'text-l': this.size === 'large',\n            'm-be-m': this.size === 'small' && this.hasFooter,\n            'm-be-l': this.size === 'medium' && this.hasFooter,\n            'm-be-xl': this.size === 'large' && this.hasFooter,\n          }}\n          ref={(div) => (this.bodyElem = div)}\n          part=\"body\"\n        >\n          <slot name=\"body\" onSlotchange={this.handleContentSlotChange} />\n        </div>\n        <div class=\"flex items-start gap-xs\" ref={(div) => (this.footerElem = div)} part=\"footer\">\n          <slot name=\"footer\" onSlotchange={this.handleFooterSlotChange} />\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;sLAAO,MAAMA,EAAmB,CAAC,QAAS,SAAU,SAG7C,MAAMC,EAAqD,CAChEC,MAAO,GACPC,OAAQ,GACRC,MAAO,KCNT,MAAMC,EAAkB,+h5BACxB,MAAAC,EAAeD,E,MCoCFE,EAAYC,EAAA,MAAAD,UAAAE,E,kEAIfC,SACAC,W,qBAWSC,QAAU,MACVC,UAAY,MAMWC,KAAwB,SAMhE,eAAAC,GACEC,EAAkBhB,EAAkB,SAAUiB,KAAKC,GAAI,O,CAWzD,iBAAAC,GACEF,KAAKF,iB,CAkBCK,wBAA0B,KAChCH,KAAKL,QAAUS,EAAeJ,KAAKP,SAAU,OAAO,EAG9CY,uBAAyB,KAC/BL,KAAKJ,UAAYQ,EAAeJ,KAAKN,WAAY,SAAS,EAG5D,YAAYY,GACV,OAAOtB,EAAkBgB,KAAKH,OAASb,EAAkBE,M,CAO3D,MAAAqB,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,oCAAoCC,KAAK,WAClDH,EAAA,OAAAC,IAAA,2CACEC,MAAO,CACL,SAAUV,KAAKH,OAAS,QACxB,UAAWG,KAAKH,OAAS,SACzB,WAAYG,KAAKH,OAAS,SAE5Bc,KAAK,aAELH,EAAA,QAAAC,IAAA,2CAAMG,KAAK,aACTJ,EAAA,WAAAC,IAAA,2CAASZ,KAAMG,KAAKM,SAAUM,KAAK,WAAWD,KAAK,OAAOE,YAAY,eAG1EL,EAAA,OAAAC,IAAA,2CACEC,MAAO,CACL,yCAA0C,KAC1C,SAAUV,KAAKH,OAAS,QACxB,SAAUG,KAAKH,OAAS,SACxB,YAAaG,KAAKH,OAAS,QAC3B,UAAWG,KAAKH,OAAS,SAAWG,KAAKL,QACzC,SAAUK,KAAKH,OAAS,UAAYG,KAAKL,QACzC,SAAUK,KAAKH,OAAS,SAAWG,KAAKL,SAE1CgB,KAAK,SAELH,EAAA,QAAAC,IAAA,8CAEFD,EAAA,OAAAC,IAAA,2CACEC,MAAO,CACL,8BAA+B,KAC/B,SAAUV,KAAKH,OAAS,QACxB,SAAUG,KAAKH,OAAS,SACxB,SAAUG,KAAKH,OAAS,QACxB,SAAUG,KAAKH,OAAS,SAAWG,KAAKJ,UACxC,SAAUI,KAAKH,OAAS,UAAYG,KAAKJ,UACzC,UAAWI,KAAKH,OAAS,SAAWG,KAAKJ,WAE3CkB,IAAMC,GAASf,KAAKP,SAAWsB,EAC/BJ,KAAK,QAELH,EAAA,QAAAC,IAAA,2CAAMG,KAAK,OAAOI,aAAchB,KAAKG,2BAEvCK,EAAA,OAAAC,IAAA,2CAAKC,MAAM,0BAA0BI,IAAMC,GAASf,KAAKN,WAAaqB,EAAMJ,KAAK,UAC/EH,EAAA,QAAAC,IAAA,2CAAMG,KAAK,SAASI,aAAchB,KAAKK,0B","ignoreList":[]}