{"file":"bq-empty-state.entry.js","mappings":"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","names":[],"sources":["../../packages/beeq/src/components/empty-state/bq-empty-state.types.ts","../../packages/beeq/src/components/empty-state/scss/bq-empty-state.scss?tag=bq-empty-state&encapsulation=shadow","../../packages/beeq/src/components/empty-state/bq-empty-state.tsx"],"sourcesContent":["export const EMPTY_STATE_SIZE = ['small', 'medium', 'large'] as const;\nexport type TEmptyStateSize = (typeof EMPTY_STATE_SIZE)[number];\n\nexport const SIZE_TO_VALUE_MAP: Record<TEmptyStateSize, number> = {\n  small: 40,\n  medium: 80,\n  large: 180,\n};\n","/* -------------------------------------------------------------------------- */\n/*                        Empty state styles                        */\n/* -------------------------------------------------------------------------- */\n\n:host {\n  @apply relative inline-block;\n}\n","import { Component, Element, h, Prop, State, Watch } from '@stencil/core';\n\nimport { EMPTY_STATE_SIZE, SIZE_TO_VALUE_MAP, TEmptyStateSize } from './bq-empty-state.types';\nimport { hasSlotContent, validatePropValue } from '../../shared/utils';\n\n/**\n * An Empty State is a UI component displayed when there is no data or content available, often used in dynamic or inactive application states.\n *\n * @example How to use it\n * ```html\n * <bq-empty-state size=\"medium\">Title</bq-empty-state>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/673ae0-empty-state/b/09d7b1\n * @status stable\n *\n * @dependency bq-icon\n *\n * @attr {\"large\" | \"medium\" | \"small\"} size - The size of the empty state component\n *\n * @slot thumbnail - The element that wraps the thumbnail element\n * @slot body - The content to be displayed after the thumbnail section\n * @slot footer - The content to be displayed after the body section as footer\n *\n * @part body - The container `<div>` that wraps the alert description content\n * @part footer - The container `<div>` that wraps the alert footer content\n * @part icon - The `<bq-icon>` element used to render a predefined icon size based on the empty state size (small, medium, large)\n * @part thumbnail - The container `<div>` that wraps the thumbnail element\n * @part title - The container `<div>` that wraps the empty state title content\n * @part wrapper - The wrapper container `<div>` of the element inside the shadow DOM\n */\n\n@Component({\n  tag: 'bq-empty-state',\n  styleUrl: './scss/bq-empty-state.scss',\n  shadow: true,\n})\nexport class BqEmptyState {\n  // Own Properties\n  // ====================\n\n  private bodyElem: HTMLDivElement;\n  private footerElem: HTMLDivElement;\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqEmptyStateElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() private hasBody = false;\n  @State() private hasFooter = false;\n\n  // Public Property API\n  // ========================\n\n  /** The size of the empty state component */\n  @Prop({ reflect: true, mutable: true }) size: TEmptyStateSize = 'medium';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('size')\n  checkPropValues() {\n    validatePropValue(EMPTY_STATE_SIZE, 'medium', this.el, 'size');\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.checkPropValues();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleContentSlotChange = () => {\n    this.hasBody = hasSlotContent(this.bodyElem, 'body');\n  };\n\n  private handleFooterSlotChange = () => {\n    this.hasFooter = hasSlotContent(this.footerElem, 'footer');\n  };\n\n  private get iconSize(): number {\n    return SIZE_TO_VALUE_MAP[this.size] || SIZE_TO_VALUE_MAP.medium;\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <div class=\"inline-flex flex-col items-center\" part=\"wrapper\">\n        <div\n          class={{\n            'm-be-m': this.size === 'small',\n            'm-be-xl': this.size === 'medium',\n            'm-be-xxl': this.size === 'large',\n          }}\n          part=\"thumbnail\"\n        >\n          <slot name=\"thumbnail\">\n            <bq-icon size={this.iconSize} name=\"database\" part=\"icon\" exportparts=\"base,svg\" />\n          </slot>\n        </div>\n        <div\n          class={{\n            'font-bold leading-regular text-primary': true,\n            'text-m': this.size === 'small',\n            'text-l': this.size === 'medium',\n            'text-xxl2': this.size === 'large',\n            'm-be-xs': this.size === 'small' && this.hasBody,\n            'm-be-m': this.size === 'medium' && this.hasBody,\n            'm-be-l': this.size === 'large' && this.hasBody,\n          }}\n          part=\"title\"\n        >\n          <slot />\n        </div>\n        <div\n          class={{\n            'font-normal leading-regular': true,\n            'text-s': this.size === 'small',\n            'text-m': this.size === 'medium',\n            'text-l': this.size === 'large',\n            'm-be-m': this.size === 'small' && this.hasFooter,\n            'm-be-l': this.size === 'medium' && this.hasFooter,\n            'm-be-xl': this.size === 'large' && this.hasFooter,\n          }}\n          ref={(div) => (this.bodyElem = div)}\n          part=\"body\"\n        >\n          <slot name=\"body\" onSlotchange={this.handleContentSlotChange} />\n        </div>\n        <div class=\"flex items-start gap-xs\" ref={(div) => (this.footerElem = div)} part=\"footer\">\n          <slot name=\"footer\" onSlotchange={this.handleFooterSlotChange} />\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}