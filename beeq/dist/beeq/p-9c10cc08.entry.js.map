{"version":3,"names":["bqTooltipCss","BqTooltipStyle0","BqTooltip","trigger","panel","arrow","floatingUI","alwaysVisible","distance","hideArrow","placement","sameWidth","displayOn","visible","handleVisibleChange","this","hide","show","handleFloatingUIOptionsChange","init","strategy","componentDidLoad","FloatingUI","skidding","disconnectedCallback","destroy","handleDocumentMouseDown","event","path","composedPath","includes","el","showTooltip","hideTooltip","handleTriggerMouseOver","handleTriggerMouseLeave","handleTriggerOnClick","update","isHidden","render","h","key","class","part","onMouseOver","onMouseLeave","onClick","ref","name","hidden","role"],"sources":["../../packages/beeq/src/components/tooltip/scss/bq-tooltip.scss?tag=bq-tooltip&encapsulation=shadow","../../packages/beeq/src/components/tooltip/bq-tooltip.tsx"],"sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                               Tooltip styles                               */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-tooltip.variables';\n\n.bq-tooltip--panel {\n  @include animation-fade-in;\n  @apply pointer-events-none fixed z-[--bq-tooltip--z-index] box-border bg-[--bq-tooltip--background-color];\n  @apply is-[--bq-tooltip--width] max-is-[--bq-tooltip--max-width] p-b-[--bq-tooltip--paddingY] p-i-[--bq-tooltip--paddingX];\n  @apply text-[length:--bq-tooltip--font-size] leading-[--bq-tooltip--line-height] text-[color:--bq-tooltip--text-color];\n  @apply rounded-[--bq-tooltip--border-radius] border-[length:--bq-tooltip--border-width] border-[color:--bq-tooltip--border-color];\n  @apply shadow-[shadow:--bq-tooltip--box-shadow];\n}\n\n.bq-tooltip--arrow {\n  &,\n  &::before {\n    @apply absolute -z-[1] bs-2 is-2;\n  }\n\n  &::before {\n    @apply start-0 rotate-45 bg-[--bq-tooltip--background-color] content-empty inset-bs-0;\n  }\n}\n","import { Component, Element, h, Listen, Method, Prop, Watch } from '@stencil/core';\n\nimport { Placement } from '../../services/interfaces';\nimport { FloatingUI } from '../../services/libraries';\n\n/**\n * The Tooltip component is a small pop-up box that appears when a user hovers over or clicks on an element, providing additional information or context.\n *\n * @example How to use it\n * ```html\n * <bq-tooltip visible>\n *   Yuhu! I'm a tooltip ðŸ™ƒ\n *   <bq-button slot=\"trigger\">Hover me!</bq-button>\n * </bq-tooltip>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/64c562-tooltip\n * @status stable\n *\n * @attr {boolean} always-visible - If true, the tooltip will always be visible\n * @attr {number} distance - Distance between trigger element and tooltip\n * @attr {boolean} hide-arrow - If true, the arrow on the tooltip content won't be shown\n * @attr {\"top\" | \"right\" | \"bottom\" | \"left\"} placement - Defines the position of the tooltip\n * @attr {boolean} same-width - Whether the tooltip should have the same width as the trigger element (applicable only for content shorter than the trigger element)\n * @attr {\"click\" | \"hover\"} display-on - Set the action when the tooltip should be displayed, on hover (default) or click\n * @attr {boolean} visible - Indicates whether or not the tooltip is visible when the component is first rendered, and when interacting with the trigger\n *\n * @method show - Shows the tooltip\n * @method hide - Hides the tooltip\n *\n * @slot trigger - The element which displays tooltip on hover\n * @slot - The tooltip content\n *\n * @part base - The component wrapper container inside the shadow DOM\n * @part trigger - The `<div>` container that holds the element which displays tooltip on hover\n * @part panel - The `<div>` container that holds the tooltip content\n *\n * @cssprop --bq-tooltip--background-color - Tooltip background color\n * @cssprop --bq-tooltip--box-shadow - Tooltip box shadow\n * @cssprop --bq-tooltip--font-size - Tooltip font size\n * @cssprop --bq-tooltip--line-height - Tooltip line height\n * @cssprop --bq-tooltip--text-color - Tooltip text color\n * @cssprop --bq-tooltip--paddingX - Tooltip horizontal padding\n * @cssprop --bq-tooltip--paddingY - Tooltip vertical padding\n * @cssprop --bq-tooltip--border-color - Tooltip border color\n * @cssprop --bq-tooltip--border-radius - Tooltip border radius\n * @cssprop --bq-tooltip--border-style - Tooltip border style\n * @cssprop --bq-tooltip--border-width - Tooltip border width\n * @cssprop --bq-tooltip--z-index: Tooltip z-index\n */\n@Component({\n  tag: 'bq-tooltip',\n  styleUrl: './scss/bq-tooltip.scss',\n  shadow: true,\n})\nexport class BqTooltip {\n  // Own Properties\n  // ====================\n  private trigger: HTMLElement;\n  private panel: HTMLElement;\n  private arrow: HTMLElement;\n  private floatingUI: FloatingUI;\n\n  // Reference to host HTML element\n  // ===================================\n  @Element() el!: HTMLBqTooltipElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  // Public Property API\n  // ========================\n\n  /** If true, the tooltip will always be visible */\n  @Prop() alwaysVisible?: boolean = false;\n\n  /** Distance between trigger element and tooltip */\n  @Prop({ reflect: true }) distance?: number = 10;\n\n  /** If true, the arrow on the tooltip content won't be shown */\n  @Prop({ reflect: true }) hideArrow?: boolean = false;\n\n  /* Defines the position of the tooltip */\n  @Prop({ reflect: true }) placement?: Placement = 'top';\n\n  /** Whether the tooltip should have the same width as the trigger element\n   * (applicable only for content shorter than the trigger element) */\n  @Prop({ reflect: true }) sameWidth?: boolean = false;\n\n  /** Set the action when the tooltip should be displayed, on hover (default) or click */\n  @Prop({ reflect: true }) displayOn: 'click' | 'hover' = 'hover';\n\n  /**\n   * Indicates whether or not the tooltip is visible when the component is first rendered,\n   * and when interacting with the trigger\n   */\n  @Prop({ reflect: true, mutable: true }) visible? = false;\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('visible')\n  async handleVisibleChange() {\n    if (!this.visible && !this.alwaysVisible) {\n      return await this.hide();\n    }\n\n    await this.show();\n  }\n\n  @Watch('distance')\n  @Watch('hideArrow')\n  @Watch('placement')\n  @Watch('sameWidth')\n  handleFloatingUIOptionsChange() {\n    this.floatingUI.init({\n      placement: this.placement,\n      distance: this.distance,\n      sameWidth: this.sameWidth,\n      strategy: 'fixed',\n    });\n  }\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentDidLoad() {\n    this.floatingUI = new FloatingUI(this.trigger, this.panel, {\n      ...(!this.hideArrow && { arrow: this.arrow }),\n      placement: this.placement,\n      distance: this.distance,\n      sameWidth: this.sameWidth,\n      strategy: 'fixed',\n      skidding: 0,\n    });\n  }\n\n  disconnectedCallback() {\n    this.floatingUI?.destroy();\n  }\n  // Listeners\n  // ==============\n\n  @Listen('mousedown', { target: 'document' })\n  async handleDocumentMouseDown(event: MouseEvent) {\n    // Close when clicking outside of the close element\n    const path = event.composedPath();\n    if (!path.includes(this.el)) {\n      await this.hide();\n    }\n  }\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  /** Shows the tooltip */\n  @Method()\n  async show() {\n    this.visible = true;\n    this.showTooltip();\n  }\n\n  /** Hides the tooltip */\n  @Method()\n  async hide() {\n    if (this.alwaysVisible) return;\n\n    this.visible = false;\n    this.hideTooltip();\n  }\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleTriggerMouseOver = () => {\n    (async () => {\n      if (this.displayOn !== 'hover') return;\n      await this.show();\n    })();\n  };\n\n  private handleTriggerMouseLeave = () => {\n    (async () => {\n      if (this.displayOn !== 'hover') return;\n      await this.hide();\n    })();\n  };\n\n  private handleTriggerOnClick = () => {\n    (async () => {\n      if (this.displayOn !== 'click') return;\n      await (this.visible ? this.hide() : this.show());\n    })();\n  };\n\n  private showTooltip = () => {\n    if (!this.panel) return;\n    this.floatingUI?.update();\n  };\n\n  private hideTooltip = () => {\n    if (!this.panel) return;\n    this.visible = false;\n  };\n\n  private get isHidden() {\n    return !this.visible && !this.alwaysVisible;\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <div class=\"bq-tooltip relative\" part=\"base\">\n        {/* TRIGGER */}\n        <div\n          class=\"bq-tooltip--trigger\"\n          onMouseOver={this.handleTriggerMouseOver}\n          onMouseLeave={this.handleTriggerMouseLeave}\n          onClick={this.handleTriggerOnClick}\n          ref={(el) => (this.trigger = el)}\n          part=\"trigger\"\n        >\n          <slot name=\"trigger\" />\n        </div>\n        {/* PANEL */}\n        <div\n          class=\"bq-tooltip--panel\"\n          aria-hidden={this.isHidden}\n          hidden={this.isHidden}\n          role=\"tooltip\"\n          ref={(el) => (this.panel = el)}\n          part=\"panel\"\n        >\n          {!this.hideArrow && <div class=\"bq-tooltip--arrow\" ref={(el) => (this.arrow = el)} />}\n          <slot />\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;sFAAA,MAAMA,EAAe,si/BACrB,MAAAC,EAAeD,E,MCsDFE,EAAS,M,yBAGZC,QACAC,MACAC,MACAC,W,wBAcAC,cAA0B,MAGTC,SAAoB,GAGpBC,UAAsB,MAGtBC,UAAwB,MAIxBC,UAAsB,MAGtBC,UAA+B,QAMhBC,QAAW,MAMnD,yBAAMC,GACJ,IAAKC,KAAKF,UAAYE,KAAKR,cAAe,CACxC,aAAaQ,KAAKC,M,OAGdD,KAAKE,M,CAOb,6BAAAC,GACEH,KAAKT,WAAWa,KAAK,CACnBT,UAAWK,KAAKL,UAChBF,SAAUO,KAAKP,SACfG,UAAWI,KAAKJ,UAChBS,SAAU,S,CAWd,gBAAAC,GACEN,KAAKT,WAAa,IAAIgB,EAAWP,KAAKZ,QAASY,KAAKX,MAAO,KACpDW,KAAKN,WAAa,CAAEJ,MAAOU,KAAKV,OACrCK,UAAWK,KAAKL,UAChBF,SAAUO,KAAKP,SACfG,UAAWI,KAAKJ,UAChBS,SAAU,QACVG,SAAU,G,CAId,oBAAAC,GACET,KAAKT,YAAYmB,S,CAMnB,6BAAMC,CAAwBC,GAE5B,MAAMC,EAAOD,EAAME,eACnB,IAAKD,EAAKE,SAASf,KAAKgB,IAAK,OACrBhB,KAAKC,M,EAaf,UAAMC,GACJF,KAAKF,QAAU,KACfE,KAAKiB,a,CAKP,UAAMhB,GACJ,GAAID,KAAKR,cAAe,OAExBQ,KAAKF,QAAU,MACfE,KAAKkB,a,CAQCC,uBAAyB,KAC/B,WACE,GAAInB,KAAKH,YAAc,QAAS,aAC1BG,KAAKE,MACZ,EAHD,EAGI,EAGEkB,wBAA0B,KAChC,WACE,GAAIpB,KAAKH,YAAc,QAAS,aAC1BG,KAAKC,MACZ,EAHD,EAGI,EAGEoB,qBAAuB,KAC7B,WACE,GAAIrB,KAAKH,YAAc,QAAS,aACzBG,KAAKF,QAAUE,KAAKC,OAASD,KAAKE,OAC1C,EAHD,EAGI,EAGEe,YAAc,KACpB,IAAKjB,KAAKX,MAAO,OACjBW,KAAKT,YAAY+B,QAAQ,EAGnBJ,YAAc,KACpB,IAAKlB,KAAKX,MAAO,OACjBW,KAAKF,QAAU,KAAK,EAGtB,YAAYyB,GACV,OAAQvB,KAAKF,UAAYE,KAAKR,a,CAOhC,MAAAgC,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,sBAAsBC,KAAK,QAEpCH,EAAA,OAAAC,IAAA,2CACEC,MAAM,sBACNE,YAAa7B,KAAKmB,uBAClBW,aAAc9B,KAAKoB,wBACnBW,QAAS/B,KAAKqB,qBACdW,IAAMhB,GAAQhB,KAAKZ,QAAU4B,EAC7BY,KAAK,WAELH,EAAA,QAAAC,IAAA,2CAAMO,KAAK,aAGbR,EAAA,OAAAC,IAAA,2CACEC,MAAM,oBAAmB,cACZ3B,KAAKuB,SAClBW,OAAQlC,KAAKuB,SACbY,KAAK,UACLH,IAAMhB,GAAQhB,KAAKX,MAAQ2B,EAC3BY,KAAK,UAEH5B,KAAKN,WAAa+B,EAAA,OAAAC,IAAA,2CAAKC,MAAM,oBAAoBK,IAAMhB,GAAQhB,KAAKV,MAAQ0B,IAC9ES,EAAA,QAAAC,IAAA,8C","ignoreList":[]}