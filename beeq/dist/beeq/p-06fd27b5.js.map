{"version":3,"names":["beeqBasePath","DATA_BEEQ_ATTRIBUTE","DEFAULT_SVG_PATH","setBasePath","path","getBasePath","subpath","configScript","findConfigScript","fallbackScript","findFallbackScript","script","getAttribute","getScriptPath","formattedSubpath","replace","isClient","document","querySelector","src","substring","lastIndexOf"],"sources":["../../packages/beeq/src/shared/utils/assetsPath.ts"],"sourcesContent":["/**\n * Inspired by Shoelace's `getBasePath` and `setBasePath` functions.\n * https://github.com/shoelace-style/shoelace/blob/next/src/utilities/base-path.ts\n */\nimport { Env } from '@stencil/core';\n\nimport { isClient } from './isClient';\n\nlet beeqBasePath: string | undefined;\nconst DATA_BEEQ_ATTRIBUTE = 'data-beeq';\nconst DEFAULT_SVG_PATH = 'svg';\n\n/**\n * Sets the base path for the assets.\n * @param {string} path - The base path to set.\n */\nexport const setBasePath = (path: string): void => {\n  beeqBasePath = path;\n};\n\n/**\n * Gets the base path for the assets.\n * @param {string} subpath - An optional subpath to append to the base path.\n * @returns {string} The base path of the assets.\n */\nexport const getBasePath = (subpath: string = ''): string => {\n  if (!beeqBasePath) {\n    const configScript = findConfigScript();\n    const fallbackScript = configScript ? null : findFallbackScript();\n\n    const script = configScript || fallbackScript;\n    if (script) {\n      const path = configScript ? script.getAttribute(DATA_BEEQ_ATTRIBUTE) : getScriptPath(script);\n      setBasePath(`${path}/${DEFAULT_SVG_PATH}`);\n    } else {\n      // Fallback: use an environment variable (if set) or the default path\n      setBasePath(Env.BEEQ_ASSETS_BASE_PATH || `./${DEFAULT_SVG_PATH}`);\n    }\n  }\n\n  // Return the base path without a trailing slash. If one exists, append the subpath separated by a slash.\n  const formattedSubpath = subpath ? `/${subpath.replace(/^\\//, '')}` : '';\n  return beeqBasePath.replace(/\\/$/, '') + formattedSubpath;\n};\n\n/**\n * Finds the configuration script element.\n * @returns The configuration script element or null if not found.\n */\nconst findConfigScript = (): HTMLScriptElement | null => {\n  if (!isClient()) return null;\n\n  return document.querySelector(`script[${DATA_BEEQ_ATTRIBUTE}]`);\n};\n\n/**\n * Finds the fallback script element.\n * @returns The fallback script element or null if not found.\n */\nconst findFallbackScript = (): HTMLScriptElement | null => {\n  if (!isClient()) return null;\n\n  return document.querySelector(`script[src*=\"beeq\"]`);\n};\n\n/**\n * Gets the path of a script element.\n * @param {HTMLScriptElement} script - The script element.\n * @returns The path of the script element.\n */\nconst getScriptPath = (script: HTMLScriptElement): string => {\n  if (!isClient()) return '';\n\n  const src = script.getAttribute('src');\n  return src ? src.substring(0, src.lastIndexOf('/')) : '';\n};\n"],"mappings":";;;;4DAQA,IAAIA,EACJ,MAAMC,EAAsB,YAC5B,MAAMC,EAAmB,M,MAMZC,EAAeC,IAC1BJ,EAAeI,CAAI,E,MAQRC,EAAc,CAACC,EAAkB,MAC5C,IAAKN,EAAc,CACjB,MAAMO,EAAeC,IACrB,MAAMC,EAAiBF,EAAe,KAAOG,IAE7C,MAAMC,EAASJ,GAAgBE,EAC/B,GAAIE,EAAQ,CACV,MAAMP,EAAOG,EAAeI,EAAOC,aAAaX,GAAuBY,EAAcF,GACrFR,EAAY,GAAGC,KAAQF,I,KAClB,CAELC,EAAyC,KAAKD,I,EAKlD,MAAMY,EAAmBR,EAAU,IAAIA,EAAQS,QAAQ,MAAO,MAAQ,GACtE,OAAOf,EAAae,QAAQ,MAAO,IAAMD,CAAgB,EAO3D,MAAMN,EAAmB,KACvB,IAAKQ,IAAY,OAAO,KAExB,OAAOC,SAASC,cAAc,UAAUjB,KAAuB,EAOjE,MAAMS,EAAqB,KACzB,IAAKM,IAAY,OAAO,KAExB,OAAOC,SAASC,cAAc,sBAAsB,EAQtD,MAAML,EAAiBF,IACrB,IAAKK,IAAY,MAAO,GAExB,MAAMG,EAAMR,EAAOC,aAAa,OAChC,OAAOO,EAAMA,EAAIC,UAAU,EAAGD,EAAIE,YAAY,MAAQ,EAAE,S","ignoreList":[]}