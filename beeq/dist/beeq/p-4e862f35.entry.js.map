{"version":3,"names":["bqDropdownCss","BqDropdownStyle0","id","BqDropdown","dropdownPanelId","triggerElem","disabled","distance","keepOpenOnSelect","placement","open","panelHeight","sameWidth","skidding","strategy","onOpenChange","this","bqOpen","emit","handleDisabledChange","removeAttribute","setAttribute","componentDidLoad","el","querySelector","onClickOutside","event","path","composedPath","includes","onEscape","key","onItemSelect","togglePanel","hasAttribute","render","style","h","class","part","onClick","name","role","exportparts","bqPanelCss","BqPanelStyle0","BqPanel","panel","floatingUI","trigger","handleOpenChange","hidePanel","showPanel","onPropChange","init","options","parentTrigger","parentElement","getBoundingClientRect","contextElement","FloatingUI","disconnectedCallback","destroy","update","ref","hidden"],"sources":["../../packages/beeq/src/components/dropdown/scss/bq-dropdown.scss?tag=bq-dropdown&encapsulation=shadow","../../packages/beeq/src/components/dropdown/bq-dropdown.tsx","../../packages/beeq/src/components/panel/scss/bq-panel.scss?tag=bq-panel&encapsulation=shadow","../../packages/beeq/src/components/panel/bq-panel.tsx"],"sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                Dropdown styles                */\n/* -------------------------------------------------------------------------- */\n\n:host {\n  @apply relative inline-block;\n}\n","import { Component, Element, Event, EventEmitter, h, Listen, Prop, Watch } from '@stencil/core';\n\nimport { Placement } from '../../services/interfaces';\n\nlet id = 0;\n\n/**\n * The Dropdown Component is commonly used when presenting a list of selectable options that are too numerous to fit comfortably on the screen.\n * They provide an efficient way to save space and present a long list of options in a compact and organized manner.\n *\n * @example How to use it\n * ```html\n * <bq-dropdown placement=\"bottom-start\">\n *   <bq-button slot=\"trigger\">Dropdown</bq-button>\n *   <bq-option-list>\n *     <bq-option value=\"users\">...</bq-option>\n *     <bq-option value=\"user\">...</bq-option>\n *     <bq-option value=\"dashboard\">...</bq-option>\n *     <bq-option value=\"settings\">...</bq-option>\n *     <bq-option value=\"logout\">...</bq-option>\n *   </bq-option-list>\n * </bq-dropdown>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/47ff4b-dropdown\n * @status stable\n *\n * @dependency bq-panel\n *\n * @attr {boolean} disabled - If true, the dropdown panel will be visible and won't be shown.\n * @attr {number} distance - Represents the distance (gutter or margin) between the panel and the trigger element.\n * @attr {boolean} keep-open-on-select - If true, the panel will remain open after a selection is made.\n * @attr {\"top\" | \"bottom\" | \"left\" | \"right\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"left-start\" | \"left-end\" | \"right-start\" | \"right-end\"} placement - Position of the panel.\n * @attr {boolean} open - If true, the panel will be visible.\n * @attr {string} panel-height - When set, it will override the height of the dropdown panel.\n * @attr {boolean} same-width - Whether the panel should have the same width as the trigger element.\n * @attr {number} skidding - Represents the skidding between the panel and the trigger element.\n * @attr {\"fixed\" | \"absolute\"} strategy - Defines the strategy to position the panel.\n *\n * @event bqOpen - Callback handler to be called when the dropdown panel is opened or closed.\n *\n * @slot trigger - The trigger element that opens the dropdown panel.\n * @slot - The content of the dropdown panel.\n *\n * @part base - The component's internal wrapper.\n * @part dropdown - The `<bq-panel>` element used under the hood to display the dropdown panel.\n * @part panel - The `<div>` element used to display and style the panel inside the `<bq-panel>` element.\n * @part trigger - The `<div>` element that hosts the trigger element.\n *\n * @cssprop --bq-panel--background - Panel background color\n * @cssprop --bq-panel--border-color - Panel border color\n * @cssprop --bq-panel--border-radius - Panel border radius\n * @cssprop --bq-panel--border-style - Panel border style\n * @cssprop --bq-panel--border-width - Panel border width\n * @cssprop --bq-panel--box-shadow - Panel box shadow\n * @cssprop --bq-panel--padding - Panel padding\n * @cssprop --bq-panel--height - Panel height\n * @cssprop --bq-panel--width - Panel width\n * @cssprop --bq-panel-z-index - Panel z-index applied when opened\n */\n@Component({\n  tag: 'bq-dropdown',\n  styleUrl: './scss/bq-dropdown.scss',\n  shadow: true,\n})\nexport class BqDropdown {\n  // Own Properties\n  // ====================\n\n  private dropdownPanelId = `bq-dropdown-panel-${++id}`;\n  private triggerElem: HTMLElement;\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqDropdownElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  // Public Property API\n  // ========================\n\n  /** If true, the dropdown panel will be visible and won't be shown. */\n  @Prop({ reflect: true }) disabled?: boolean = false;\n\n  /** Represents the distance (gutter or margin) between the panel and the trigger element. */\n  @Prop({ reflect: true }) distance?: number = 4;\n\n  /** If true, the panel will remain open after a selection is made. */\n  @Prop({ reflect: true }) keepOpenOnSelect?: boolean = false;\n\n  /** Position of the panel */\n  @Prop({ reflect: true }) placement?: Placement = 'bottom-start';\n\n  /** If true, the panel will be visible. */\n  @Prop({ reflect: true, mutable: true }) open?: boolean = false;\n\n  /** When set, it will override the height of the dropdown panel */\n  @Prop({ reflect: true }) panelHeight?: string;\n\n  /** Whether the panel should have the same width as the trigger element */\n  @Prop({ reflect: true }) sameWidth?: boolean = false;\n\n  /**  Represents the skidding between the panel and the trigger element. */\n  @Prop({ reflect: true }) skidding?: number = 0;\n\n  /** Defines the strategy to position the panel */\n  @Prop({ reflect: true }) strategy?: 'fixed' | 'absolute' = 'fixed';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('open')\n  onOpenChange() {\n    this.bqOpen.emit({ open: this.open });\n  }\n\n  @Watch('disabled')\n  handleDisabledChange() {\n    if (!this.triggerElem) return;\n\n    // set 'disabled' attribute based on 'this.disabled' value, ensuring consistent state handling\n    if (!this.disabled) {\n      this.triggerElem?.removeAttribute('disabled');\n      return;\n    }\n    this.triggerElem?.setAttribute('disabled', 'true');\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Callback handler to be called when the dropdown panel is opened or closed. */\n  @Event() bqOpen: EventEmitter<{ open: boolean }>;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentDidLoad() {\n    this.triggerElem = this.el.querySelector('[slot=\"trigger\"]');\n    this.handleDisabledChange();\n  }\n\n  // Listeners\n  // ==============\n\n  /** Listens for the 'click' event on the document object\n   * and closes the dropdown panel if the click is outside the component.\n   */\n  @Listen('click', { target: 'document', passive: true })\n  onClickOutside(event: MouseEvent) {\n    if (!this.open) return;\n\n    // Close when clicking outside of the close element\n    const path = event.composedPath();\n    if (!path.includes(this.el)) {\n      this.open = false;\n    }\n  }\n\n  /**\n   * Listens for the 'keyup' event on the window object\n   * and closes the dropdown panel if the 'Escape' key or 'Tab' key outside the component is pressed.\n   */\n  @Listen('keyup', { target: 'window', passive: true })\n  onEscape(event: KeyboardEvent) {\n    if (!this.open) return;\n\n    if (event.key === 'Escape' || (event.key === 'Tab' && !event.composedPath().includes(this.el))) {\n      this.open = false;\n    }\n  }\n\n  @Listen('bqSelect', { passive: true })\n  onItemSelect() {\n    if (this.keepOpenOnSelect) return;\n\n    this.open = false;\n  }\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private togglePanel = (): void => {\n    // Don't toggle the panel if the component is disabled or the trigger element is disabled\n    if (this.disabled || this.triggerElem?.hasAttribute('disabled')) return;\n\n    this.open = !this.open;\n  };\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    const style = {\n      ...(this.panelHeight && { '--bq-panel--height': this.panelHeight }),\n    };\n\n    return (\n      <div class=\"bq-dropdown\" part=\"base\">\n        {/* TRIGGER CONTAINER */}\n        <div\n          class=\"bq-dropdown__trigger block\"\n          aria-controls={this.dropdownPanelId}\n          aria-haspopup=\"true\"\n          onClick={this.togglePanel}\n          part=\"trigger\"\n        >\n          <slot name=\"trigger\" />\n        </div>\n        {/* PANEL */}\n        <bq-panel\n          style={style}\n          id={this.dropdownPanelId}\n          class=\"bq-dropdown__panel\"\n          distance={this.distance}\n          placement={this.placement}\n          open={this.open}\n          sameWidth={this.sameWidth}\n          skidding={this.skidding}\n          strategy={this.strategy}\n          role=\"group\"\n          part=\"dropdown\"\n          exportparts=\"panel\"\n        >\n          <slot />\n        </bq-panel>\n      </div>\n    );\n  }\n}\n","/* -------------------------------------------------------------------------- */\n/*                                Panel styles                */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-panel.variables';\n\n:host {\n  @apply block;\n}\n\n.bq-panel {\n  @include animation-fade-in;\n  @apply fixed z-[--bq-panel-z-index] overflow-y-auto overflow-x-hidden is-[--bq-panel--width] max-bs-[--bq-panel--height];\n  @apply rounded-[--bq-panel--border-radius] bg-[--bq-panel--background] shadow-[shadow:--bq-panel--box-shadow];\n  @apply pe-[--bq-panel--padding-end] ps-[--bq-panel--padding-start] p-b-[--bq-panel--paddingY];\n  @apply border-[length:--bq-panel--border-width] border-[color:--bq-panel--border-color];\n\n  border-style: var(--bq-panel--border-style);\n}\n","import { ReferenceElement } from '@floating-ui/dom';\nimport { Component, Element, h, Prop, Watch } from '@stencil/core';\n\nimport { Placement } from '../../services/interfaces';\nimport { FloatingUI } from '../../services/libraries';\n\n/**\n * The Panel component is a versatile and essential element used to wrap and display content in a floating panel.\n *\n * @example How to use it\n * ```html\n * <bq-panel open>\n *   <div>Panel content</div>\n * </bq-panel>\n * ```\n *\n * @status stable\n *\n * @attr {number} distance - Represents the distance (gutter or margin) between the panel and the trigger element.\n * @attr {\"top\" | \"bottom\" | \"left\" | \"right\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"left-start\" | \"left-end\" | \"right-start\" | \"right-end\"} placement - Position of the panel.\n * @attr {boolean} open - If true, the panel will be visible.\n * @attr {boolean} same-width - Whether the panel should have the same width as the trigger element.\n * @attr {number} skidding - Represents the skidding between the panel and the trigger element.\n * @attr {\"fixed\" | \"absolute\"} strategy - Defines the strategy to position the panel.\n *\n * @slot - The content of the panel.\n *\n * @part panel - The `<div>` element used to display and style the panel\n *\n * @prop --bq-panel--background - Panel background color\n * @prop --bq-panel--border-color - Panel border color\n * @prop --bq-panel--border-radius - Panel border radius\n * @prop --bq-panel--border-style - Panel border style\n * @prop --bq-panel--border-width - Panel border width\n * @prop --bq-panel--box-shadow - Panel box shadow\n * @prop --bq-panel--padding - Panel padding\n * @prop --bq-panel--height - Panel height\n * @prop --bq-panel--width - Panel width\n * @prop --bq-panel-z-index - Panel z-index applied when opened\n */\n@Component({\n  tag: 'bq-panel',\n  styleUrl: './scss/bq-panel.scss',\n  shadow: true,\n})\nexport class BqPanel {\n  // Own Properties\n  // ====================\n\n  private panel: HTMLElement;\n  private floatingUI: FloatingUI;\n  private trigger: ReferenceElement;\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqPanelElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  // Public Property API\n  // ========================\n\n  /** Represents the distance (gutter or margin) between the panel and the trigger element. */\n  @Prop({ reflect: true }) distance?: number = 4;\n\n  /** Position of the panel */\n  @Prop({ reflect: true }) placement?: Placement = 'bottom-start';\n\n  /** If true, the panel will be visible. */\n  @Prop({ reflect: true, mutable: true }) open?: boolean = false;\n\n  /** Whether the panel should have the same width as the trigger element */\n  @Prop({ reflect: true }) sameWidth?: boolean = false;\n\n  /**  Represents the skidding between the panel and the trigger element. */\n  @Prop({ reflect: true }) skidding?: number = 0;\n\n  /** Defines the strategy to position the panel */\n  @Prop({ reflect: true }) strategy?: 'fixed' | 'absolute' = 'fixed';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('open')\n  handleOpenChange() {\n    if (!this.open) {\n      this.hidePanel();\n      return;\n    }\n\n    this.showPanel();\n  }\n\n  @Watch('distance')\n  @Watch('placement')\n  @Watch('sameWidth')\n  @Watch('skidding')\n  @Watch('strategy')\n  onPropChange() {\n    this.floatingUI?.init({ ...this.options });\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentDidLoad() {\n    // We need to find the trigger element from the parent to position the panel relative to it.\n    const parentTrigger = this.el.parentElement.querySelector('div[part=\"trigger\"]');\n    if (!parentTrigger) return;\n\n    this.trigger = {\n      getBoundingClientRect: () => parentTrigger.getBoundingClientRect(),\n      contextElement: parentTrigger,\n    };\n\n    this.floatingUI = new FloatingUI(this.trigger, this.panel, { ...this.options });\n    this.handleOpenChange();\n  }\n\n  disconnectedCallback() {\n    this.floatingUI?.destroy();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private showPanel() {\n    this.floatingUI?.update();\n  }\n\n  private async hidePanel() {\n    this.open = false;\n  }\n\n  private get options() {\n    return {\n      distance: this.distance,\n      placement: this.placement,\n      sameWidth: this.sameWidth,\n      skidding: this.skidding,\n      strategy: this.strategy,\n    };\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <div\n        class=\"bq-panel\"\n        ref={(el) => (this.panel = el)}\n        aria-hidden={!this.open ? 'true' : 'false'}\n        hidden={!this.open}\n        part=\"panel\"\n      >\n        <slot />\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}