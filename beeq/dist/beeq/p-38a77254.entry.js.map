{"version":3,"names":["TOAST_TYPE","TOAST_PLACEMENT","bqToastCss","BqToastStyle0","TOAST_PORTAL_SELECTOR","BqToast","autoDismissDebounce","toastPortal","isClient","document","querySelector","border","type","placement","hideIcon","open","time","checkPropValues","validatePropValue","this","el","classList","remove","add","handleTimeChange","cancel","Math","max","debounce","hide","handleOpenChange","bqHide","bqShow","connectedCallback","Object","assign","createElement","className","componentWillLoad","disconnectedCallback","onNotificationHide","removeChild","tagName","toLowerCase","error","DOMException","show","handleShow","handleHide","toast","parentElement","body","append","appendChild","requestAnimationFrame","ev","emit","defaultPrevented","iconName","typeMap","success","loading","alert","info","render","style","h","Host","key","class","hidden","role","part","name","size","slot","exportparts"],"sources":["../../packages/beeq/src/components/toast/bq-toast.types.ts","../../packages/beeq/src/components/toast/scss/bq-toast.scss?tag=bq-toast&encapsulation=shadow","../../packages/beeq/src/components/toast/bq-toast.tsx"],"sourcesContent":["export const TOAST_TYPE = ['info', 'success', 'alert', 'error', 'loading', 'custom'] as const;\nexport type TToastType = (typeof TOAST_TYPE)[number];\n\nexport const TOAST_PLACEMENT = [\n  'top-center',\n  'top-right',\n  'bottom-right',\n  'bottom-center',\n  'bottom-left',\n  'top-left',\n] as const;\nexport type TToastPlacement = (typeof TOAST_PLACEMENT)[number];\n\nexport const TOAST_BORDER_RADIUS = ['none', 'xs2', 'xs', 's', 'm', 'l', 'full'] as const;\nexport type TToastBorderRadius = (typeof TOAST_BORDER_RADIUS)[number];\n","/* -------------------------------------------------------------------------- */\n/*                                Toast styles                                */\n/* -------------------------------------------------------------------------- */\n\n@import './bq-toast.variables';\n\n:host {\n  @apply inline-block;\n}\n\n:host(.is-hidden) {\n  @apply hidden;\n}\n\n.bq-toast {\n  @include animation-slide-in;\n  @apply flex items-center gap-[--bq-toast--gap] p-b-[--bq-toast--padding-y] p-i-[--bq-toast--padding-x];\n  @apply rounded-[--bq-toast--border-radius] bg-[--bq-toast--background] shadow-[shadow:--bq-toast--box-shadow];\n  @apply border-[length:--bq-toast--border-width] border-[color:--bq-toast--border-color];\n\n  border-style: var(--bq-toast--border-style);\n}\n\n.bq-toast--icon {\n  @apply flex;\n\n  &.info {\n    @apply text-[--bq-toast--icon-color-info];\n  }\n\n  &.success {\n    @apply text-[--bq-toast--icon-color-success];\n  }\n\n  &.alert {\n    @apply text-[--bq-toast--icon-color-alert];\n  }\n\n  &.error {\n    @apply text-[--bq-toast--icon-color-error];\n  }\n\n  &.loading {\n    @include animation-spin;\n    @apply text-[--bq-toast--icon-color-loading];\n  }\n\n  &.custom {\n    @apply text-[--bq-toast--icon-color-custom];\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Method, Prop, State, Watch } from '@stencil/core';\n\nimport { TOAST_PLACEMENT, TOAST_TYPE, TToastBorderRadius, TToastPlacement, TToastType } from './bq-toast.types';\nimport { debounce, isClient, TDebounce, validatePropValue } from '../../shared/utils';\n\nconst TOAST_PORTAL_SELECTOR = 'bq-toast-portal';\n\n/**\n * Toasts are time-based components used to display short messages.\n * Commonly used for errors, confirmations, or progress updates.\n *\n * @example How to use it\n * ```html\n * <bq-toast type=\"info\">\n *   This is a message\n * </bq-toast>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/83da51-toast\n * @status stable\n *\n * @dependency bq-icon\n *\n * @attr {\"s\" | \"none\" | \"xs2\" | \"xs\" | \"m\" | \"l\" | \"full\"} border - The corder radius of the toast component\n * @attr {\"success\" | \"error\" | \"loading\" | \"alert\" | \"info\"} type - Type of toast\n * @attr {\"top-left\" | \"top-center\" | \"top-right\" | \"bottom-left\" | \"bottom-center\" | \"bottom-right\"} placement - Placement of toast\n * @attr {boolean} hide-icon - If true will hide toast icon\n * @attr {boolean} open - If true, the toast will be shown\n * @attr {number} time - The length of time, in milliseconds, after which the toast will close itself\n *\n * @method show - Method to be called to show the toast component\n * @method hide - Method to be called to hide the toast component\n * @method toast - This method can be used to display toasts in a fixed-position element that allows for stacking multiple toasts vertically\n *\n * @event bqHide - Callback handler to be called when the notification is hidden\n * @event bqShow - Callback handler to be called when the notification is shown\n *\n * @slot - The content to be displayed in the toast component.\n * @slot icon - The icon to be displayed in the toast component.\n *\n * @part wrapper - The component's internal wrapper inside the shadow DOM.\n * @part icon-info - The `<div>` container that holds the icon component.\n * @part base - The `<div>` container of the internal bq-icon component.\n * @part svg - The `<svg>` element of the internal bq-icon component.\n *\n * @cssprop --bq-toast--background - Toast background color\n * @cssprop --bq-toast--box-shadow - Toast box shadow\n * @cssprop --bq-toast--padding-y - Toast vertical padding\n * @cssprop --bq-toast--padding-x - Toast horizontal padding\n * @cssprop --bq-toast--gap - Toast distance between icon and text\n * @cssprop --bq-toast--border-radius - Toast border radius\n * @cssprop --bq-toast--border-color - Toast border color\n * @cssprop --bq-toast--border-style - Toast border style\n * @cssprop --bq-toast--border-width - Toast border width\n * @cssprop --bq-toast--icon-color-info - Toast icon color when type is 'info'\n * @cssprop --bq-toast--icon-color-success - Toast icon color when type is 'success'\n * @cssprop --bq-toast--icon-color-alert - Toast icon color when type is 'alert'\n * @cssprop --bq-toast--icon-color-error - Toast icon color when type is 'error'\n * @cssprop --bq-toast--icon-color-loading - Toast icon color when type is 'loading'\n * @cssprop --bq-toast--icon-color-custom - Toast icon color when type is 'custom'\n */\n@Component({\n  tag: 'bq-toast',\n  styleUrl: './scss/bq-toast.scss',\n  shadow: true,\n})\nexport class BqToast {\n  // Own Properties\n  // ====================\n\n  private autoDismissDebounce: TDebounce<void>;\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqToastElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() private toastPortal = isClient() ? document.querySelector(`.${TOAST_PORTAL_SELECTOR}`) : null;\n\n  // Public Property API\n  // ========================\n\n  /** The corder radius of the toast component */\n  @Prop({ reflect: true }) border: TToastBorderRadius = 's';\n\n  /** Type of toast */\n  @Prop({ reflect: true, mutable: true }) type: TToastType = 'info';\n\n  /** Placement of toast */\n  @Prop({ reflect: true, mutable: true }) placement: TToastPlacement = 'bottom-center';\n\n  /** If true will hide toast icon */\n  @Prop({ reflect: true, mutable: true }) hideIcon = false;\n\n  /** If true, the toast will be shown */\n  @Prop({ reflect: true, mutable: true }) open: boolean;\n\n  /** The length of time, in milliseconds, after which the toast will close itself */\n  @Prop({ reflect: true }) time: number = 3000;\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('type')\n  @Watch('placement')\n  checkPropValues() {\n    validatePropValue(TOAST_TYPE, 'default', this.el, 'type');\n    validatePropValue(TOAST_PLACEMENT, 'bottom-center', this.el, 'placement');\n\n    const { toastPortal } = this;\n    toastPortal?.classList.remove(...TOAST_PLACEMENT);\n    toastPortal?.classList.add(this.placement);\n  }\n\n  @Watch('time')\n  handleTimeChange() {\n    this.autoDismissDebounce?.cancel();\n\n    this.time = Math.max(0, this.time);\n\n    this.autoDismissDebounce = debounce(() => {\n      this.hide();\n    }, this.time);\n  }\n\n  @Watch('open')\n  handleOpenChange() {\n    this.autoDismissDebounce?.cancel();\n\n    if (this.open) {\n      this.autoDismissDebounce?.();\n    }\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Callback handler to be called when the notification is hidden */\n  @Event() bqHide: EventEmitter<HTMLBqToastElement>;\n\n  /** Callback handler to be called when the notification is shown */\n  @Event() bqShow: EventEmitter<HTMLBqToastElement>;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  connectedCallback() {\n    if (!isClient()) return;\n\n    const { toastPortal } = this;\n    if (!toastPortal) {\n      this.toastPortal = Object.assign(document.createElement('div'), { className: TOAST_PORTAL_SELECTOR });\n    }\n  }\n\n  componentWillLoad() {\n    this.checkPropValues();\n    this.handleTimeChange();\n    this.handleOpenChange();\n  }\n\n  disconnectedCallback() {\n    this.autoDismissDebounce?.cancel();\n  }\n\n  // Listeners\n  // ==============\n\n  @Listen('bqHide')\n  onNotificationHide() {\n    try {\n      const { toastPortal } = this;\n      toastPortal?.removeChild(this.el);\n      // Remove the toast portal from the DOM when there are no more toasts\n      if (toastPortal?.querySelector(this.el.tagName.toLowerCase()) === null) {\n        toastPortal?.remove();\n      }\n    } catch (error) {\n      /**\n       * Skip DOMException error since it could be possible that\n       * in some situations the notification portal is missing\n       */\n      if (error instanceof DOMException) return;\n      throw error;\n    }\n  }\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  /** Method to be called to show the toast component */\n  @Method()\n  async show(): Promise<void> {\n    this.handleShow();\n  }\n\n  /** Method to be called to hide the toast component */\n  @Method()\n  async hide(): Promise<void> {\n    this.handleHide();\n  }\n\n  /** This method can be used to display toasts in a fixed-position element that allows for stacking multiple toasts vertically */\n  @Method()\n  async toast() {\n    if (!isClient()) return;\n\n    const { toastPortal } = this;\n    if (toastPortal?.parentElement === null) {\n      document.body.append(toastPortal);\n    }\n\n    toastPortal?.appendChild(this.el);\n\n    requestAnimationFrame(() => {\n      this.show();\n    });\n  }\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleShow = () => {\n    const ev = this.bqShow.emit(this.el);\n    if (!ev.defaultPrevented) {\n      this.open = true;\n    }\n  };\n\n  private handleHide = () => {\n    const ev = this.bqHide.emit(this.el);\n    if (!ev.defaultPrevented) {\n      this.open = false;\n    }\n  };\n\n  private get iconName() {\n    const typeMap = {\n      success: 'check-circle-bold',\n      error: 'x-circle-bold',\n      loading: 'spinner-gap-bold',\n      alert: 'warning-bold',\n      info: 'info-bold',\n    };\n\n    return typeMap[this.type] || 'info-bold';\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    const style = {\n      ...(this.border && { '--bq-toast--border-radius': `var(--bq-radius--${this.border})` }),\n    };\n\n    return (\n      <Host\n        style={style}\n        class={{ 'is-hidden': !this.open }}\n        aria-hidden={!this.open ? 'true' : 'false'}\n        hidden={!this.open ? 'true' : 'false'}\n        role=\"status\"\n      >\n        <output class=\"bq-toast\" part=\"wrapper\">\n          <div class={{ [`bq-toast--icon ${this.type}`]: true, '!hidden': this.hideIcon }} part=\"icon\">\n            <slot name=\"icon\">\n              <bq-icon name={this.iconName} size=\"24\" slot=\"icon\" exportparts=\"base,svg\" />\n            </slot>\n          </div>\n          <slot />\n        </output>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}