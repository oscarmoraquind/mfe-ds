{"version":3,"file":"generate-custom-elements-json.js","sourceRoot":"","sources":["../../../../../src/tools/generate-custom-elements-json.ts"],"names":[],"mappings":"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","sourcesContent":["import { promises as fs } from 'fs';\nimport { resolve } from 'path';\n\nimport type { JsonDocs } from '@stencil/core/internal';\n\nexport const generateCustomElementsJson = async (docsData: JsonDocs) => {\n  const jsonData = {\n    version: '1.0.0',\n    modules: docsData.components.map((component) => ({\n      kind: 'javascript-module',\n      path: component.filePath,\n      declarations: [\n        {\n          kind: 'class',\n          name: component.fileName,\n          tagName: component.tag,\n          description: component.docs,\n\n          attributes: component.props\n            .filter((prop) => prop.attr)\n            .map((prop) => ({\n              name: prop.attr,\n              type: {\n                text: prop.type,\n              },\n              description: prop.docs,\n              default: prop.default,\n              required: prop.required,\n            })),\n\n          members: [\n            ...component.props\n              .filter((prop) => !prop.attr)\n              .map((prop) => ({\n                kind: 'field',\n                name: prop.name,\n                type: {\n                  text: prop.type,\n                },\n                description: prop.docs,\n                default: prop.default,\n                required: prop.required,\n              })),\n\n            ...component.methods.map((method) => ({\n              kind: 'method',\n              name: method.name,\n            })),\n          ],\n\n          events: component.events.map((event) => ({\n            name: event.event,\n            type: {\n              text: event.detail,\n            },\n            description: event.docs,\n          })),\n\n          slots: component.slots.map((slot) => ({\n            name: slot.name,\n            description: slot.docs,\n          })),\n\n          cssProperties: component.docsTags\n            .filter((tag) => tag.name === 'cssprop')\n            .map((tag) => {\n              const [name, description] = tag.text.split(' - ');\n              return { name: name?.trim(), description: description?.trim() };\n            }),\n\n          cssParts: component.parts.map((part) => ({\n            name: part.name,\n            description: part.docs,\n          })),\n        },\n      ],\n    })),\n  };\n\n  await fs.writeFile(resolve(__dirname, '../../.storybook/custom-elements.json'), JSON.stringify(jsonData, null, 2));\n};\n"]}