{"version":3,"file":"isHTMLElement.js","sourceRoot":"","sources":["../../../../../../src/shared/utils/isHTMLElement.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,MAAe,EACf,GAAM,EAC8B,EAAE;IACtC,OAAO,MAAM,YAAY,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,GAAG,CAAC;AACzE,CAAC,CAAC","sourcesContent":["/**\n * Check if value is the HTMLElement defined by tag\n * @param target the value to be check\n * @param tag valid HTMLElement\n * @returns {boolean} true if the target nodeName is the tag\n */\nexport const isHTMLElement = <T extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap>(\n  target: unknown,\n  tag: T,\n): target is HTMLElementTagNameMap[T] => {\n  return target instanceof Node && target.nodeName.toLowerCase() === tag;\n};\n"]}