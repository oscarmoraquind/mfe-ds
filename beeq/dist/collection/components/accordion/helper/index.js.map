{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../../src/components/accordion/helper/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------- */\n/*   ðŸ’¡ Credits: https://css-tricks.com/how-to-animate-the-details-element-using-waapi    */\n/* -------------------------------------------------------------------------------------- */\n\nexport class Accordion {\n  private el: HTMLDetailsElement;\n  private header: HTMLElement;\n  private panel: HTMLElement;\n  private animation: Animation | null;\n  private isClosing: boolean;\n  private isExpanding: boolean;\n  private animationOptions = {\n    duration: 200,\n    easing: 'ease-in-out',\n  };\n\n  constructor(el: HTMLDetailsElement) {\n    // Store the <details> element\n    this.el = el;\n    // Store the <summary> header element\n    this.header = el.querySelector('summary');\n    // Store the <div class=\"content\"> element\n    this.panel = el.querySelector('.bq-accordion__body');\n    // Store the animation object (so we can cancel it, if needed)\n    this.animation = null;\n    // Store if the element is closing\n    this.isClosing = false;\n    // Store if the element is expanding\n    this.isExpanding = false;\n  }\n\n  public open() {\n    // Check if the element is being closed or is already closed\n    if (!this.isClosing && this.el.open) return;\n    // Apply a fixed height on the element\n    this.el.style.height = `${this.el.offsetHeight}px`;\n    // Force the [open] attribute on the details element\n    this.el.open = true;\n    // Wait for the next frame to call the expand function\n    window.requestAnimationFrame(() => this.expand());\n  }\n\n  public close() {\n    // Check if the element is being opened or is already open\n    if (!this.isExpanding && !this.el.open) return;\n    // Set the element as \"being closed\"\n    this.isClosing = true;\n\n    // Store the current height of the element\n    const startHeight = `${this.el.offsetHeight}px`;\n    // Calculate the height of the <summary> header\n    const endHeight = `${this.header.offsetHeight}px`;\n\n    // If there is already an animation running\n    if (this.animation) {\n      // Cancel the current animation\n      this.animation.cancel();\n    }\n\n    // Start a WAAPI animation\n    this.animation = this.el.animate({ height: [startHeight, endHeight] }, this.animationOptions);\n    // When the animation is complete, call onAnimationFinish()\n    this.animation.onfinish = () => this.onAnimationFinish(false);\n    // If the animation is cancelled, isClosing variable is set to false\n    this.animation.oncancel = () => (this.isClosing = false);\n  }\n\n  // Expands the accordion\n  private expand() {\n    // Set the element as \"being expanding\"\n    this.isExpanding = true;\n    // Get the current fixed height of the element\n    const startHeight = `${this.el.offsetHeight}px`;\n    // Calculate the open height of the element (summary header height + panel body height)\n    const endHeight = `${this.header.offsetHeight + this.panel.offsetHeight}px`;\n\n    // If there is already an animation running\n    if (this.animation) {\n      // Cancel the current animation\n      this.animation.cancel();\n    }\n\n    // Start a WAAPI animation\n    this.animation = this.el.animate({ height: [startHeight, endHeight] }, this.animationOptions);\n    // When the animation is complete, call onAnimationFinish()\n    this.animation.onfinish = () => this.onAnimationFinish(true);\n    // If the animation is cancelled, isExpanding variable is set to false\n    this.animation.oncancel = () => (this.isExpanding = false);\n  }\n\n  // Handles the end of the animation\n  private onAnimationFinish(open: boolean) {\n    // Set the open attribute based on the parameter\n    this.el.open = open;\n    // Clear the stored animation\n    this.animation = null;\n    // Reset isClosing & isExpanding\n    this.isClosing = false;\n    this.isExpanding = false;\n    // Remove the overflow hidden and the fixed height\n    this.el.removeAttribute('style');\n    // Dispatch a custom event based on the open parameter\n    const endEvent = new Event('accordionTransitionEnd', { bubbles: false, composed: true });\n    this.el.dispatchEvent(endEvent);\n  }\n}\n"]}