{"version":3,"file":"bq-text.js","sourceRoot":"","sources":["../../../../../../src/components/text/bq-text.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEzE,OAAO,EAAE,SAAS,EAAa,MAAM,iBAAiB,CAAC;AACvD,OAAO,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AAE5E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AAMH,MAAM,OAAO,MAAM;IACjB,iBAAiB;IACjB,uBAAuB;IAEvB,iCAAiC;IACjC,sCAAsC;IAE3B,EAAE,CAAoB;IAEjC,sBAAsB;IACtB,2BAA2B;IAE3B,oFAAoF;IAC5C,eAAe,GAAI,SAAS,CAAC;IAErE,gFAAgF;IACxC,SAAS,GAAI,WAAW,CAAC;IAEjE,6DAA6D;IACrB,IAAI,GAAe,GAAG,CAAC;IAE/D,wBAAwB;IACxB,0BAA0B;IAG1B,oBAAoB;QAClB,iBAAiB,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;IAED,iBAAiB;IACjB,+CAA+C;IAC/C,iDAAiD;IAEjD,6BAA6B;IAC7B,sCAAsC;IACtC,wCAAwC;IAExC,iBAAiB;QACf,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,YAAY;IACZ,iBAAiB;IAEjB,qBAAqB;IACrB,iDAAiD;IACjD,wBAAwB;IACxB,gCAAgC;IAChC,gDAAgD;IAChD,kDAAkD;IAElD,oBAAoB;IACpB,oCAAoC;IACpC,sCAAsC;IAEtC,MAAM;QACJ,MAAM,MAAM,GAAG;YACb,GAAG,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,6BAA6B,EAAE,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;YACzG,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,uBAAuB,EAAE,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;SACxF,CAAC;QAEF,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAE,MAAM;YACjB,4DACE,KAAK,EAAE;oBACL,SAAS,EAAE,IAAI;oBACf,CAAC,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI;iBAC7B,EACD,IAAI,EAAC,MAAM;gBAEX,6DAAM,KAAK,EAAC,iCAAiC,EAAC,IAAI,EAAC,QAAQ;oBACzD,8DAAa,CACR,CACH,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Host, Prop, Watch } from '@stencil/core';\n\nimport { TEXT_SIZE, TTextSize } from './bq-text.types';\nimport { getColorCSSVariable, validatePropValue } from '../../shared/utils';\n\n/**\n * El componente `bq-text` muestra texto con estilos controlados (tama√±o, color, fondo).\n *\n * @example How to use it\n * ```html\n * <bq-text size=\"medium\" color=\"text--primary\">Hola mundo</bq-text>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/194fd1-text\n * @status stable\n *\n * @attr {string} background-color - text background color. The value should be a valid value of the palette color.\n * @attr {string} text-color - text number color. The value should be a valid value of the palette color.\n * @attr {\"small\" | \"medium\" | \"large\"} size - The size of the text. Relevant if text has no content.\n *\n * @slot - The default slot is used to add content to the text. The content can be a number or a text.\n *\n * @part base - The component's internal wrapper that holds the count.\n * @part number - The component's internal wrapper that holds the slot.\n *\n * @cssprop --bq-text--background-color - The text background color\n * @cssprop --bq-text--box-shadow - The text box shadow\n * @cssprop --bq-text--border-color - The text border color\n * @cssprop --bq-text--border-radius - The text border radius\n * @cssprop --bq-text--border-style - The text border style\n * @cssprop --bq-text--border-width - The text border width\n * @cssprop --bq-text--size-small - The text small size\n * @cssprop --bq-text--size-medium - The text medium size\n * @cssprop --bq-text--size-large - The text large size\n * @cssprop --bq-text--text-color - The text text color\n */\n@Component({\n  tag: 'bq-text',\n  styleUrl: './scss/bq-text.scss',\n  shadow: true,\n})\nexport class BqText {\n  // Own Properties\n  // ====================\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el: HTMLBqTextElement;\n\n  // Public Property API\n  // ========================\n\n  /** text background color. The value should be a valid value of the palette color */\n  @Prop({ mutable: true, reflect: true }) backgroundColor? = undefined;\n\n  /** text number color. The value should be a valid value of the palette color */\n  @Prop({ mutable: true, reflect: true }) textColor? = 'text--alt';\n\n  /** The size of the text. Relevant if text has no content. */\n  @Prop({ reflect: true, mutable: true }) size?: TTextSize = 'm';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('size')\n  handleSizePropChange() {\n    validatePropValue(TEXT_SIZE, 'm', this.el, 'size');\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.handleSizePropChange();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    const styles = {\n      ...(this.backgroundColor && { '--bq-text--background-color': getColorCSSVariable(this.backgroundColor) }),\n      ...(this.textColor && { '--bq-text--text-color': getColorCSSVariable(this.textColor) }),\n    };\n\n    return (\n      <Host style={styles}>\n        <div\n          class={{\n            'bq-text': true,\n            [`size--${this.size}`]: true,\n          }}\n          part=\"base\"\n        >\n          <span class=\"text-xs font-bold leading-small\" part=\"number\">\n            <slot></slot>\n          </span>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}