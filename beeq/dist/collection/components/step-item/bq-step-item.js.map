{"version":3,"file":"bq-step-item.js","sourceRoot":"","sources":["../../../../../../src/components/step-item/bq-step-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Prop, Watch } from '@stencil/core';\n\nimport { STEP_ITEM_STATUS, TStepItemStatus } from './bq-step-item.types';\nimport { isHTMLElement, validatePropValue } from '../../shared/utils';\nimport { STEPS_SIZE, TStepsSize, TStepsType } from '../steps/bq-steps.types';\n\n/**\n * The Step Item Component is a UI element used to display a single step or stage in a process or task.\n * It should be used inside the Steps component.\n *\n * @example How to use it\n * ```html\n * <bq-step-item status=\"completed\">\n *   <bq-icon slot=\"prefix\" name=\"check-circle\"></bq-icon>\n *   <span>Title</span>\n *   <span slot=\"description\">Description</span>\n * </bq-step-item>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/896b66-stepper\n * @status stable\n *\n * @attr {\"small\" | \"medium\"} size - It defines prefix size\n * @attr {\"completed\" | \"current\" | \"error\" | \"default\" | \"disabled\"} status - It defines step item appearance based on its status\n * @attr {\"numeric\" | \"icon\" | \"dot\"} type - It defines the step item type used\n *\n * @event bqClick - Callback handler emitted when the step item is clicked\n *\n * @slot - The step item content\n * @slot prefix - The step item prefix\n * @slot description - The step item description\n *\n * @part base - The component's base wrapper.\n * @part title - The component's title.\n * @part description - The component's description.\n *\n * @cssprop --bq-step-item--prefix-color - Color of the prefix icon\n * @cssprop --bq-step-item--prefix-color-current - Color of the prefix icon when current\n * @cssprop --bq-step-item--prefix-color-completed - Color of the prefix icon when completed\n * @cssprop --bq-step-item--prefix-color-error - Color of the prefix icon when error\n * @cssprop --bq-step-item--prefix-num-size - Size of the prefix number\n * @cssprop --bq-step-item--prefix-num-bg-color - Background color of the prefix number\n */\n@Component({\n  tag: 'bq-step-item',\n  styleUrl: './scss/bq-step-item.scss',\n  shadow: true,\n})\nexport class BqStepItem {\n  // Own Properties\n  // ====================\n\n  // Reference to host HTML element\n  // ===================================\n  @Element() el!: HTMLBqStepItemElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  // Public Property API\n  // ========================\n\n  /** It defines prefix size */\n  @Prop({ reflect: true }) size?: TStepsSize = 'medium';\n\n  /** It defines step item appearance based on its status */\n  @Prop({ reflect: true }) status?: TStepItemStatus = 'default';\n\n  /** It defines the step item type used */\n  @Prop({ reflect: true }) type?: TStepsType;\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('size')\n  @Watch('status')\n  checkPropValues() {\n    validatePropValue(STEPS_SIZE, 'medium', this.el, 'size');\n    validatePropValue(STEP_ITEM_STATUS, 'default', this.el, 'status');\n\n    this.handleIconPrefix();\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Callback handler emitted when the step item is clicked */\n  @Event() bqClick: EventEmitter<{ target: HTMLBqStepItemElement; value: string }>;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  connectedCallback() {\n    this.checkPropValues();\n  }\n\n  componentWillLoad() {\n    this.checkPropValues();\n  }\n\n  componentDidLoad() {\n    this.handleIconPrefix();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private get isDisabled(): boolean {\n    return this.status === 'disabled';\n  }\n\n  private get isCurrent(): boolean {\n    return this.status === 'current';\n  }\n\n  private handleIconPrefix = () => {\n    const iconElem = this.el.querySelector('[slot=\"prefix\"]');\n    if (!iconElem || !isHTMLElement(iconElem, 'bq-icon')) return;\n\n    iconElem.size = this.size === 'small' ? 24 : 32;\n    iconElem.weight = this.isCurrent ? 'fill' : 'regular';\n  };\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <div\n        class={{\n          'bq-step-item flex gap-s': true,\n          [`bq-step-item--${this.status}`]: true,\n          'pointer-events-none opacity-60': this.isDisabled,\n        }}\n        part=\"base\"\n      >\n        <div class={`bq-step-item__prefix relative ${this.type} ${this.size} ${this.status}`}>\n          <slot name=\"prefix\" onSlotchange={this.handleIconPrefix} />\n        </div>\n        <div class=\"bq-step-item__content\">\n          {/* TITLE */}\n          <div\n            class={{\n              'bq-step-item__content--title pe-xs3 text-m leading-regular text-primary': true,\n              'pointer-events-none': this.isDisabled,\n              'text-brand': this.isCurrent,\n            }}\n            part=\"title\"\n          >\n            <slot />\n          </div>\n          {/* DESCRIPTION */}\n          <div\n            class={{\n              'bq-step-item__content--description text-s leading-regular opacity-60': true,\n              'opacity-60': this.isDisabled,\n            }}\n            part=\"description\"\n          >\n            <slot name=\"description\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}