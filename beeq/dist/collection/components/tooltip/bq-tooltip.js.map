{"version":3,"file":"bq-tooltip.js","sourceRoot":"","sources":["../../../../../../src/components/tooltip/bq-tooltip.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAGnF,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AAEtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4CG;AAMH,MAAM,OAAO,SAAS;IACpB,iBAAiB;IACjB,uBAAuB;IACf,OAAO,CAAc;IACrB,KAAK,CAAc;IACnB,KAAK,CAAc;IACnB,UAAU,CAAa;IAE/B,iCAAiC;IACjC,sCAAsC;IAC3B,EAAE,CAAwB;IAErC,oBAAoB;IACpB,wCAAwC;IACxC,0CAA0C;IAE1C,sBAAsB;IACtB,2BAA2B;IAE3B,kDAAkD;IAC1C,aAAa,GAAa,KAAK,CAAC;IAExC,mDAAmD;IAC1B,QAAQ,GAAY,EAAE,CAAC;IAEhD,+DAA+D;IACtC,SAAS,GAAa,KAAK,CAAC;IAErD,yCAAyC;IAChB,SAAS,GAAe,KAAK,CAAC;IAEvD;wEACoE;IAC3C,SAAS,GAAa,KAAK,CAAC;IAErD,uFAAuF;IAC9D,SAAS,GAAsB,OAAO,CAAC;IAEhE;;;OAGG;IACqC,OAAO,GAAI,KAAK,CAAC;IAEzD,wBAAwB;IACxB,0BAA0B;IAG1B,KAAK,CAAC,mBAAmB;QACvB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACzC,OAAO,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;QAED,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAMD,6BAA6B;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACnB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,OAAO;SAClB,CAAC,CAAC;IACL,CAAC;IACD,iBAAiB;IACjB,+CAA+C;IAC/C,iDAAiD;IAEjD,6BAA6B;IAC7B,sCAAsC;IACtC,wCAAwC;IAExC,gBAAgB;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE;YACzD,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;YAC7C,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,OAAO;YACjB,QAAQ,EAAE,CAAC;SACZ,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC;IAC7B,CAAC;IACD,YAAY;IACZ,iBAAiB;IAGjB,KAAK,CAAC,uBAAuB,CAAC,KAAiB;QAC7C,mDAAmD;QACnD,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;YAC5B,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC;IACH,CAAC;IAED,qBAAqB;IACrB,iDAAiD;IACjD,wBAAwB;IACxB,gCAAgC;IAChC,gDAAgD;IAChD,kDAAkD;IAElD,wBAAwB;IAExB,KAAK,CAAC,IAAI;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,wBAAwB;IAExB,KAAK,CAAC,IAAI;QACR,IAAI,IAAI,CAAC,aAAa;YAAE,OAAO;QAE/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,gBAAgB;IAChB,2BAA2B;IAC3B,wDAAwD;IACxD,0DAA0D;IAElD,sBAAsB,GAAG,GAAG,EAAE;QACpC,CAAC,KAAK,IAAI,EAAE;YACV,IAAI,IAAI,CAAC,SAAS,KAAK,OAAO;gBAAE,OAAO;YACvC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC,CAAC,EAAE,CAAC;IACP,CAAC,CAAC;IAEM,uBAAuB,GAAG,GAAG,EAAE;QACrC,CAAC,KAAK,IAAI,EAAE;YACV,IAAI,IAAI,CAAC,SAAS,KAAK,OAAO;gBAAE,OAAO;YACvC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC,CAAC,EAAE,CAAC;IACP,CAAC,CAAC;IAEM,oBAAoB,GAAG,GAAG,EAAE;QAClC,CAAC,KAAK,IAAI,EAAE;YACV,IAAI,IAAI,CAAC,SAAS,KAAK,OAAO;gBAAE,OAAO;YACvC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QACnD,CAAC,CAAC,EAAE,CAAC;IACP,CAAC,CAAC;IAEM,WAAW,GAAG,GAAG,EAAE;QACzB,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO;QACxB,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,CAAC;IAC5B,CAAC,CAAC;IAEM,WAAW,GAAG,GAAG,EAAE;QACzB,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC,CAAC;IAEF,IAAY,QAAQ;QAClB,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;IAC9C,CAAC;IAED,oBAAoB;IACpB,oCAAoC;IACpC,sCAAsC;IAEtC,MAAM;QACJ,OAAO,CACL,4DAAK,KAAK,EAAC,qBAAqB,EAAC,IAAI,EAAC,MAAM;YAE1C,4DACE,KAAK,EAAC,qBAAqB,EAC3B,WAAW,EAAE,IAAI,CAAC,sBAAsB,EACxC,YAAY,EAAE,IAAI,CAAC,uBAAuB,EAC1C,OAAO,EAAE,IAAI,CAAC,oBAAoB,EAClC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,EAChC,IAAI,EAAC,SAAS;gBAEd,6DAAM,IAAI,EAAC,SAAS,GAAG,CACnB;YAEN,4DACE,KAAK,EAAC,mBAAmB,iBACZ,IAAI,CAAC,QAAQ,EAC1B,MAAM,EAAE,IAAI,CAAC,QAAQ,EACrB,IAAI,EAAC,SAAS,EACd,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,EAC9B,IAAI,EAAC,OAAO;gBAEX,CAAC,IAAI,CAAC,SAAS,IAAI,4DAAK,KAAK,EAAC,mBAAmB,EAAC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAI;gBACrF,8DAAQ,CACJ,CACF,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Listen, Method, Prop, Watch } from '@stencil/core';\n\nimport { Placement } from '../../services/interfaces';\nimport { FloatingUI } from '../../services/libraries';\n\n/**\n * The Tooltip component is a small pop-up box that appears when a user hovers over or clicks on an element, providing additional information or context.\n *\n * @example How to use it\n * ```html\n * <bq-tooltip visible>\n *   Yuhu! I'm a tooltip ðŸ™ƒ\n *   <bq-button slot=\"trigger\">Hover me!</bq-button>\n * </bq-tooltip>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/64c562-tooltip\n * @status stable\n *\n * @attr {boolean} always-visible - If true, the tooltip will always be visible\n * @attr {number} distance - Distance between trigger element and tooltip\n * @attr {boolean} hide-arrow - If true, the arrow on the tooltip content won't be shown\n * @attr {\"top\" | \"right\" | \"bottom\" | \"left\"} placement - Defines the position of the tooltip\n * @attr {boolean} same-width - Whether the tooltip should have the same width as the trigger element (applicable only for content shorter than the trigger element)\n * @attr {\"click\" | \"hover\"} display-on - Set the action when the tooltip should be displayed, on hover (default) or click\n * @attr {boolean} visible - Indicates whether or not the tooltip is visible when the component is first rendered, and when interacting with the trigger\n *\n * @method show - Shows the tooltip\n * @method hide - Hides the tooltip\n *\n * @slot trigger - The element which displays tooltip on hover\n * @slot - The tooltip content\n *\n * @part base - The component wrapper container inside the shadow DOM\n * @part trigger - The `<div>` container that holds the element which displays tooltip on hover\n * @part panel - The `<div>` container that holds the tooltip content\n *\n * @cssprop --bq-tooltip--background-color - Tooltip background color\n * @cssprop --bq-tooltip--box-shadow - Tooltip box shadow\n * @cssprop --bq-tooltip--font-size - Tooltip font size\n * @cssprop --bq-tooltip--line-height - Tooltip line height\n * @cssprop --bq-tooltip--text-color - Tooltip text color\n * @cssprop --bq-tooltip--paddingX - Tooltip horizontal padding\n * @cssprop --bq-tooltip--paddingY - Tooltip vertical padding\n * @cssprop --bq-tooltip--border-color - Tooltip border color\n * @cssprop --bq-tooltip--border-radius - Tooltip border radius\n * @cssprop --bq-tooltip--border-style - Tooltip border style\n * @cssprop --bq-tooltip--border-width - Tooltip border width\n * @cssprop --bq-tooltip--z-index: Tooltip z-index\n */\n@Component({\n  tag: 'bq-tooltip',\n  styleUrl: './scss/bq-tooltip.scss',\n  shadow: true,\n})\nexport class BqTooltip {\n  // Own Properties\n  // ====================\n  private trigger: HTMLElement;\n  private panel: HTMLElement;\n  private arrow: HTMLElement;\n  private floatingUI: FloatingUI;\n\n  // Reference to host HTML element\n  // ===================================\n  @Element() el!: HTMLBqTooltipElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  // Public Property API\n  // ========================\n\n  /** If true, the tooltip will always be visible */\n  @Prop() alwaysVisible?: boolean = false;\n\n  /** Distance between trigger element and tooltip */\n  @Prop({ reflect: true }) distance?: number = 10;\n\n  /** If true, the arrow on the tooltip content won't be shown */\n  @Prop({ reflect: true }) hideArrow?: boolean = false;\n\n  /* Defines the position of the tooltip */\n  @Prop({ reflect: true }) placement?: Placement = 'top';\n\n  /** Whether the tooltip should have the same width as the trigger element\n   * (applicable only for content shorter than the trigger element) */\n  @Prop({ reflect: true }) sameWidth?: boolean = false;\n\n  /** Set the action when the tooltip should be displayed, on hover (default) or click */\n  @Prop({ reflect: true }) displayOn: 'click' | 'hover' = 'hover';\n\n  /**\n   * Indicates whether or not the tooltip is visible when the component is first rendered,\n   * and when interacting with the trigger\n   */\n  @Prop({ reflect: true, mutable: true }) visible? = false;\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('visible')\n  async handleVisibleChange() {\n    if (!this.visible && !this.alwaysVisible) {\n      return await this.hide();\n    }\n\n    await this.show();\n  }\n\n  @Watch('distance')\n  @Watch('hideArrow')\n  @Watch('placement')\n  @Watch('sameWidth')\n  handleFloatingUIOptionsChange() {\n    this.floatingUI.init({\n      placement: this.placement,\n      distance: this.distance,\n      sameWidth: this.sameWidth,\n      strategy: 'fixed',\n    });\n  }\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentDidLoad() {\n    this.floatingUI = new FloatingUI(this.trigger, this.panel, {\n      ...(!this.hideArrow && { arrow: this.arrow }),\n      placement: this.placement,\n      distance: this.distance,\n      sameWidth: this.sameWidth,\n      strategy: 'fixed',\n      skidding: 0,\n    });\n  }\n\n  disconnectedCallback() {\n    this.floatingUI?.destroy();\n  }\n  // Listeners\n  // ==============\n\n  @Listen('mousedown', { target: 'document' })\n  async handleDocumentMouseDown(event: MouseEvent) {\n    // Close when clicking outside of the close element\n    const path = event.composedPath();\n    if (!path.includes(this.el)) {\n      await this.hide();\n    }\n  }\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  /** Shows the tooltip */\n  @Method()\n  async show() {\n    this.visible = true;\n    this.showTooltip();\n  }\n\n  /** Hides the tooltip */\n  @Method()\n  async hide() {\n    if (this.alwaysVisible) return;\n\n    this.visible = false;\n    this.hideTooltip();\n  }\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleTriggerMouseOver = () => {\n    (async () => {\n      if (this.displayOn !== 'hover') return;\n      await this.show();\n    })();\n  };\n\n  private handleTriggerMouseLeave = () => {\n    (async () => {\n      if (this.displayOn !== 'hover') return;\n      await this.hide();\n    })();\n  };\n\n  private handleTriggerOnClick = () => {\n    (async () => {\n      if (this.displayOn !== 'click') return;\n      await (this.visible ? this.hide() : this.show());\n    })();\n  };\n\n  private showTooltip = () => {\n    if (!this.panel) return;\n    this.floatingUI?.update();\n  };\n\n  private hideTooltip = () => {\n    if (!this.panel) return;\n    this.visible = false;\n  };\n\n  private get isHidden() {\n    return !this.visible && !this.alwaysVisible;\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <div class=\"bq-tooltip relative\" part=\"base\">\n        {/* TRIGGER */}\n        <div\n          class=\"bq-tooltip--trigger\"\n          onMouseOver={this.handleTriggerMouseOver}\n          onMouseLeave={this.handleTriggerMouseLeave}\n          onClick={this.handleTriggerOnClick}\n          ref={(el) => (this.trigger = el)}\n          part=\"trigger\"\n        >\n          <slot name=\"trigger\" />\n        </div>\n        {/* PANEL */}\n        <div\n          class=\"bq-tooltip--panel\"\n          aria-hidden={this.isHidden}\n          hidden={this.isHidden}\n          role=\"tooltip\"\n          ref={(el) => (this.panel = el)}\n          part=\"panel\"\n        >\n          {!this.hideArrow && <div class=\"bq-tooltip--arrow\" ref={(el) => (this.arrow = el)} />}\n          <slot />\n        </div>\n      </div>\n    );\n  }\n}\n"]}