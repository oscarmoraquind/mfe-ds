{"version":3,"file":"bq-side-menu.js","sourceRoot":"","sources":["../../../../../../src/components/side-menu/bq-side-menu.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAGtG,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAE7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkDG;AAMH,MAAM,OAAO,UAAU;IACrB,iBAAiB;IACjB,uBAAuB;IAEf,mBAAmB,GAAG,mBAAmB,CAAC;IAE1C,OAAO,GAAG,oBAAoB,CAAC;IAC/B,aAAa,GAAG,4BAA4B,CAAC;IAC7C,eAAe,GAAG,8BAA8B,CAAC;IAEjD,QAAQ,CAAc;IAE9B,iCAAiC;IACjC,sCAAsC;IAEtC,oBAAoB;IACpB,wCAAwC;IACxC,0CAA0C;IAEzB,YAAY,CAAkB;IAE/C,sBAAsB;IACtB,2BAA2B;IAE3B,uDAAuD;IAC9B,UAAU,GAAwB,SAAS,CAAC;IAErE,mDAAmD;IAC1B,QAAQ,GAAY,KAAK,CAAC;IAEnD,oDAAoD;IAC3B,IAAI,GAAkB,QAAQ,CAAC;IAExD,wBAAwB;IACxB,0BAA0B;IAG1B,oBAAoB;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,iBAAiB;IACjB,+CAA+C;IAC/C,iDAAiD;IAEjD,kHAAkH;IACzG,UAAU,CAAsC;IAEzD,+EAA+E;IACtE,QAAQ,CAA0C;IAE3D,6BAA6B;IAC7B,sCAAsC;IACtC,wCAAwC;IAExC,gBAAgB;QACd,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO;QAExB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,YAAY;IACZ,iBAAiB;IAGjB,eAAe,CAAC,KAAY;QAC1B,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,mBAAmB,CAAC;YAAE,OAAO;QAEtD,IAAI,CAAC,SAAS,CAAC,OAAO,CACpB,CAAC,QAAmC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,KAAK,IAAI,CAAC,CACrG,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,qBAAqB;IACrB,iDAAiD;IACjD,wBAAwB;IACxB,gCAAgC;IAChC,gDAAgD;IAChD,kDAAkD;IAElD,iDAAiD;IAEjD,KAAK,CAAC,cAAc;QAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,gBAAgB;IAChB,2BAA2B;IAC3B,wDAAwD;IACxD,0DAA0D;IAE1D,IAAY,SAAS;QACnB,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAO,EAAE,CAAC;QAE9B,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CACzD,CAAC,EAA6B,EAAE,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,mBAAmB,CAC1D,CAAC;IACnC,CAAC;IAEO,cAAc,GAAG,GAAG,EAAE;QAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,OAAO;QAEnC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAmC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrG,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC;IACH,CAAC,CAAC;IAEM,oBAAoB,GAAG,GAAG,EAAE;QAClC,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAO;QAE3B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC,CAAC;IAEM,kBAAkB,GAAG,GAAG,EAAE;QAChC,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO;QAE1B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtD,CAAC,CAAC;IAEM,sBAAsB,GAAG,GAAG,EAAE;QACpC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC7F,CAAC,CAAC;IAEF,oBAAoB;IACpB,oCAAoC;IACpC,sCAAsC;IAEtC,MAAM;QACJ,OAAO,CACL,8DAAO,KAAK,EAAE,EAAE,8BAA8B,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAC,MAAM;YAEhG,4DAAK,KAAK,EAAE,EAAE,oBAAoB,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAC,MAAM;gBACpF,6DAAM,IAAI,EAAC,MAAM,GAAG,CAChB;YAEN,4DACE,KAAK,EAAC,uDAAuD,EAC7D,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;gBAC3C,kFAAkF;gBAClF,IAAI,EAAC,MAAM,EACX,IAAI,EAAC,KAAK;gBAEV,8DAAQ,CACJ;YAEN,4DACE,KAAK,EAAC,gHAAgH,EACtH,IAAI,EAAC,QAAQ;gBAEb,6DAAM,IAAI,EAAC,QAAQ,GAAQ,CACvB,CACA,CACT,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, h, Listen, Method, Prop, State, Watch } from '@stencil/core';\n\nimport { TSideMenuAppearance, TSideMenuSize } from './bq-side-menu.types';\nimport { isClient, isHTMLElement } from '../../shared/utils';\n\n/**\n *The default side menu serves as a versatile container for organizing and displaying navigation elements,\n * with default side menu items providing a clean and straightforward way to represent individual menu options.\n * Together, they form the foundation for building structured and intuitive side menu layouts.\n *\n * @example How to use it\n * ```html\n * <bq-side-menu>\n *   <div slot=\"logo\">\n *     <h1>Your Logo</h1>\n *   </div>\n *   <bq-side-menu-item active>\n *     <bq-icon name=\"home\" slot=\"prefix\"></bq-icon>\n *     Home\n *   </bq-side-menu-item>\n *   <bq-side-menu-item>\n *     <bq-icon name=\"settings\" slot=\"prefix\"></bq-icon>\n *     Settings\n *   </bq-side-menu-item>\n *   <bq-side-menu-item disabled>\n *     <bq-icon name=\"help\" slot=\"prefix\"></bq-icon>\n *     Help\n *   </bq-side-menu-item>\n * </bq-side-menu>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/99822d-side-menu/b/09d7b1\n * @status stable\n *\n * @attr {\"brand\" | \"default\" | \"inverse\"} appearance - It sets a predefined appearance of the side menu.\n * @attr {boolean} collapse - If `true`, the container will reduce its width.\n * @attr {\"medium\" | \"small\"} - size - It sets the size of the navigation menu items.\n *\n * @method toggleCollapse - Method to be called to toggle the collapse state of the side menu.\n *\n * @event bqCollapse - Callback handler to be called when the Side menu changes its width from expanded to collapse and vice versa.\n * @event bqSelect - Callback handler to be called when the active/selected menu item changes.\n *\n * @slot logo - The section for displaying the logo or brand in the side menu.\n * @slot The main section that holds all menu items.\n * @slot footer - The section for adding footer content to the side menu.\n *\n * @part base - HTML `<aside>` root container\n * @part footer - HTML `<div>` element that holds the footer\n * @part logo - HTML `<div>` element that holds the logo\n * @part nav - HTML `<nav>` element that holds the navigation items\n *\n * @cssprop --bq-side-menu--bg-color - Side menu background color\n * @cssprop --bq-side-menu--brand-color - Side menu logo color\n * @cssprop --bq-side-menu--border-color - Side menu border color\n */\n@Component({\n  tag: 'bq-side-menu',\n  styleUrl: './scss/bq-side-menu.scss',\n  shadow: true,\n})\nexport class BqSideMenu {\n  // Own Properties\n  // ====================\n\n  private menuItemCssSelector = 'bq-side-menu-item';\n\n  private bodyCss = 'bq-body--side-menu';\n  private bodyCssExpand = 'bq-body--side-menu__expand';\n  private bodyCssCollapse = 'bq-body--side-menu__collapse';\n\n  private menuElem: HTMLElement;\n\n  // Reference to host HTML element\n  // ===================================\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() private documentBody: HTMLBodyElement;\n\n  // Public Property API\n  // ========================\n\n  /** It sets a predefined appearance of the side menu */\n  @Prop({ reflect: true }) appearance: TSideMenuAppearance = 'default';\n\n  /** If true, the container will reduce its width */\n  @Prop({ reflect: true }) collapse: boolean = false;\n\n  /** It sets the size of the navigation menu items */\n  @Prop({ reflect: true }) size: TSideMenuSize = 'medium';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('collapse')\n  onCollapsePropChange() {\n    this.handleCollapse();\n    this.bqCollapse.emit({ collapse: this.collapse });\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  /** Callback handler to be called when the Side menu changes its width from expanded to collapse and vice versa */\n  @Event() bqCollapse: EventEmitter<{ collapse: boolean }>;\n\n  /** Callback handler to be called when the active/selected menu item changes */\n  @Event() bqSelect: EventEmitter<HTMLBqSideMenuItemElement>;\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentDidLoad() {\n    if (!isClient()) return;\n\n    this.documentBody = document.querySelector('body');\n    this.documentBody.classList.add(this.bodyCss);\n    this.handleCollapse();\n  }\n\n  disconnectedCallback() {\n    this.cleanDocumentBodyClass();\n  }\n\n  // Listeners\n  // ==============\n\n  @Listen('bqClick', { passive: true })\n  onMenuItemClick(event: Event) {\n    const { target: item } = event;\n    if (!isHTMLElement(item, 'bq-side-menu-item')) return;\n\n    this.menuItems.forEach(\n      (menuItem: HTMLBqSideMenuItemElement) => (menuItem.active = !menuItem.disabled && menuItem === item),\n    );\n    this.bqSelect.emit(item);\n  }\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  /** Toggle the collapse state of the side menu */\n  @Method()\n  async toggleCollapse() {\n    this.collapse = !this.collapse;\n  }\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private get menuItems() {\n    if (!this.menuElem) return [];\n\n    const slot = this.menuElem.querySelector('slot');\n    return [...slot.assignedElements({ flatten: true })].filter(\n      (el: HTMLBqSideMenuItemElement) => el.tagName.toLowerCase() === this.menuItemCssSelector,\n    ) as [HTMLBqSideMenuItemElement];\n  }\n\n  private handleCollapse = () => {\n    if (!this.menuItems.length) return;\n\n    this.menuItems.forEach((menuItem: HTMLBqSideMenuItemElement) => (menuItem.collapse = this.collapse));\n    if (this.collapse) {\n      this.collapseDocumentBody();\n    } else {\n      this.expandDocumentBody();\n    }\n  };\n\n  private collapseDocumentBody = () => {\n    if (!this.collapse) return;\n\n    this.documentBody.classList.remove(this.bodyCssExpand);\n    this.documentBody.classList.add(this.bodyCssCollapse);\n  };\n\n  private expandDocumentBody = () => {\n    if (this.collapse) return;\n\n    this.documentBody.classList.remove(this.bodyCssCollapse);\n    this.documentBody.classList.add(this.bodyCssExpand);\n  };\n\n  private cleanDocumentBodyClass = () => {\n    this.documentBody.classList.remove(this.bodyCss, this.bodyCssCollapse, this.bodyCssExpand);\n  };\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <aside class={{ 'bq-side-menu overflow-y-auto': true, 'is-collapsed': this.collapse }} part=\"base\">\n        {/* Company logo and name */}\n        <div class={{ 'bq-side-menu--logo': true, 'is-collapsed': this.collapse }} part=\"logo\">\n          <slot name=\"logo\" />\n        </div>\n        {/* Navigation content */}\n        <nav\n          class=\"bq-side-menu--nav flex flex-col gap-y-xs px-xs pt-xs2\"\n          ref={(navElem) => (this.menuElem = navElem)}\n          // eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role\n          role=\"menu\"\n          part=\"nav\"\n        >\n          <slot />\n        </nav>\n        {/* Footer */}\n        <div\n          class=\"bq-side-menu--footer sticky flex justify-center bg-[var(--bq-side-menu--bg-color)] p-xs inset-be-0 m-bs-[auto]\"\n          part=\"footer\"\n        >\n          <slot name=\"footer\"></slot>\n        </div>\n      </aside>\n    );\n  }\n}\n"]}