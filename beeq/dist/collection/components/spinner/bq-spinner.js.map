{"version":3,"file":"bq-spinner.js","sourceRoot":"","sources":["../../../../../../src/components/spinner/bq-spinner.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, h, Prop, State, Watch } from '@stencil/core';\n\nimport { SPINNER_SIZE, SPINNER_TEXT_POSITION, TSpinnerSize, TSpinnerTextPosition } from './bq-spinner.types';\nimport {\n  getCSSVariableValue,\n  getTextContent,\n  hasSlotContent,\n  isHTMLElement,\n  isNil,\n  validatePropValue,\n} from '../../shared/utils';\n\n/**\n * Spinners are designed for users to display data loading.\n *\n * @example How to use it\n * ```html\n * <bq-spinner size=\"medium\" text-position=\"bellow\">\n *   <span>Loading...</span>\n * </bq-spinner>\n * ```\n *\n * @documentation https://www.beeq.design/3d466e231/p/275f10-spinner/b/09d7b1\n * @status stable\n *\n * @attr {boolean} animation - IfÂ `false`, the animation on the icon element will be stopped.\n * @attr {\"small\" | \"medium\" | \"large\"} size - It defines the size of the icon element displayed.\n * @attr {\"above\" | \"below\" | \"left\" | \"right\" | \"none\"} text-position - It defines the position of the label text.\n *\n * @slot icon - The icon slot container.\n * @slot - The content of the spinner component.\n *\n * @part base - The div wrapper container used under the hood.\n * @part icon - The `<svg>` icon element used to spin/animate.\n * @part custom-icon - The `<span>` tag element that holds the custom icon element passed.\n * @part text - The `<span>` tag element that renders the label text inside the component.\n *\n * @cssprop --bq-spinner--color - Spinner color\n * @cssprop --bq-spinner--size-large - Spinner large size\n * @cssprop --bq-spinner--size-medium - Spinner medium size\n * @cssprop --bq-spinner--size-small - Spinner small size\n * @cssprop --bq-spinner--large-text-fontSize - Spinner large text font size\n * @cssprop --bq-spinner--medium-text-fontSize - Spinner medium text font size\n * @cssprop --bq-spinner--small-text-fontSize - Spinner small text font size\n * @cssprop --bq-spinner--text-lineHeight - Spinner text line height\n */\n@Component({\n  tag: 'bq-spinner',\n  styleUrl: './scss/bq-spinner.scss',\n  shadow: true,\n})\nexport class BqSpinner {\n  // Own Properties\n  // ====================\n\n  private iconSlotElem: HTMLElement;\n  private slotElem: HTMLElement;\n  private observer: MutationObserver = new MutationObserver((mutations) => {\n    const [mutation] = mutations;\n    this.slotContentLength = mutation.target.textContent.length;\n  });\n\n  // Reference to host HTML element\n  // ===================================\n\n  @Element() el!: HTMLBqSpinnerElement;\n\n  // State() variables\n  // Inlined decorator, alphabetical order\n  // =======================================\n\n  @State() private hasIconSlot = false;\n  @State() private hasSlot = false;\n  @State() private slotContentLength = 0;\n\n  // Public Property API\n  // ========================\n\n  /** If `false`, the animation on the icon element will be stopped */\n  @Prop({ reflect: true }) animation? = true;\n\n  /** It defines the position of the label text */\n  @Prop({ reflect: true }) textPosition: TSpinnerTextPosition = 'none';\n\n  /** It defines the size of the icon element displayed */\n  @Prop({ reflect: true }) size: TSpinnerSize = 'medium';\n\n  // Prop lifecycle events\n  // =======================\n\n  @Watch('textPosition')\n  handleTextPositionProp() {\n    validatePropValue(SPINNER_TEXT_POSITION, 'none', this.el, 'textPosition');\n  }\n\n  @Watch('size')\n  handleSizeProp() {\n    validatePropValue(SPINNER_SIZE, 'medium', this.el, 'size');\n    this.setIconSize();\n  }\n\n  @Watch('hasIconSlot')\n  handleHasIconSlot() {\n    this.setIconSize();\n  }\n\n  // Events section\n  // Requires JSDocs for public API documentation\n  // ==============================================\n\n  // Component lifecycle events\n  // Ordered by their natural call order\n  // =====================================\n\n  componentWillLoad() {\n    this.checkPropValues();\n  }\n\n  componentDidLoad() {\n    this.setIconSize();\n  }\n\n  disconnectedCallback() {\n    this.observer?.disconnect();\n  }\n\n  // Listeners\n  // ==============\n\n  // Public methods API\n  // These methods are exposed on the host element.\n  // Always use two lines.\n  // Public Methods must be async.\n  // Requires JSDocs for public API documentation.\n  // ===============================================\n\n  // Local methods\n  // Internal business logic.\n  // These methods cannot be called from the host element.\n  // =======================================================\n\n  private handleSlotChange = () => {\n    if (!this.slotElem) return;\n\n    this.hasSlot = hasSlotContent(this.slotElem);\n    if (!this.hasSlot) return;\n\n    const slot = this.slotElem.querySelector('slot') ?? null;\n    if (isNil(slot)) return;\n\n    this.slotContentLength = getTextContent(slot, { recurse: true }).length;\n    const nodes = slot.assignedNodes({ flatten: true });\n    nodes.forEach((node) => {\n      this.observer.observe(node, {\n        characterData: true,\n        childList: true,\n        subtree: true,\n      });\n    });\n  };\n\n  private handleIconSlotChange = (): void => {\n    this.hasIconSlot = hasSlotContent(this.iconSlotElem, 'icon');\n  };\n\n  private checkPropValues = (): void => {\n    validatePropValue(SPINNER_TEXT_POSITION, 'none', this.el, 'textPosition');\n    validatePropValue(SPINNER_SIZE, 'medium', this.el, 'size');\n  };\n\n  private get isTextDisplayed(): boolean {\n    return this.textPosition !== 'none';\n  }\n\n  private setIconSize(): void {\n    if (!this.hasIconSlot || !this.bqIcon) return;\n\n    this.bqIcon.size = parseInt(getCSSVariableValue(`bq-spinner--size-${this.size}`, this.el)).toString();\n  }\n\n  private get bqIcon(): HTMLBqIconElement | null {\n    if (!this.hasIconSlot) return null;\n\n    const slot = this.iconSlotElem.querySelector('slot');\n\n    return [...slot.assignedElements({ flatten: true })].filter((el: Element) =>\n      isHTMLElement(el, 'bq-icon'),\n    )[0] as HTMLBqIconElement;\n  }\n\n  // render() function\n  // Always the last one in the class.\n  // ===================================\n\n  render() {\n    return (\n      <div\n        class={{\n          [`bq-spinner ${this.size} text-${this.textPosition}`]: true,\n          'is-animated': this.animation,\n          'has-text': !!this.slotContentLength,\n        }}\n        part=\"base\"\n      >\n        {!this.hasIconSlot && (\n          <div\n            class={`bq-spinner--loader ${this.size} relative text-[--bq-spinner--color]`}\n            aria-label=\"Loading...\"\n            role=\"status\"\n          >\n            <svg class=\"bs-full is-full\" fill=\"currentColor\" viewBox=\"0 0 48 48\">\n              <path\n                fill=\"currentColor\"\n                d=\"M10.27 7.637c-.937-1.117-.798-2.796.415-3.605a24 24 0 0 1 37.09 23.249c-.2 1.444-1.65 2.301-3.064 1.944-1.414-.356-2.25-1.793-2.096-3.242A18.72 18.72 0 0 0 14.102 8.11c-1.237.77-2.895.643-3.832-.474Z\"\n              />\n              <path\n                fill=\"currentColor\"\n                d=\"M48 24c0 13.255-10.745 24-24 24S0 37.255 0 24 10.745 0 24 0s24 10.745 24 24ZM5.28 24c0 10.339 8.381 18.72 18.72 18.72 10.339 0 18.72-8.381 18.72-18.72 0-10.339-8.381-18.72-18.72-18.72C13.661 5.28 5.28 13.661 5.28 24Z\"\n                opacity=\".1\"\n              />\n            </svg>\n          </div>\n        )}\n        <span\n          class={{\n            'bq-spinner--icon': true,\n            flex: this.hasIconSlot,\n            '!hidden': !this.hasIconSlot,\n          }}\n          ref={(spanElem) => (this.iconSlotElem = spanElem)}\n          part=\"custom-icon\"\n        >\n          <slot name=\"icon\" onSlotchange={this.handleIconSlotChange} />\n        </span>\n        <span\n          class={{\n            'bq-spinner--text font-medium leading-regular text-primary': true,\n            '!hidden': !this.isTextDisplayed,\n          }}\n          part=\"text\"\n          ref={(spanElem) => (this.slotElem = spanElem)}\n        >\n          <slot onSlotchange={this.handleSlotChange} />\n        </span>\n      </div>\n    );\n  }\n}\n"]}